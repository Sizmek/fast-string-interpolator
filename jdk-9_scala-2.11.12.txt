[info] Loading settings from idea.sbt,build.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/project
[info] Loading settings from release.sbt,build.sbt,version.sbt ...
[info] Set current project to fast-string-interpolator (in build file:/home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/)
[info] Setting Scala version to 2.11.12 on 3 projects.
[info] Excluded 1 projects, run ++ 2.11.12 -v for more details.
[info] Reapplying settings...
[info] Set current project to fast-string-interpolator (in build file:/home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/)
[success] Total time: 0 s, completed Mar 28, 2018 6:59:29 PM
[info] Updating macros...
[info] Done updating.
[info] Updating benchmark-core...
[info] Done updating.
[info] Updating benchmark...
[info] Done updating.
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/macros/target/scala-2.11/classes ...
[info] Done compiling.
[info] Compiling 2 Scala sources to /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark-core/target/scala-2.11/classes ...
[info] Packaging /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/macros/target/scala-2.11/macros_2.11-0.1.1-SNAPSHOT.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark-core/target/scala-2.11/benchmark-core_2.11-0.1.1-SNAPSHOT.jar ...
[info] Compiling 2 Scala sources to /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.11/classes ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.11/benchmark_2.11-0.1.1-SNAPSHOT.jar ...
[info] Done packaging.
Processing 14 classes from /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.11/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.11/src_managed/jmh and resources to /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.11/resource_managed/jmh
[info] Compiling 2 Scala sources to /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.11/test-classes ...
[info] Compiling 28 Java sources to /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.11/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.11/benchmark_2.11-0.1.1-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.11/benchmark_2.11-0.1.1-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -jvm /usr/lib/jvm/java-9-oracle/bin/java -prof gc -rf json -rff jdk-9_scala-2.11.12.json .*Benchmark.*
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fInterpolator
[info] # Run progress: 0.00% complete, ETA 00:03:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13318.311 ops/s
[info] # Warmup Iteration   2: 24940.666 ops/s
[info] # Warmup Iteration   3: 25761.212 ops/s
[info] # Warmup Iteration   4: 25774.810 ops/s
[info] # Warmup Iteration   5: 25175.662 ops/s
[info] Iteration   1: 25622.184 ops/s
[info]                  ·gc.alloc.rate:                                  1126.712 MB/sec
[info]                  ·gc.alloc.rate.norm:                             69216.017 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.078 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 4.812 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1019.060 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       62602.774 B/op
[info]                  ·gc.churn.G1_Survivor_Space:                     1.998 MB/sec
[info]                  ·gc.churn.G1_Survivor_Space.norm:                122.751 B/op
[info]                  ·gc.count:                                       3.000 counts
[info]                  ·gc.time:                                        6.000 ms
[info] Iteration   2: 25209.410 ops/s
[info]                  ·gc.alloc.rate:                                  1108.744 MB/sec
[info]                  ·gc.alloc.rate.norm:                             69216.016 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.004 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.253 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1021.274 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       63755.484 B/op
[info]                  ·gc.count:                                       3.000 counts
[info]                  ·gc.time:                                        2.000 ms
[info] Iteration   3: 26200.934 ops/s
[info]                  ·gc.alloc.rate:                                  1152.148 MB/sec
[info]                  ·gc.alloc.rate.norm:                             69216.016 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.062 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1361.336 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       81783.086 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Iteration   4: 24950.514 ops/s
[info]                  ·gc.alloc.rate:            1097.175 MB/sec
[info]                  ·gc.alloc.rate.norm:       69216.019 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1021.066 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 64414.627 B/op
[info]                  ·gc.count:                 3.000 counts
[info]                  ·gc.time:                  3.000 ms
[info] Iteration   5: 25152.940 ops/s
[info]                  ·gc.alloc.rate:                                  1105.972 MB/sec
[info]                  ·gc.alloc.rate.norm:                             69216.016 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.182 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1020.948 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       63894.865 B/op
[info]                  ·gc.count:                                       3.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fInterpolator":
[info]   25427.196 ±(99.9%) 1912.344 ops/s [Average]
[info]   (min, avg, max) = (24950.514, 25427.196, 26200.934), stdev = 496.630
[info]   CI (99.9%): [23514.853, 27339.540] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fInterpolator:·gc.alloc.rate":
[info]   1118.150 ±(99.9%) 84.054 MB/sec [Average]
[info]   (min, avg, max) = (1097.175, 1118.150, 1152.148), stdev = 21.828
[info]   CI (99.9%): [1034.097, 1202.204] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fInterpolator:·gc.alloc.rate.norm":
[info]   69216.017 ±(99.9%) 0.005 B/op [Average]
[info]   (min, avg, max) = (69216.016, 69216.017, 69216.019), stdev = 0.001
[info]   CI (99.9%): [69216.012, 69216.022] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.017 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.078), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.149] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   1.062 ±(99.9%) 8.082 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.062, 4.812), stdev = 2.099
[info]   CI (99.9%): [≈ 0, 9.144] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fInterpolator:·gc.churn.G1_Old_Gen":
[info]   1088.737 ±(99.9%) 586.800 MB/sec [Average]
[info]   (min, avg, max) = (1019.060, 1088.737, 1361.336), stdev = 152.390
[info]   CI (99.9%): [501.936, 1675.537] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   67290.167 ±(99.9%) 31300.973 B/op [Average]
[info]   (min, avg, max) = (62602.774, 67290.167, 81783.086), stdev = 8128.763
[info]   CI (99.9%): [35989.194, 98591.140] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fInterpolator:·gc.churn.G1_Survivor_Space":
[info]   0.400 ±(99.9%) 3.441 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.998), stdev = 0.894
[info]   CI (99.9%): [≈ 0, 3.841] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fInterpolator:·gc.churn.G1_Survivor_Space.norm":
[info]   24.550 ±(99.9%) 211.384 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 24.550, 122.751), stdev = 54.896
[info]   CI (99.9%): [≈ 0, 235.934] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fInterpolator:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fInterpolator:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.400, 6.000), stdev = 1.517
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fastInterpolator
[info] # Run progress: 5.00% complete, ETA 00:04:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 169216.984 ops/s
[info] # Warmup Iteration   2: 206346.523 ops/s
[info] # Warmup Iteration   3: 205247.533 ops/s
[info] # Warmup Iteration   4: 204480.643 ops/s
[info] # Warmup Iteration   5: 208696.082 ops/s
[info] Iteration   1: 207527.564 ops/s
[info]                  ·gc.alloc.rate:            1390.063 MB/sec
[info]                  ·gc.alloc.rate.norm:       10544.002 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1361.318 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 10325.970 B/op
[info]                  ·gc.count:                 4.000 counts
[info]                  ·gc.time:                  4.000 ms
[info] Iteration   2: 205835.032 ops/s
[info]                  ·gc.alloc.rate:                                  1379.129 MB/sec
[info]                  ·gc.alloc.rate.norm:                             10544.002 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.011 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1361.731 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       10410.988 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Iteration   3: 209678.204 ops/s
[info]                  ·gc.alloc.rate:            1404.646 MB/sec
[info]                  ·gc.alloc.rate.norm:       10544.002 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1701.888 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 12775.256 B/op
[info]                  ·gc.count:                 5.000 counts
[info]                  ·gc.time:                  4.000 ms
[info] Iteration   4: 204789.510 ops/s
[info]                  ·gc.alloc.rate:                                  1371.716 MB/sec
[info]                  ·gc.alloc.rate.norm:                             10544.002 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.005 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.037 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1361.322 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       10464.105 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   5: 207063.811 ops/s
[info]                  ·gc.alloc.rate:                                  1386.946 MB/sec
[info]                  ·gc.alloc.rate.norm:                             10544.002 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.020 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1361.303 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       10349.055 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fastInterpolator":
[info]   206978.824 ±(99.9%) 7125.343 ops/s [Average]
[info]   (min, avg, max) = (204789.510, 206978.824, 209678.204), stdev = 1850.429
[info]   CI (99.9%): [199853.481, 214104.167] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fastInterpolator:·gc.alloc.rate":
[info]   1386.500 ±(99.9%) 47.749 MB/sec [Average]
[info]   (min, avg, max) = (1371.716, 1386.500, 1404.646), stdev = 12.400
[info]   CI (99.9%): [1338.751, 1434.249] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fastInterpolator:·gc.alloc.rate.norm":
[info]   10544.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10544.002, 10544.002, 10544.002), stdev = 0.001
[info]   CI (99.9%): [10544.002, 10544.002] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fastInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.002 ±(99.9%) 0.008 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.005), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.010] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fastInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.014 ±(99.9%) 0.059 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.014, 0.037), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.073] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fastInterpolator:·gc.churn.G1_Old_Gen":
[info]   1429.513 ±(99.9%) 586.310 MB/sec [Average]
[info]   (min, avg, max) = (1361.303, 1429.513, 1701.888), stdev = 152.263
[info]   CI (99.9%): [843.203, 2015.822] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fastInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   10865.075 ±(99.9%) 4117.072 B/op [Average]
[info]   (min, avg, max) = (10325.970, 10865.075, 12775.256), stdev = 1069.190
[info]   CI (99.9%): [6748.003, 14982.147] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fastInterpolator:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fastInterpolator:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.frawInterpolator
[info] # Run progress: 10.00% complete, ETA 00:04:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 152724.814 ops/s
[info] # Warmup Iteration   2: 191492.795 ops/s
[info] # Warmup Iteration   3: 193627.007 ops/s
[info] # Warmup Iteration   4: 186136.346 ops/s
[info] # Warmup Iteration   5: 195173.432 ops/s
[info] Iteration   1: 193593.940 ops/s
[info]                  ·gc.alloc.rate:            1587.928 MB/sec
[info]                  ·gc.alloc.rate.norm:       12912.002 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1701.689 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 13837.029 B/op
[info]                  ·gc.count:                 5.000 counts
[info]                  ·gc.time:                  7.000 ms
[info] Iteration   2: 195271.256 ops/s
[info]                  ·gc.alloc.rate:                                  1602.039 MB/sec
[info]                  ·gc.alloc.rate.norm:                             12912.002 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.002 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1361.613 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       10974.231 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Iteration   3: 195567.396 ops/s
[info]                  ·gc.alloc.rate:                                  1604.292 MB/sec
[info]                  ·gc.alloc.rate.norm:                             12912.002 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.002 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.020 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.805 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       13696.820 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   4: 194432.821 ops/s
[info]                  ·gc.alloc.rate:                                  1595.005 MB/sec
[info]                  ·gc.alloc.rate.norm:                             12912.002 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.011 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.916 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       13777.470 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   5: 193771.825 ops/s
[info]                  ·gc.alloc.rate:            1590.009 MB/sec
[info]                  ·gc.alloc.rate.norm:       12912.002 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1361.834 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 11059.056 B/op
[info]                  ·gc.count:                 4.000 counts
[info]                  ·gc.time:                  4.000 ms
[info] Result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.frawInterpolator":
[info]   194527.447 ±(99.9%) 3382.271 ops/s [Average]
[info]   (min, avg, max) = (193593.940, 194527.447, 195567.396), stdev = 878.365
[info]   CI (99.9%): [191145.177, 197909.718] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.frawInterpolator:·gc.alloc.rate":
[info]   1595.855 ±(99.9%) 27.711 MB/sec [Average]
[info]   (min, avg, max) = (1587.928, 1595.855, 1604.292), stdev = 7.196
[info]   CI (99.9%): [1568.144, 1623.566] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.frawInterpolator:·gc.alloc.rate.norm":
[info]   12912.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (12912.002, 12912.002, 12912.002), stdev = 0.001
[info]   CI (99.9%): [12912.002, 12912.002] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.frawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.001 ±(99.9%) 0.004 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.002), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.005] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.frawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.007 ±(99.9%) 0.033 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.020), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.039] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Old_Gen":
[info]   1565.771 ±(99.9%) 717.257 MB/sec [Average]
[info]   (min, avg, max) = (1361.613, 1565.771, 1701.916), stdev = 186.269
[info]   CI (99.9%): [848.514, 2283.028] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   12668.921 ±(99.9%) 5812.295 B/op [Average]
[info]   (min, avg, max) = (10974.231, 12668.921, 13837.029), stdev = 1509.434
[info]   CI (99.9%): [6856.627, 18481.216] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.frawInterpolator:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.frawInterpolator:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 7.000), stdev = 1.517
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fsInterpolator
[info] # Run progress: 15.00% complete, ETA 00:04:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 148222.914 ops/s
[info] # Warmup Iteration   2: 181832.915 ops/s
[info] # Warmup Iteration   3: 181511.891 ops/s
[info] # Warmup Iteration   4: 187447.323 ops/s
[info] # Warmup Iteration   5: 185491.825 ops/s
[info] Iteration   1: 187442.042 ops/s
[info]                  ·gc.alloc.rate:                                  1535.432 MB/sec
[info]                  ·gc.alloc.rate.norm:                             12896.002 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.528 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       14291.035 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   2: 187026.689 ops/s
[info]                  ·gc.alloc.rate:                                  1532.994 MB/sec
[info]                  ·gc.alloc.rate.norm:                             12896.002 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      ≈ 10⁻³ MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.004 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1362.069 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       11458.132 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Iteration   3: 184439.757 ops/s
[info]                  ·gc.alloc.rate:            1511.087 MB/sec
[info]                  ·gc.alloc.rate.norm:       12896.002 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1361.427 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 11618.760 B/op
[info]                  ·gc.count:                 4.000 counts
[info]                  ·gc.time:                  4.000 ms
[info] Iteration   4: 188404.753 ops/s
[info]                  ·gc.alloc.rate:                                  1543.401 MB/sec
[info]                  ·gc.alloc.rate.norm:                             12896.002 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.004 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.033 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.600 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       14217.848 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        7.000 ms
[info] Iteration   5: 187366.833 ops/s
[info]                  ·gc.alloc.rate:            1535.004 MB/sec
[info]                  ·gc.alloc.rate.norm:       12896.002 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1701.725 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 14296.678 B/op
[info]                  ·gc.count:                 5.000 counts
[info]                  ·gc.time:                  4.000 ms
[info] Result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fsInterpolator":
[info]   186936.015 ±(99.9%) 5723.871 ops/s [Average]
[info]   (min, avg, max) = (184439.757, 186936.015, 188404.753), stdev = 1486.471
[info]   CI (99.9%): [181212.143, 192659.886] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fsInterpolator:·gc.alloc.rate":
[info]   1531.584 ±(99.9%) 46.696 MB/sec [Average]
[info]   (min, avg, max) = (1511.087, 1531.584, 1543.401), stdev = 12.127
[info]   CI (99.9%): [1484.887, 1578.280] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fsInterpolator:·gc.alloc.rate.norm":
[info]   12896.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (12896.002, 12896.002, 12896.002), stdev = 0.001
[info]   CI (99.9%): [12896.002, 12896.003] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fsInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.001 ±(99.9%) 0.007 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.004), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.007] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fsInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.008 ±(99.9%) 0.055 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.033), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.062] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Old_Gen":
[info]   1565.670 ±(99.9%) 716.815 MB/sec [Average]
[info]   (min, avg, max) = (1361.427, 1565.670, 1701.725), stdev = 186.155
[info]   CI (99.9%): [848.855, 2282.485] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   13176.490 ±(99.9%) 5763.353 B/op [Average]
[info]   (min, avg, max) = (11458.132, 13176.490, 14296.678), stdev = 1496.724
[info]   CI (99.9%): [7413.137, 18939.843] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fsInterpolator:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fsInterpolator:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.600, 7.000), stdev = 1.517
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.javaStringBuilder
[info] # Run progress: 20.00% complete, ETA 00:04:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 404522.212 ops/s
[info] # Warmup Iteration   2: 440898.864 ops/s
[info] # Warmup Iteration   3: 464299.616 ops/s
[info] # Warmup Iteration   4: 463708.663 ops/s
[info] # Warmup Iteration   5: 450682.558 ops/s
[info] Iteration   1: 450425.341 ops/s
[info]                  ·gc.alloc.rate:                                  1080.433 MB/sec
[info]                  ·gc.alloc.rate.norm:                             3776.001 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.036 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.126 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1359.313 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       4750.660 B/op
[info]                  ·gc.churn.G1_Survivor_Space:                     1.998 MB/sec
[info]                  ·gc.churn.G1_Survivor_Space.norm:                6.983 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        6.000 ms
[info] Iteration   2: 452930.194 ops/s
[info]                  ·gc.alloc.rate:            1086.671 MB/sec
[info]                  ·gc.alloc.rate.norm:       3776.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1021.189 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 3548.461 B/op
[info]                  ·gc.count:                 3.000 counts
[info]                  ·gc.time:                  9.000 ms
[info] Iteration   3: 453458.035 ops/s
[info]                  ·gc.alloc.rate:            1088.124 MB/sec
[info]                  ·gc.alloc.rate.norm:       3776.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1021.366 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 3544.338 B/op
[info]                  ·gc.count:                 3.000 counts
[info]                  ·gc.time:                  2.000 ms
[info] Iteration   4: 465324.215 ops/s
[info]                  ·gc.alloc.rate:            1116.216 MB/sec
[info]                  ·gc.alloc.rate.norm:       3776.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1021.023 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 3453.977 B/op
[info]                  ·gc.count:                 3.000 counts
[info]                  ·gc.time:                  3.000 ms
[info] Iteration   5: 464509.300 ops/s
[info]                  ·gc.alloc.rate:                                  1114.396 MB/sec
[info]                  ·gc.alloc.rate.norm:                             3776.001 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.009 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1361.560 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       4613.491 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.javaStringBuilder":
[info]   457329.417 ±(99.9%) 27055.710 ops/s [Average]
[info]   (min, avg, max) = (450425.341, 457329.417, 465324.215), stdev = 7026.282
[info]   CI (99.9%): [430273.707, 484385.127] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.javaStringBuilder:·gc.alloc.rate":
[info]   1097.168 ±(99.9%) 64.768 MB/sec [Average]
[info]   (min, avg, max) = (1080.433, 1097.168, 1116.216), stdev = 16.820
[info]   CI (99.9%): [1032.400, 1161.936] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.javaStringBuilder:·gc.alloc.rate.norm":
[info]   3776.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3776.001, 3776.001, 3776.001), stdev = 0.001
[info]   CI (99.9%): [3776.001, 3776.001] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.javaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.008 ±(99.9%) 0.061 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.036), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.069] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.javaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.027 ±(99.9%) 0.213 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.027, 0.126), stdev = 0.055
[info]   CI (99.9%): [≈ 0, 0.240] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Old_Gen":
[info]   1156.890 ±(99.9%) 715.501 MB/sec [Average]
[info]   (min, avg, max) = (1021.023, 1156.890, 1361.560), stdev = 185.813
[info]   CI (99.9%): [441.389, 1872.392] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Old_Gen.norm":
[info]   3982.185 ±(99.9%) 2471.569 B/op [Average]
[info]   (min, avg, max) = (3453.977, 3982.185, 4750.660), stdev = 641.859
[info]   CI (99.9%): [1510.616, 6453.755] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Survivor_Space":
[info]   0.400 ±(99.9%) 3.441 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.998), stdev = 0.894
[info]   CI (99.9%): [≈ 0, 3.840] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Survivor_Space.norm":
[info]   1.397 ±(99.9%) 12.025 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.397, 6.983), stdev = 3.123
[info]   CI (99.9%): [≈ 0, 13.421] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.javaStringBuilder:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.javaStringBuilder:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.600, 9.000), stdev = 2.881
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.pInterpolator
[info] # Run progress: 25.00% complete, ETA 00:03:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 198949.863 ops/s
[info] # Warmup Iteration   2: 242764.239 ops/s
[info] # Warmup Iteration   3: 245614.949 ops/s
[info] # Warmup Iteration   4: 242854.011 ops/s
[info] # Warmup Iteration   5: 246374.059 ops/s
[info] Iteration   1: 249354.709 ops/s
[info]                  ·gc.alloc.rate:                                  2001.653 MB/sec
[info]                  ·gc.alloc.rate.norm:                             12632.002 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      ≈ 10⁻³ MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.003 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1702.222 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       10742.357 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   2: 242234.515 ops/s
[info]                  ·gc.alloc.rate:                                  1943.963 MB/sec
[info]                  ·gc.alloc.rate.norm:                             12632.002 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.002 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.011 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.119 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       13269.827 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        6.000 ms
[info] Iteration   3: 241555.471 ops/s
[info]                  ·gc.alloc.rate:                                  1938.360 MB/sec
[info]                  ·gc.alloc.rate.norm:                             12632.002 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.017 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.016 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       13307.507 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   4: 241097.852 ops/s
[info]                  ·gc.alloc.rate:                                  1935.605 MB/sec
[info]                  ·gc.alloc.rate.norm:                             12632.002 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.010 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.935 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       13332.451 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        6.000 ms
[info] Iteration   5: 249126.604 ops/s
[info]                  ·gc.alloc.rate:                                  1999.782 MB/sec
[info]                  ·gc.alloc.rate.norm:                             12632.002 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.008 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1702.207 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       10752.316 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.pInterpolator":
[info]   244673.830 ±(99.9%) 16131.379 ops/s [Average]
[info]   (min, avg, max) = (241097.852, 244673.830, 249354.709), stdev = 4189.268
[info]   CI (99.9%): [228542.451, 260805.209] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.pInterpolator:·gc.alloc.rate":
[info]   1963.873 ±(99.9%) 130.058 MB/sec [Average]
[info]   (min, avg, max) = (1935.605, 1963.873, 2001.653), stdev = 33.776
[info]   CI (99.9%): [1833.815, 2093.930] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.pInterpolator:·gc.alloc.rate.norm":
[info]   12632.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (12632.002, 12632.002, 12632.002), stdev = 0.001
[info]   CI (99.9%): [12632.001, 12632.002] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.pInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.002 ±(99.9%) 0.003 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 0.002, 0.003), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.005] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.pInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.010 ±(99.9%) 0.020 B/op [Average]
[info]   (min, avg, max) = (0.003, 0.010, 0.017), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.030] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.pInterpolator:·gc.churn.G1_Old_Gen":
[info]   1906.300 ±(99.9%) 717.389 MB/sec [Average]
[info]   (min, avg, max) = (1702.207, 1906.300, 2042.935), stdev = 186.304
[info]   CI (99.9%): [1188.911, 2623.689] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.pInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   12280.892 ±(99.9%) 5391.362 B/op [Average]
[info]   (min, avg, max) = (10742.357, 12280.892, 13332.451), stdev = 1400.120
[info]   CI (99.9%): [6889.530, 17672.254] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.pInterpolator:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.pInterpolator:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 6.000), stdev = 0.837
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.rawInterpolator
[info] # Run progress: 30.00% complete, ETA 00:03:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 95269.380 ops/s
[info] # Warmup Iteration   2: 120588.933 ops/s
[info] # Warmup Iteration   3: 120739.397 ops/s
[info] # Warmup Iteration   4: 120794.912 ops/s
[info] # Warmup Iteration   5: 121822.651 ops/s
[info] Iteration   1: 118523.345 ops/s
[info]                  ·gc.alloc.rate:                                  2389.305 MB/sec
[info]                  ·gc.alloc.rate.norm:                             31720.003 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.017 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2383.093 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       31637.535 B/op
[info]                  ·gc.count:                                       7.000 counts
[info]                  ·gc.time:                                        6.000 ms
[info] Iteration   2: 122588.416 ops/s
[info]                  ·gc.alloc.rate:                                  2471.242 MB/sec
[info]                  ·gc.alloc.rate.norm:                             31720.004 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.034 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2383.338 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       30591.698 B/op
[info]                  ·gc.count:                                       7.000 counts
[info]                  ·gc.time:                                        6.000 ms
[info] Iteration   3: 122997.666 ops/s
[info]                  ·gc.alloc.rate:                                  2478.524 MB/sec
[info]                  ·gc.alloc.rate.norm:                             31720.003 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.017 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2722.736 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       34845.417 B/op
[info]                  ·gc.count:                                       8.000 counts
[info]                  ·gc.time:                                        7.000 ms
[info] Iteration   4: 120619.614 ops/s
[info]                  ·gc.alloc.rate:                                  2430.721 MB/sec
[info]                  ·gc.alloc.rate.norm:                             31720.003 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.019 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2382.501 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       31090.745 B/op
[info]                  ·gc.count:                                       7.000 counts
[info]                  ·gc.time:                                        6.000 ms
[info] Iteration   5: 122279.459 ops/s
[info]                  ·gc.alloc.rate:                                  2464.796 MB/sec
[info]                  ·gc.alloc.rate.norm:                             31720.003 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.036 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2383.010 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       30667.487 B/op
[info]                  ·gc.count:                                       7.000 counts
[info]                  ·gc.time:                                        6.000 ms
[info] Result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.rawInterpolator":
[info]   121401.700 ±(99.9%) 7106.094 ops/s [Average]
[info]   (min, avg, max) = (118523.345, 121401.700, 122997.666), stdev = 1845.430
[info]   CI (99.9%): [114295.607, 128507.794] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.rawInterpolator:·gc.alloc.rate":
[info]   2446.917 ±(99.9%) 142.680 MB/sec [Average]
[info]   (min, avg, max) = (2389.305, 2446.917, 2478.524), stdev = 37.053
[info]   CI (99.9%): [2304.238, 2589.597] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.rawInterpolator:·gc.alloc.rate.norm":
[info]   31720.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (31720.003, 31720.003, 31720.004), stdev = 0.001
[info]   CI (99.9%): [31720.003, 31720.004] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.rawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.002 ±(99.9%) 0.003 MB/sec [Average]
[info]   (min, avg, max) = (0.001, 0.002, 0.003), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.005] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.rawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.025 ±(99.9%) 0.036 B/op [Average]
[info]   (min, avg, max) = (0.017, 0.025, 0.036), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.061] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.rawInterpolator:·gc.churn.G1_Old_Gen":
[info]   2450.936 ±(99.9%) 585.073 MB/sec [Average]
[info]   (min, avg, max) = (2382.501, 2450.936, 2722.736), stdev = 151.941
[info]   CI (99.9%): [1865.863, 3036.008] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.rawInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   31766.577 ±(99.9%) 6818.195 B/op [Average]
[info]   (min, avg, max) = (30591.698, 31766.577, 34845.417), stdev = 1770.663
[info]   CI (99.9%): [24948.382, 38584.771] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.rawInterpolator:·gc.count":
[info]   36.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.200, 8.000), stdev = 0.447
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.rawInterpolator:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.sInterpolator
[info] # Run progress: 35.00% complete, ETA 00:03:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 83101.115 ops/s
[info] # Warmup Iteration   2: 107703.165 ops/s
[info] # Warmup Iteration   3: 106827.588 ops/s
[info] # Warmup Iteration   4: 110760.285 ops/s
[info] # Warmup Iteration   5: 107613.849 ops/s
[info] Iteration   1: 109666.610 ops/s
[info]                  ·gc.alloc.rate:                                  2226.706 MB/sec
[info]                  ·gc.alloc.rate.norm:                             31960.004 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.038 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2382.471 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       34195.709 B/op
[info]                  ·gc.count:                                       7.000 counts
[info]                  ·gc.time:                                        6.000 ms
[info] Iteration   2: 109420.248 ops/s
[info]                  ·gc.alloc.rate:                                  2221.679 MB/sec
[info]                  ·gc.alloc.rate.norm:                             31960.004 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.004 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.063 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2382.458 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       34272.888 B/op
[info]                  ·gc.count:                                       7.000 counts
[info]                  ·gc.time:                                        6.000 ms
[info] Iteration   3: 111351.954 ops/s
[info]                  ·gc.alloc.rate:                                  2260.983 MB/sec
[info]                  ·gc.alloc.rate.norm:                             31960.004 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.019 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.218 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       28867.664 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        6.000 ms
[info] Iteration   4: 110177.761 ops/s
[info]                  ·gc.alloc.rate:                                  2237.188 MB/sec
[info]                  ·gc.alloc.rate.norm:                             31960.004 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.004 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.059 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2382.673 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       34038.373 B/op
[info]                  ·gc.count:                                       7.000 counts
[info]                  ·gc.time:                                        9.000 ms
[info] Iteration   5: 109847.351 ops/s
[info]                  ·gc.alloc.rate:                                  2231.054 MB/sec
[info]                  ·gc.alloc.rate.norm:                             31960.004 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.019 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.698 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       29261.787 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.sInterpolator":
[info]   110092.785 ±(99.9%) 2911.566 ops/s [Average]
[info]   (min, avg, max) = (109420.248, 110092.785, 111351.954), stdev = 756.125
[info]   CI (99.9%): [107181.218, 113004.351] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.sInterpolator:·gc.alloc.rate":
[info]   2235.522 ±(99.9%) 59.040 MB/sec [Average]
[info]   (min, avg, max) = (2221.679, 2235.522, 2260.983), stdev = 15.333
[info]   CI (99.9%): [2176.482, 2294.562] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.sInterpolator:·gc.alloc.rate.norm":
[info]   31960.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (31960.004, 31960.004, 31960.004), stdev = 0.001
[info]   CI (99.9%): [31960.003, 31960.004] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.sInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.003 ±(99.9%) 0.006 MB/sec [Average]
[info]   (min, avg, max) = (0.001, 0.003, 0.004), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.008] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.sInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.039 ±(99.9%) 0.081 B/op [Average]
[info]   (min, avg, max) = (0.019, 0.039, 0.063), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.sInterpolator:·gc.churn.G1_Old_Gen":
[info]   2246.504 ±(99.9%) 717.249 MB/sec [Average]
[info]   (min, avg, max) = (2042.218, 2246.504, 2382.673), stdev = 186.267
[info]   CI (99.9%): [1529.254, 2963.753] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.sInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   32127.284 ±(99.9%) 10783.600 B/op [Average]
[info]   (min, avg, max) = (28867.664, 32127.284, 34272.888), stdev = 2800.467
[info]   CI (99.9%): [21343.684, 42910.884] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.sInterpolator:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.sInterpolator:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.400, 9.000), stdev = 1.517
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringBuilder
[info] # Run progress: 40.00% complete, ETA 00:03:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 374996.648 ops/s
[info] # Warmup Iteration   2: 433605.039 ops/s
[info] # Warmup Iteration   3: 446275.277 ops/s
[info] # Warmup Iteration   4: 447232.812 ops/s
[info] # Warmup Iteration   5: 455094.834 ops/s
[info] Iteration   1: 456242.962 ops/s
[info]                  ·gc.alloc.rate:                                  1099.290 MB/sec
[info]                  ·gc.alloc.rate.norm:                             3792.001 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.039 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.135 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1019.257 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       3515.928 B/op
[info]                  ·gc.churn.G1_Survivor_Space:                     1.999 MB/sec
[info]                  ·gc.churn.G1_Survivor_Space.norm:                6.894 B/op
[info]                  ·gc.count:                                       3.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   2: 457548.046 ops/s
[info]                  ·gc.alloc.rate:                                  1102.284 MB/sec
[info]                  ·gc.alloc.rate.norm:                             3792.001 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.016 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.055 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1021.106 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       3512.737 B/op
[info]                  ·gc.count:                                       3.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Iteration   3: 454284.030 ops/s
[info]                  ·gc.alloc.rate:            1094.870 MB/sec
[info]                  ·gc.alloc.rate.norm:       3792.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1361.967 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 4717.068 B/op
[info]                  ·gc.count:                 4.000 counts
[info]                  ·gc.time:                  4.000 ms
[info] Iteration   4: 460973.378 ops/s
[info]                  ·gc.alloc.rate:            1110.516 MB/sec
[info]                  ·gc.alloc.rate.norm:       3792.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1021.086 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 3486.633 B/op
[info]                  ·gc.count:                 3.000 counts
[info]                  ·gc.time:                  2.000 ms
[info] Iteration   5: 461194.945 ops/s
[info]                  ·gc.alloc.rate:                                  1111.038 MB/sec
[info]                  ·gc.alloc.rate.norm:                             3792.001 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1021.037 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       3484.827 B/op
[info]                  ·gc.count:                                       3.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringBuilder":
[info]   458048.672 ±(99.9%) 11573.841 ops/s [Average]
[info]   (min, avg, max) = (454284.030, 458048.672, 461194.945), stdev = 3005.690
[info]   CI (99.9%): [446474.831, 469622.513] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringBuilder:·gc.alloc.rate":
[info]   1103.600 ±(99.9%) 27.205 MB/sec [Average]
[info]   (min, avg, max) = (1094.870, 1103.600, 1111.038), stdev = 7.065
[info]   CI (99.9%): [1076.395, 1130.804] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringBuilder:·gc.alloc.rate.norm":
[info]   3792.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3792.001, 3792.001, 3792.001), stdev = 0.001
[info]   CI (99.9%): [3792.001, 3792.001] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.011 ±(99.9%) 0.066 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.039), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.038 ±(99.9%) 0.228 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.038, 0.135), stdev = 0.059
[info]   CI (99.9%): [≈ 0, 0.266] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Old_Gen":
[info]   1088.891 ±(99.9%) 587.824 MB/sec [Average]
[info]   (min, avg, max) = (1019.257, 1088.891, 1361.967), stdev = 152.656
[info]   CI (99.9%): [501.066, 1676.715] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Old_Gen.norm":
[info]   3743.438 ±(99.9%) 2096.540 B/op [Average]
[info]   (min, avg, max) = (3484.827, 3743.438, 4717.068), stdev = 544.465
[info]   CI (99.9%): [1646.899, 5839.978] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Survivor_Space":
[info]   0.400 ±(99.9%) 3.442 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.999), stdev = 0.894
[info]   CI (99.9%): [≈ 0, 3.841] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Survivor_Space.norm":
[info]   1.379 ±(99.9%) 11.872 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.379, 6.894), stdev = 3.083
[info]   CI (99.9%): [≈ 0, 13.251] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringBuilder:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringBuilder:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.400, 5.000), stdev = 1.140
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringConcatenation
[info] # Run progress: 45.00% complete, ETA 00:02:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 113395.741 ops/s
[info] # Warmup Iteration   2: 144577.252 ops/s
[info] # Warmup Iteration   3: 147522.758 ops/s
[info] # Warmup Iteration   4: 148444.989 ops/s
[info] # Warmup Iteration   5: 151063.281 ops/s
[info] Iteration   1: 150762.839 ops/s
[info]                  ·gc.alloc.rate:                                  2175.249 MB/sec
[info]                  ·gc.alloc.rate.norm:                             22712.003 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.002 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.018 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.042 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       21321.171 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        6.000 ms
[info] Iteration   2: 149581.566 ops/s
[info]                  ·gc.alloc.rate:                                  2158.763 MB/sec
[info]                  ·gc.alloc.rate.norm:                             22712.003 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.002 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.618 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       21490.057 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   3: 147296.984 ops/s
[info]                  ·gc.alloc.rate:                                  2126.010 MB/sec
[info]                  ·gc.alloc.rate.norm:                             22712.003 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.014 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2383.284 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       25460.445 B/op
[info]                  ·gc.count:                                       7.000 counts
[info]                  ·gc.time:                                        6.000 ms
[info] Iteration   4: 147480.698 ops/s
[info]                  ·gc.alloc.rate:                                  2128.314 MB/sec
[info]                  ·gc.alloc.rate.norm:                             22712.003 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.028 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.436 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       21795.572 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        6.000 ms
[info] Iteration   5: 147980.299 ops/s
[info]                  ·gc.alloc.rate:            2135.900 MB/sec
[info]                  ·gc.alloc.rate.norm:       22712.003 B/op
[info]                  ·gc.churn.G1_Old_Gen:      2042.599 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 21719.886 B/op
[info]                  ·gc.count:                 6.000 counts
[info]                  ·gc.time:                  5.000 ms
[info] Result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringConcatenation":
[info]   148620.477 ±(99.9%) 5767.605 ops/s [Average]
[info]   (min, avg, max) = (147296.984, 148620.477, 150762.839), stdev = 1497.829
[info]   CI (99.9%): [142852.872, 154388.082] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringConcatenation:·gc.alloc.rate":
[info]   2144.847 ±(99.9%) 82.277 MB/sec [Average]
[info]   (min, avg, max) = (2126.010, 2144.847, 2175.249), stdev = 21.367
[info]   CI (99.9%): [2062.570, 2227.124] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringConcatenation:·gc.alloc.rate.norm":
[info]   22712.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (22712.003, 22712.003, 22712.003), stdev = 0.001
[info]   CI (99.9%): [22712.002, 22712.003] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringConcatenation:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.001 ±(99.9%) 0.004 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.003), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.005] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringConcatenation:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.012 ±(99.9%) 0.045 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.028), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.058] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringConcatenation:·gc.churn.G1_Old_Gen":
[info]   2110.596 ±(99.9%) 586.982 MB/sec [Average]
[info]   (min, avg, max) = (2042.042, 2110.596, 2383.284), stdev = 152.437
[info]   CI (99.9%): [1523.613, 2697.578] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringConcatenation:·gc.churn.G1_Old_Gen.norm":
[info]   22357.426 ±(99.9%) 6718.524 B/op [Average]
[info]   (min, avg, max) = (21321.171, 22357.426, 25460.445), stdev = 1744.779
[info]   CI (99.9%): [15638.902, 29075.950] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringConcatenation:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringConcatenation:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fInterpolator
[info] # Run progress: 50.00% complete, ETA 00:02:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 291366.874 ops/s
[info] # Warmup Iteration   2: 525001.126 ops/s
[info] # Warmup Iteration   3: 540596.281 ops/s
[info] # Warmup Iteration   4: 530589.071 ops/s
[info] # Warmup Iteration   5: 531844.463 ops/s
[info] Iteration   1: 549201.057 ops/s
[info]                  ·gc.alloc.rate:            845.869 MB/sec
[info]                  ·gc.alloc.rate.norm:       2424.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:      676.821 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 1939.563 B/op
[info]                  ·gc.count:                 2.000 counts
[info]                  ·gc.time:                  6.000 ms
[info] Iteration   2: 554536.146 ops/s
[info]                  ·gc.alloc.rate:                   853.989 MB/sec
[info]                  ·gc.alloc.rate.norm:              2424.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:             1014.426 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:        2879.394 B/op
[info]                  ·gc.churn.G1_Survivor_Space:      2.664 MB/sec
[info]                  ·gc.churn.G1_Survivor_Space.norm: 7.562 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 555290.067 ops/s
[info]                  ·gc.alloc.rate:                                  855.308 MB/sec
[info]                  ·gc.alloc.rate.norm:                             2424.001 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.068 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.194 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            680.845 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       1929.560 B/op
[info]                  ·gc.count:                                       2.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Iteration   4: 551348.731 ops/s
[info]                  ·gc.alloc.rate:            849.011 MB/sec
[info]                  ·gc.alloc.rate.norm:       2424.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1021.030 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 2915.130 B/op
[info]                  ·gc.count:                 3.000 counts
[info]                  ·gc.time:                  2.000 ms
[info] Iteration   5: 554459.001 ops/s
[info]                  ·gc.alloc.rate:            853.801 MB/sec
[info]                  ·gc.alloc.rate.norm:       2424.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:      680.664 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 1932.455 B/op
[info]                  ·gc.count:                 2.000 counts
[info]                  ·gc.time:                  1.000 ms
[info] Result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fInterpolator":
[info]   552967.000 ±(99.9%) 9983.133 ops/s [Average]
[info]   (min, avg, max) = (549201.057, 552967.000, 555290.067), stdev = 2592.588
[info]   CI (99.9%): [542983.867, 562950.134] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fInterpolator:·gc.alloc.rate":
[info]   851.595 ±(99.9%) 15.384 MB/sec [Average]
[info]   (min, avg, max) = (845.869, 851.595, 855.308), stdev = 3.995
[info]   CI (99.9%): [836.211, 866.980] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fInterpolator:·gc.alloc.rate.norm":
[info]   2424.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2424.001, 2424.001, 2424.001), stdev = 0.001
[info]   CI (99.9%): [2424.001, 2424.001] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.014 ±(99.9%) 0.118 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.014, 0.068), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.131] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.039 ±(99.9%) 0.333 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.039, 0.194), stdev = 0.087
[info]   CI (99.9%): [≈ 0, 0.372] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fInterpolator:·gc.churn.G1_Old_Gen":
[info]   814.757 ±(99.9%) 713.554 MB/sec [Average]
[info]   (min, avg, max) = (676.821, 814.757, 1021.030), stdev = 185.308
[info]   CI (99.9%): [101.203, 1528.312] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   2319.220 ±(99.9%) 2032.530 B/op [Average]
[info]   (min, avg, max) = (1929.560, 2319.220, 2915.130), stdev = 527.842
[info]   CI (99.9%): [286.690, 4351.750] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fInterpolator:·gc.churn.G1_Survivor_Space":
[info]   0.533 ±(99.9%) 4.588 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.533, 2.664), stdev = 1.192
[info]   CI (99.9%): [≈ 0, 5.121] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fInterpolator:·gc.churn.G1_Survivor_Space.norm":
[info]   1.512 ±(99.9%) 13.023 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.512, 7.562), stdev = 3.382
[info]   CI (99.9%): [≈ 0, 14.535] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fInterpolator:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fInterpolator:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.000, 8.000), stdev = 2.915
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fastInterpolator
[info] # Run progress: 55.00% complete, ETA 00:02:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2721850.821 ops/s
[info] # Warmup Iteration   2: 4251425.924 ops/s
[info] # Warmup Iteration   3: 4226639.939 ops/s
[info] # Warmup Iteration   4: 4470428.802 ops/s
[info] # Warmup Iteration   5: 4482053.385 ops/s
[info] Iteration   1: 4491901.075 ops/s
[info]                  ·gc.alloc.rate:                                  1986.012 MB/sec
[info]                  ·gc.alloc.rate.norm:                             696.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2041.962 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       715.608 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   2: 4282649.748 ops/s
[info]                  ·gc.alloc.rate:                                  1893.615 MB/sec
[info]                  ·gc.alloc.rate.norm:                             696.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻³ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.089 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       750.572 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        11.000 ms
[info] Iteration   3: 4490947.751 ops/s
[info]                  ·gc.alloc.rate:            1985.664 MB/sec
[info]                  ·gc.alloc.rate.norm:       696.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      2042.027 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 715.756 B/op
[info]                  ·gc.count:                 6.000 counts
[info]                  ·gc.time:                  4.000 ms
[info] Iteration   4: 4387955.330 ops/s
[info]                  ·gc.alloc.rate:                                  1940.268 MB/sec
[info]                  ·gc.alloc.rate.norm:                             696.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.811 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       610.462 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   5: 4495190.795 ops/s
[info]                  ·gc.alloc.rate:                                  1988.328 MB/sec
[info]                  ·gc.alloc.rate.norm:                             696.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.005 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.002 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.644 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       715.013 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fastInterpolator":
[info]   4429728.940 ±(99.9%) 361610.601 ops/s [Average]
[info]   (min, avg, max) = (4282649.748, 4429728.940, 4495190.795), stdev = 93909.125
[info]   CI (99.9%): [4068118.339, 4791339.541] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fastInterpolator:·gc.alloc.rate":
[info]   1958.777 ±(99.9%) 160.236 MB/sec [Average]
[info]   (min, avg, max) = (1893.615, 1958.777, 1988.328), stdev = 41.613
[info]   CI (99.9%): [1798.541, 2119.013] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fastInterpolator:·gc.alloc.rate.norm":
[info]   696.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (696.000, 696.000, 696.000), stdev = 0.001
[info]   CI (99.9%): [696.000, 696.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fastInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.002 ±(99.9%) 0.008 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.005), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.010] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fastInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.001 ±(99.9%) 0.003 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.002), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.004] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fastInterpolator:·gc.churn.G1_Old_Gen":
[info]   1974.106 ±(99.9%) 586.137 MB/sec [Average]
[info]   (min, avg, max) = (1701.811, 1974.106, 2042.644), stdev = 152.218
[info]   CI (99.9%): [1387.969, 2560.244] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fastInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   701.482 ±(99.9%) 204.490 B/op [Average]
[info]   (min, avg, max) = (610.462, 701.482, 750.572), stdev = 53.105
[info]   CI (99.9%): [496.992, 905.972] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fastInterpolator:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fastInterpolator:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.800, 11.000), stdev = 2.950
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.frawInterpolator
[info] # Run progress: 60.00% complete, ETA 00:02:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5688751.058 ops/s
[info] # Warmup Iteration   2: 6776238.624 ops/s
[info] # Warmup Iteration   3: 6565919.779 ops/s
[info] # Warmup Iteration   4: 6584873.978 ops/s
[info] # Warmup Iteration   5: 6570004.218 ops/s
[info] Iteration   1: 6575485.844 ops/s
[info]                  ·gc.alloc.rate:            635.069 MB/sec
[info]                  ·gc.alloc.rate.norm:       152.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      676.822 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 161.993 B/op
[info]                  ·gc.count:                 2.000 counts
[info]                  ·gc.time:                  5.000 ms
[info] Iteration   2: 6581730.152 ops/s
[info]                  ·gc.alloc.rate:                   635.577 MB/sec
[info]                  ·gc.alloc.rate.norm:              152.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:             676.057 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:        161.681 B/op
[info]                  ·gc.churn.G1_Survivor_Space:      0.666 MB/sec
[info]                  ·gc.churn.G1_Survivor_Space.norm: 0.159 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 6603035.958 ops/s
[info]                  ·gc.alloc.rate:            637.723 MB/sec
[info]                  ·gc.alloc.rate.norm:       152.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      338.397 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 80.656 B/op
[info]                  ·gc.count:                 1.000 counts
[info]                  ·gc.time:                  3.000 ms
[info] Iteration   4: 6491536.478 ops/s
[info]                  ·gc.alloc.rate:                   626.897 MB/sec
[info]                  ·gc.alloc.rate.norm:              152.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:             676.756 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:        164.089 B/op
[info]                  ·gc.churn.G1_Survivor_Space:      1.998 MB/sec
[info]                  ·gc.churn.G1_Survivor_Space.norm: 0.485 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 6401092.945 ops/s
[info]                  ·gc.alloc.rate:                                  618.128 MB/sec
[info]                  ·gc.alloc.rate.norm:                             152.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.041 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.010 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            680.656 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       167.376 B/op
[info]                  ·gc.count:                                       2.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.frawInterpolator":
[info]   6530576.275 ±(99.9%) 323167.644 ops/s [Average]
[info]   (min, avg, max) = (6401092.945, 6530576.275, 6603035.958), stdev = 83925.611
[info]   CI (99.9%): [6207408.632, 6853743.919] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.frawInterpolator:·gc.alloc.rate":
[info]   630.679 ±(99.9%) 31.324 MB/sec [Average]
[info]   (min, avg, max) = (618.128, 630.679, 637.723), stdev = 8.135
[info]   CI (99.9%): [599.355, 662.003] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.frawInterpolator:·gc.alloc.rate.norm":
[info]   152.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (152.000, 152.000, 152.000), stdev = 0.001
[info]   CI (99.9%): [152.000, 152.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.frawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.008 ±(99.9%) 0.070 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.041), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.079] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.frawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.002 ±(99.9%) 0.017 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.010), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.019] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Old_Gen":
[info]   609.738 ±(99.9%) 584.122 MB/sec [Average]
[info]   (min, avg, max) = (338.397, 609.738, 680.656), stdev = 151.695
[info]   CI (99.9%): [25.616, 1193.860] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   147.159 ±(99.9%) 143.419 B/op [Average]
[info]   (min, avg, max) = (80.656, 147.159, 167.376), stdev = 37.245
[info]   CI (99.9%): [3.740, 290.578] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Survivor_Space":
[info]   0.533 ±(99.9%) 3.344 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.533, 1.998), stdev = 0.868
[info]   CI (99.9%): [≈ 0, 3.877] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Survivor_Space.norm":
[info]   0.129 ±(99.9%) 0.811 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.129, 0.485), stdev = 0.210
[info]   CI (99.9%): [≈ 0, 0.939] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.frawInterpolator:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.frawInterpolator:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 6.000), stdev = 1.342
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fsInterpolator
[info] # Run progress: 65.00% complete, ETA 00:01:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5678819.352 ops/s
[info] # Warmup Iteration   2: 6431453.961 ops/s
[info] # Warmup Iteration   3: 6436112.749 ops/s
[info] # Warmup Iteration   4: 6476720.322 ops/s
[info] # Warmup Iteration   5: 6804210.264 ops/s
[info] Iteration   1: 6806610.828 ops/s
[info]                  ·gc.alloc.rate:            657.513 MB/sec
[info]                  ·gc.alloc.rate.norm:       152.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      676.945 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 156.492 B/op
[info]                  ·gc.count:                 2.000 counts
[info]                  ·gc.time:                  5.000 ms
[info] Iteration   2: 6684348.617 ops/s
[info]                  ·gc.alloc.rate:            645.504 MB/sec
[info]                  ·gc.alloc.rate.norm:       152.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      338.383 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 79.681 B/op
[info]                  ·gc.count:                 1.000 counts
[info]                  ·gc.time:                  3.000 ms
[info] Iteration   3: 6804071.313 ops/s
[info]                  ·gc.alloc.rate:            657.367 MB/sec
[info]                  ·gc.alloc.rate.norm:       152.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      677.078 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 156.558 B/op
[info]                  ·gc.count:                 2.000 counts
[info]                  ·gc.time:                  7.000 ms
[info] Iteration   4: 6803413.579 ops/s
[info]                  ·gc.alloc.rate:                   657.217 MB/sec
[info]                  ·gc.alloc.rate.norm:              152.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:             676.975 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:        156.570 B/op
[info]                  ·gc.churn.G1_Survivor_Space:      1.999 MB/sec
[info]                  ·gc.churn.G1_Survivor_Space.norm: 0.462 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 6854416.464 ops/s
[info]                  ·gc.alloc.rate:                                  662.143 MB/sec
[info]                  ·gc.alloc.rate.norm:                             152.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.073 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.017 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            680.995 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       156.328 B/op
[info]                  ·gc.count:                                       2.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fsInterpolator":
[info]   6790572.160 ±(99.9%) 243261.243 ops/s [Average]
[info]   (min, avg, max) = (6684348.617, 6790572.160, 6854416.464), stdev = 63174.172
[info]   CI (99.9%): [6547310.917, 7033833.404] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fsInterpolator:·gc.alloc.rate":
[info]   655.949 ±(99.9%) 23.856 MB/sec [Average]
[info]   (min, avg, max) = (645.504, 655.949, 662.143), stdev = 6.195
[info]   CI (99.9%): [632.093, 679.805] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fsInterpolator:·gc.alloc.rate.norm":
[info]   152.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (152.000, 152.000, 152.000), stdev = 0.001
[info]   CI (99.9%): [152.000, 152.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fsInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.015 ±(99.9%) 0.126 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.015, 0.073), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fsInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.003 ±(99.9%) 0.029 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.017), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.032] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Old_Gen":
[info]   610.075 ±(99.9%) 584.877 MB/sec [Average]
[info]   (min, avg, max) = (338.383, 610.075, 680.995), stdev = 151.891
[info]   CI (99.9%): [25.199, 1194.952] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   141.126 ±(99.9%) 132.265 B/op [Average]
[info]   (min, avg, max) = (79.681, 141.126, 156.570), stdev = 34.349
[info]   CI (99.9%): [8.860, 273.391] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Survivor_Space":
[info]   0.400 ±(99.9%) 3.442 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.999), stdev = 0.894
[info]   CI (99.9%): [≈ 0, 3.842] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Survivor_Space.norm":
[info]   0.092 ±(99.9%) 0.796 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.092, 0.462), stdev = 0.207
[info]   CI (99.9%): [≈ 0, 0.889] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fsInterpolator:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fsInterpolator:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.600, 7.000), stdev = 1.673
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.javaStringBuilder
[info] # Run progress: 70.00% complete, ETA 00:01:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4632617.766 ops/s
[info] # Warmup Iteration   2: 4976605.753 ops/s
[info] # Warmup Iteration   3: 5261469.513 ops/s
[info] # Warmup Iteration   4: 5237412.383 ops/s
[info] # Warmup Iteration   5: 5376269.293 ops/s
[info] Iteration   1: 5314721.266 ops/s
[info]                  ·gc.alloc.rate:                                  1729.008 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1702.076 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       504.025 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   2: 5277885.708 ops/s
[info]                  ·gc.alloc.rate:                                  1717.304 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.004 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1702.323 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       507.533 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   3: 5251607.838 ops/s
[info]                  ·gc.alloc.rate:                                  1708.587 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.002 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1702.094 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       510.054 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   4: 5184184.610 ops/s
[info]                  ·gc.alloc.rate:                                  1686.380 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.004 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.839 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       516.694 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   5: 5122923.755 ops/s
[info]                  ·gc.alloc.rate:            1666.683 MB/sec
[info]                  ·gc.alloc.rate.norm:       512.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1702.051 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 522.865 B/op
[info]                  ·gc.count:                 5.000 counts
[info]                  ·gc.time:                  4.000 ms
[info] Result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.javaStringBuilder":
[info]   5230264.635 ±(99.9%) 295156.659 ops/s [Average]
[info]   (min, avg, max) = (5122923.755, 5230264.635, 5314721.266), stdev = 76651.247
[info]   CI (99.9%): [4935107.976, 5525421.295] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.javaStringBuilder:·gc.alloc.rate":
[info]   1701.592 ±(99.9%) 96.219 MB/sec [Average]
[info]   (min, avg, max) = (1666.683, 1701.592, 1729.008), stdev = 24.988
[info]   CI (99.9%): [1605.373, 1797.811] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.javaStringBuilder:·gc.alloc.rate.norm":
[info]   512.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (512.000, 512.000, 512.000), stdev = 0.001
[info]   CI (99.9%): [512.000, 512.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.javaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.002 ±(99.9%) 0.006 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.004), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.008] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.javaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.001 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.003] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Old_Gen":
[info]   1702.077 ±(99.9%) 0.661 MB/sec [Average]
[info]   (min, avg, max) = (1701.839, 1702.077, 1702.323), stdev = 0.172
[info]   CI (99.9%): [1701.415, 1702.738] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Old_Gen.norm":
[info]   512.234 ±(99.9%) 29.017 B/op [Average]
[info]   (min, avg, max) = (504.025, 512.234, 522.865), stdev = 7.536
[info]   CI (99.9%): [483.217, 541.252] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.javaStringBuilder:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.javaStringBuilder:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.pInterpolator
[info] # Run progress: 75.00% complete, ETA 00:01:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5633632.148 ops/s
[info] # Warmup Iteration   2: 6052606.853 ops/s
[info] # Warmup Iteration   3: 6253828.318 ops/s
[info] # Warmup Iteration   4: 6332207.793 ops/s
[info] # Warmup Iteration   5: 6378621.204 ops/s
[info] Iteration   1: 6216251.854 ops/s
[info]                  ·gc.alloc.rate:                                  1295.293 MB/sec
[info]                  ·gc.alloc.rate.norm:                             328.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.005 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1361.399 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       344.740 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Iteration   2: 6416328.368 ops/s
[info]                  ·gc.alloc.rate:                                  1337.501 MB/sec
[info]                  ·gc.alloc.rate.norm:                             328.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1361.936 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       333.992 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   3: 6447155.931 ops/s
[info]                  ·gc.alloc.rate:            1343.778 MB/sec
[info]                  ·gc.alloc.rate.norm:       328.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1361.701 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 332.375 B/op
[info]                  ·gc.count:                 4.000 counts
[info]                  ·gc.time:                  3.000 ms
[info] Iteration   4: 6152793.712 ops/s
[info]                  ·gc.alloc.rate:            1282.080 MB/sec
[info]                  ·gc.alloc.rate.norm:       328.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1361.365 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 348.284 B/op
[info]                  ·gc.count:                 4.000 counts
[info]                  ·gc.time:                  4.000 ms
[info] Iteration   5: 6122204.016 ops/s
[info]                  ·gc.alloc.rate:            1276.307 MB/sec
[info]                  ·gc.alloc.rate.norm:       328.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1362.050 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 350.035 B/op
[info]                  ·gc.count:                 4.000 counts
[info]                  ·gc.time:                  3.000 ms
[info] Result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.pInterpolator":
[info]   6270946.776 ±(99.9%) 581630.695 ops/s [Average]
[info]   (min, avg, max) = (6122204.016, 6270946.776, 6447155.931), stdev = 151047.644
[info]   CI (99.9%): [5689316.081, 6852577.471] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.pInterpolator:·gc.alloc.rate":
[info]   1306.992 ±(99.9%) 121.510 MB/sec [Average]
[info]   (min, avg, max) = (1276.307, 1306.992, 1343.778), stdev = 31.556
[info]   CI (99.9%): [1185.483, 1428.502] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.pInterpolator:·gc.alloc.rate.norm":
[info]   328.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (328.000, 328.000, 328.000), stdev = 0.001
[info]   CI (99.9%): [328.000, 328.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.pInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.001 ±(99.9%) 0.009 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.005), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.010] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.pInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   ≈ 10⁻³ B/op
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.pInterpolator:·gc.churn.G1_Old_Gen":
[info]   1361.690 ±(99.9%) 1.188 MB/sec [Average]
[info]   (min, avg, max) = (1361.365, 1361.690, 1362.050), stdev = 0.309
[info]   CI (99.9%): [1360.502, 1362.879] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.pInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   341.885 ±(99.9%) 31.534 B/op [Average]
[info]   (min, avg, max) = (332.375, 341.885, 350.035), stdev = 8.189
[info]   CI (99.9%): [310.351, 373.419] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.pInterpolator:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.pInterpolator:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.rawInterpolator
[info] # Run progress: 80.00% complete, ETA 00:01:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2841606.631 ops/s
[info] # Warmup Iteration   2: 3267176.946 ops/s
[info] # Warmup Iteration   3: 3325626.780 ops/s
[info] # Warmup Iteration   4: 3293218.689 ops/s
[info] # Warmup Iteration   5: 3369955.408 ops/s
[info] Iteration   1: 3307821.044 ops/s
[info]                  ·gc.alloc.rate:                                  2118.204 MB/sec
[info]                  ·gc.alloc.rate.norm:                             1008.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      ≈ 10⁻³ MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.031 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       971.751 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   2: 3190570.637 ops/s
[info]                  ·gc.alloc.rate:                                  2043.880 MB/sec
[info]                  ·gc.alloc.rate.norm:                             1008.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.805 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       1007.470 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   3: 3190843.219 ops/s
[info]                  ·gc.alloc.rate:            2043.376 MB/sec
[info]                  ·gc.alloc.rate.norm:       1008.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      2042.206 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 1007.423 B/op
[info]                  ·gc.count:                 6.000 counts
[info]                  ·gc.time:                  6.000 ms
[info] Iteration   4: 3338925.048 ops/s
[info]                  ·gc.alloc.rate:                                  2138.061 MB/sec
[info]                  ·gc.alloc.rate.norm:                             1008.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2382.337 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       1123.165 B/op
[info]                  ·gc.count:                                       7.000 counts
[info]                  ·gc.time:                                        6.000 ms
[info] Iteration   5: 3329753.948 ops/s
[info]                  ·gc.alloc.rate:                                  2132.356 MB/sec
[info]                  ·gc.alloc.rate.norm:                             1008.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.122 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       965.345 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.rawInterpolator":
[info]   3271582.779 ±(99.9%) 287601.612 ops/s [Average]
[info]   (min, avg, max) = (3190570.637, 3271582.779, 3338925.048), stdev = 74689.225
[info]   CI (99.9%): [2983981.167, 3559184.391] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.rawInterpolator:·gc.alloc.rate":
[info]   2095.175 ±(99.9%) 183.324 MB/sec [Average]
[info]   (min, avg, max) = (2043.376, 2095.175, 2138.061), stdev = 47.609
[info]   CI (99.9%): [1911.851, 2278.499] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.rawInterpolator:·gc.alloc.rate.norm":
[info]   1008.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1008.000, 1008.000, 1008.000), stdev = 0.001
[info]   CI (99.9%): [1008.000, 1008.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.rawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.001 ±(99.9%) 0.005 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.003), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.006] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.rawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.001 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.003] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.rawInterpolator:·gc.churn.G1_Old_Gen":
[info]   2110.300 ±(99.9%) 585.581 MB/sec [Average]
[info]   (min, avg, max) = (2042.031, 2110.300, 2382.337), stdev = 152.074
[info]   CI (99.9%): [1524.719, 2695.881] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.rawInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   1015.031 ±(99.9%) 244.674 B/op [Average]
[info]   (min, avg, max) = (965.345, 1015.031, 1123.165), stdev = 63.541
[info]   CI (99.9%): [770.357, 1259.705] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.rawInterpolator:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.rawInterpolator:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 6.000), stdev = 0.837
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.sInterpolator
[info] # Run progress: 85.00% complete, ETA 00:00:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2611632.074 ops/s
[info] # Warmup Iteration   2: 3034927.370 ops/s
[info] # Warmup Iteration   3: 3100931.704 ops/s
[info] # Warmup Iteration   4: 3115938.603 ops/s
[info] # Warmup Iteration   5: 3125325.429 ops/s
[info] Iteration   1: 3156476.689 ops/s
[info]                  ·gc.alloc.rate:            2069.449 MB/sec
[info]                  ·gc.alloc.rate.norm:       1032.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      2042.157 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 1018.390 B/op
[info]                  ·gc.count:                 6.000 counts
[info]                  ·gc.time:                  5.000 ms
[info] Iteration   2: 3157002.298 ops/s
[info]                  ·gc.alloc.rate:                                  2070.537 MB/sec
[info]                  ·gc.alloc.rate.norm:                             1032.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      ≈ 10⁻³ MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.894 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       1018.223 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        6.000 ms
[info] Iteration   3: 3148737.517 ops/s
[info]                  ·gc.alloc.rate:                                  2065.238 MB/sec
[info]                  ·gc.alloc.rate.norm:                             1032.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2043.002 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       1020.889 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   4: 3155306.557 ops/s
[info]                  ·gc.alloc.rate:                                  2068.972 MB/sec
[info]                  ·gc.alloc.rate.norm:                             1032.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.321 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       1018.707 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   5: 3111650.555 ops/s
[info]                  ·gc.alloc.rate:                                  2040.512 MB/sec
[info]                  ·gc.alloc.rate.norm:                             1032.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.446 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       1032.978 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.sInterpolator":
[info]   3145834.723 ±(99.9%) 74683.271 ops/s [Average]
[info]   (min, avg, max) = (3111650.555, 3145834.723, 3157002.298), stdev = 19395.008
[info]   CI (99.9%): [3071151.452, 3220517.994] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.sInterpolator:·gc.alloc.rate":
[info]   2062.942 ±(99.9%) 48.887 MB/sec [Average]
[info]   (min, avg, max) = (2040.512, 2062.942, 2070.537), stdev = 12.696
[info]   CI (99.9%): [2014.054, 2111.829] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.sInterpolator:·gc.alloc.rate.norm":
[info]   1032.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1032.000, 1032.000, 1032.000), stdev = 0.001
[info]   CI (99.9%): [1032.000, 1032.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.sInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.001 ±(99.9%) 0.004 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.003), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.005] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.sInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.001 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.003] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.sInterpolator:·gc.churn.G1_Old_Gen":
[info]   2042.564 ±(99.9%) 1.414 MB/sec [Average]
[info]   (min, avg, max) = (2042.157, 2042.564, 2043.002), stdev = 0.367
[info]   CI (99.9%): [2041.150, 2043.978] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.sInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   1021.837 ±(99.9%) 24.335 B/op [Average]
[info]   (min, avg, max) = (1018.223, 1021.837, 1032.978), stdev = 6.320
[info]   CI (99.9%): [997.502, 1046.173] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.sInterpolator:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.sInterpolator:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringBuilder
[info] # Run progress: 90.00% complete, ETA 00:00:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4336161.004 ops/s
[info] # Warmup Iteration   2: 4787117.198 ops/s
[info] # Warmup Iteration   3: 5276862.665 ops/s
[info] # Warmup Iteration   4: 5161781.776 ops/s
[info] # Warmup Iteration   5: 5216903.052 ops/s
[info] Iteration   1: 5213720.076 ops/s
[info]                  ·gc.alloc.rate:                                  1696.360 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻³ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1702.248 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       513.777 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   2: 5335134.768 ops/s
[info]                  ·gc.alloc.rate:                                  1735.896 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      ≈ 10⁻³ MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1702.205 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       502.063 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   3: 5281210.569 ops/s
[info]                  ·gc.alloc.rate:                                  1717.741 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.025 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       608.658 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   4: 5339276.052 ops/s
[info]                  ·gc.alloc.rate:                                  1736.719 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.834 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       501.716 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   5: 5336291.405 ops/s
[info]                  ·gc.alloc.rate:            1735.759 MB/sec
[info]                  ·gc.alloc.rate.norm:       512.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1701.829 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 501.992 B/op
[info]                  ·gc.count:                 5.000 counts
[info]                  ·gc.time:                  4.000 ms
[info] Result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringBuilder":
[info]   5301126.574 ±(99.9%) 209895.847 ops/s [Average]
[info]   (min, avg, max) = (5213720.076, 5301126.574, 5339276.052), stdev = 54509.285
[info]   CI (99.9%): [5091230.727, 5511022.421] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringBuilder:·gc.alloc.rate":
[info]   1724.495 ±(99.9%) 67.893 MB/sec [Average]
[info]   (min, avg, max) = (1696.360, 1724.495, 1736.719), stdev = 17.632
[info]   CI (99.9%): [1656.602, 1792.388] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringBuilder:·gc.alloc.rate.norm":
[info]   512.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (512.000, 512.000, 512.000), stdev = 0.001
[info]   CI (99.9%): [512.000, 512.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.001 ±(99.9%) 0.005 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.003), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.006] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   ≈ 10⁻³ B/op
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Old_Gen":
[info]   1770.028 ±(99.9%) 585.494 MB/sec [Average]
[info]   (min, avg, max) = (1701.829, 1770.028, 2042.025), stdev = 152.051
[info]   CI (99.9%): [1184.534, 2355.522] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Old_Gen.norm":
[info]   525.641 ±(99.9%) 179.790 B/op [Average]
[info]   (min, avg, max) = (501.716, 525.641, 608.658), stdev = 46.691
[info]   CI (99.9%): [345.851, 705.431] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringBuilder:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringBuilder:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringConcatenation
[info] # Run progress: 95.00% complete, ETA 00:00:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3047731.414 ops/s
[info] # Warmup Iteration   2: 3381641.547 ops/s
[info] # Warmup Iteration   3: 4012915.620 ops/s
[info] # Warmup Iteration   4: 4192616.956 ops/s
[info] # Warmup Iteration   5: 4204896.597 ops/s
[info] Iteration   1: 4307438.871 ops/s
[info]                  ·gc.alloc.rate:                                  1860.949 MB/sec
[info]                  ·gc.alloc.rate.norm:                             680.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.862 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       621.869 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   2: 4235557.351 ops/s
[info]                  ·gc.alloc.rate:                                  1829.822 MB/sec
[info]                  ·gc.alloc.rate.norm:                             680.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.148 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       758.905 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   3: 4255585.515 ops/s
[info]                  ·gc.alloc.rate:                                  1838.595 MB/sec
[info]                  ·gc.alloc.rate.norm:                             680.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.924 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       629.453 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   4: 4256174.638 ops/s
[info]                  ·gc.alloc.rate:                                  1839.362 MB/sec
[info]                  ·gc.alloc.rate.norm:                             680.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.832 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       755.222 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   5: 4271462.810 ops/s
[info]                  ·gc.alloc.rate:            1846.271 MB/sec
[info]                  ·gc.alloc.rate.norm:       680.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1702.619 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 627.091 B/op
[info]                  ·gc.count:                 5.000 counts
[info]                  ·gc.time:                  4.000 ms
[info] Result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringConcatenation":
[info]   4265243.837 ±(99.9%) 103250.362 ops/s [Average]
[info]   (min, avg, max) = (4235557.351, 4265243.837, 4307438.871), stdev = 26813.791
[info]   CI (99.9%): [4161993.476, 4368494.199] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.alloc.rate":
[info]   1843.000 ±(99.9%) 44.706 MB/sec [Average]
[info]   (min, avg, max) = (1829.822, 1843.000, 1860.949), stdev = 11.610
[info]   CI (99.9%): [1798.294, 1887.706] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.alloc.rate.norm":
[info]   680.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (680.000, 680.000, 680.000), stdev = 0.001
[info]   CI (99.9%): [680.000, 680.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.002 ±(99.9%) 0.004 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.003), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.007] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.001 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.002] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.churn.G1_Old_Gen":
[info]   1838.277 ±(99.9%) 717.840 MB/sec [Average]
[info]   (min, avg, max) = (1701.862, 1838.277, 2042.832), stdev = 186.421
[info]   CI (99.9%): [1120.437, 2556.117] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.churn.G1_Old_Gen.norm":
[info]   678.508 ±(99.9%) 276.381 B/op [Average]
[info]   (min, avg, max) = (621.869, 678.508, 758.905), stdev = 71.775
[info]   CI (99.9%): [402.127, 954.889] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # Run complete. Total time: 00:05:14
[info] Benchmark                                                                                               Mode  Cnt        Score        Error   Units
[info] NestedConcatenationBenchmark.fInterpolator                                                             thrpt    5    25427.196 ±   1912.344   ops/s
[info] NestedConcatenationBenchmark.fInterpolator:·gc.alloc.rate                                              thrpt    5     1118.150 ±     84.054  MB/sec
[info] NestedConcatenationBenchmark.fInterpolator:·gc.alloc.rate.norm                                         thrpt    5    69216.017 ±      0.005    B/op
[info] NestedConcatenationBenchmark.fInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                  thrpt    5        0.017 ±      0.132  MB/sec
[info] NestedConcatenationBenchmark.fInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm             thrpt    5        1.062 ±      8.082    B/op
[info] NestedConcatenationBenchmark.fInterpolator:·gc.churn.G1_Old_Gen                                        thrpt    5     1088.737 ±    586.800  MB/sec
[info] NestedConcatenationBenchmark.fInterpolator:·gc.churn.G1_Old_Gen.norm                                   thrpt    5    67290.167 ±  31300.973    B/op
[info] NestedConcatenationBenchmark.fInterpolator:·gc.churn.G1_Survivor_Space                                 thrpt    5        0.400 ±      3.441  MB/sec
[info] NestedConcatenationBenchmark.fInterpolator:·gc.churn.G1_Survivor_Space.norm                            thrpt    5       24.550 ±    211.384    B/op
[info] NestedConcatenationBenchmark.fInterpolator:·gc.count                                                   thrpt    5       16.000               counts
[info] NestedConcatenationBenchmark.fInterpolator:·gc.time                                                    thrpt    5       17.000                   ms
[info] NestedConcatenationBenchmark.fastInterpolator                                                          thrpt    5   206978.824 ±   7125.343   ops/s
[info] NestedConcatenationBenchmark.fastInterpolator:·gc.alloc.rate                                           thrpt    5     1386.500 ±     47.749  MB/sec
[info] NestedConcatenationBenchmark.fastInterpolator:·gc.alloc.rate.norm                                      thrpt    5    10544.002 ±      0.001    B/op
[info] NestedConcatenationBenchmark.fastInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'               thrpt    5        0.002 ±      0.008  MB/sec
[info] NestedConcatenationBenchmark.fastInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm          thrpt    5        0.014 ±      0.059    B/op
[info] NestedConcatenationBenchmark.fastInterpolator:·gc.churn.G1_Old_Gen                                     thrpt    5     1429.513 ±    586.310  MB/sec
[info] NestedConcatenationBenchmark.fastInterpolator:·gc.churn.G1_Old_Gen.norm                                thrpt    5    10865.075 ±   4117.072    B/op
[info] NestedConcatenationBenchmark.fastInterpolator:·gc.count                                                thrpt    5       21.000               counts
[info] NestedConcatenationBenchmark.fastInterpolator:·gc.time                                                 thrpt    5       18.000                   ms
[info] NestedConcatenationBenchmark.frawInterpolator                                                          thrpt    5   194527.447 ±   3382.271   ops/s
[info] NestedConcatenationBenchmark.frawInterpolator:·gc.alloc.rate                                           thrpt    5     1595.855 ±     27.711  MB/sec
[info] NestedConcatenationBenchmark.frawInterpolator:·gc.alloc.rate.norm                                      thrpt    5    12912.002 ±      0.001    B/op
[info] NestedConcatenationBenchmark.frawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'               thrpt    5        0.001 ±      0.004  MB/sec
[info] NestedConcatenationBenchmark.frawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm          thrpt    5        0.007 ±      0.033    B/op
[info] NestedConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Old_Gen                                     thrpt    5     1565.771 ±    717.257  MB/sec
[info] NestedConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Old_Gen.norm                                thrpt    5    12668.921 ±   5812.295    B/op
[info] NestedConcatenationBenchmark.frawInterpolator:·gc.count                                                thrpt    5       23.000               counts
[info] NestedConcatenationBenchmark.frawInterpolator:·gc.time                                                 thrpt    5       22.000                   ms
[info] NestedConcatenationBenchmark.fsInterpolator                                                            thrpt    5   186936.015 ±   5723.871   ops/s
[info] NestedConcatenationBenchmark.fsInterpolator:·gc.alloc.rate                                             thrpt    5     1531.584 ±     46.696  MB/sec
[info] NestedConcatenationBenchmark.fsInterpolator:·gc.alloc.rate.norm                                        thrpt    5    12896.002 ±      0.001    B/op
[info] NestedConcatenationBenchmark.fsInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                 thrpt    5        0.001 ±      0.007  MB/sec
[info] NestedConcatenationBenchmark.fsInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm            thrpt    5        0.008 ±      0.055    B/op
[info] NestedConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Old_Gen                                       thrpt    5     1565.670 ±    716.815  MB/sec
[info] NestedConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Old_Gen.norm                                  thrpt    5    13176.490 ±   5763.353    B/op
[info] NestedConcatenationBenchmark.fsInterpolator:·gc.count                                                  thrpt    5       23.000               counts
[info] NestedConcatenationBenchmark.fsInterpolator:·gc.time                                                   thrpt    5       23.000                   ms
[info] NestedConcatenationBenchmark.javaStringBuilder                                                         thrpt    5   457329.417 ±  27055.710   ops/s
[info] NestedConcatenationBenchmark.javaStringBuilder:·gc.alloc.rate                                          thrpt    5     1097.168 ±     64.768  MB/sec
[info] NestedConcatenationBenchmark.javaStringBuilder:·gc.alloc.rate.norm                                     thrpt    5     3776.001 ±      0.001    B/op
[info] NestedConcatenationBenchmark.javaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'              thrpt    5        0.008 ±      0.061  MB/sec
[info] NestedConcatenationBenchmark.javaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm         thrpt    5        0.027 ±      0.213    B/op
[info] NestedConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Old_Gen                                    thrpt    5     1156.890 ±    715.501  MB/sec
[info] NestedConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Old_Gen.norm                               thrpt    5     3982.185 ±   2471.569    B/op
[info] NestedConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Survivor_Space                             thrpt    5        0.400 ±      3.441  MB/sec
[info] NestedConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Survivor_Space.norm                        thrpt    5        1.397 ±     12.025    B/op
[info] NestedConcatenationBenchmark.javaStringBuilder:·gc.count                                               thrpt    5       17.000               counts
[info] NestedConcatenationBenchmark.javaStringBuilder:·gc.time                                                thrpt    5       23.000                   ms
[info] NestedConcatenationBenchmark.pInterpolator                                                             thrpt    5   244673.830 ±  16131.379   ops/s
[info] NestedConcatenationBenchmark.pInterpolator:·gc.alloc.rate                                              thrpt    5     1963.873 ±    130.058  MB/sec
[info] NestedConcatenationBenchmark.pInterpolator:·gc.alloc.rate.norm                                         thrpt    5    12632.002 ±      0.001    B/op
[info] NestedConcatenationBenchmark.pInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                  thrpt    5        0.002 ±      0.003  MB/sec
[info] NestedConcatenationBenchmark.pInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm             thrpt    5        0.010 ±      0.020    B/op
[info] NestedConcatenationBenchmark.pInterpolator:·gc.churn.G1_Old_Gen                                        thrpt    5     1906.300 ±    717.389  MB/sec
[info] NestedConcatenationBenchmark.pInterpolator:·gc.churn.G1_Old_Gen.norm                                   thrpt    5    12280.892 ±   5391.362    B/op
[info] NestedConcatenationBenchmark.pInterpolator:·gc.count                                                   thrpt    5       28.000               counts
[info] NestedConcatenationBenchmark.pInterpolator:·gc.time                                                    thrpt    5       26.000                   ms
[info] NestedConcatenationBenchmark.rawInterpolator                                                           thrpt    5   121401.700 ±   7106.094   ops/s
[info] NestedConcatenationBenchmark.rawInterpolator:·gc.alloc.rate                                            thrpt    5     2446.917 ±    142.680  MB/sec
[info] NestedConcatenationBenchmark.rawInterpolator:·gc.alloc.rate.norm                                       thrpt    5    31720.003 ±      0.001    B/op
[info] NestedConcatenationBenchmark.rawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                thrpt    5        0.002 ±      0.003  MB/sec
[info] NestedConcatenationBenchmark.rawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm           thrpt    5        0.025 ±      0.036    B/op
[info] NestedConcatenationBenchmark.rawInterpolator:·gc.churn.G1_Old_Gen                                      thrpt    5     2450.936 ±    585.073  MB/sec
[info] NestedConcatenationBenchmark.rawInterpolator:·gc.churn.G1_Old_Gen.norm                                 thrpt    5    31766.577 ±   6818.195    B/op
[info] NestedConcatenationBenchmark.rawInterpolator:·gc.count                                                 thrpt    5       36.000               counts
[info] NestedConcatenationBenchmark.rawInterpolator:·gc.time                                                  thrpt    5       31.000                   ms
[info] NestedConcatenationBenchmark.sInterpolator                                                             thrpt    5   110092.785 ±   2911.566   ops/s
[info] NestedConcatenationBenchmark.sInterpolator:·gc.alloc.rate                                              thrpt    5     2235.522 ±     59.040  MB/sec
[info] NestedConcatenationBenchmark.sInterpolator:·gc.alloc.rate.norm                                         thrpt    5    31960.004 ±      0.001    B/op
[info] NestedConcatenationBenchmark.sInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                  thrpt    5        0.003 ±      0.006  MB/sec
[info] NestedConcatenationBenchmark.sInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm             thrpt    5        0.039 ±      0.081    B/op
[info] NestedConcatenationBenchmark.sInterpolator:·gc.churn.G1_Old_Gen                                        thrpt    5     2246.504 ±    717.249  MB/sec
[info] NestedConcatenationBenchmark.sInterpolator:·gc.churn.G1_Old_Gen.norm                                   thrpt    5    32127.284 ±  10783.600    B/op
[info] NestedConcatenationBenchmark.sInterpolator:·gc.count                                                   thrpt    5       33.000               counts
[info] NestedConcatenationBenchmark.sInterpolator:·gc.time                                                    thrpt    5       32.000                   ms
[info] NestedConcatenationBenchmark.scalaStringBuilder                                                        thrpt    5   458048.672 ±  11573.841   ops/s
[info] NestedConcatenationBenchmark.scalaStringBuilder:·gc.alloc.rate                                         thrpt    5     1103.600 ±     27.205  MB/sec
[info] NestedConcatenationBenchmark.scalaStringBuilder:·gc.alloc.rate.norm                                    thrpt    5     3792.001 ±      0.001    B/op
[info] NestedConcatenationBenchmark.scalaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'             thrpt    5        0.011 ±      0.066  MB/sec
[info] NestedConcatenationBenchmark.scalaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm        thrpt    5        0.038 ±      0.228    B/op
[info] NestedConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Old_Gen                                   thrpt    5     1088.891 ±    587.824  MB/sec
[info] NestedConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Old_Gen.norm                              thrpt    5     3743.438 ±   2096.540    B/op
[info] NestedConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Survivor_Space                            thrpt    5        0.400 ±      3.442  MB/sec
[info] NestedConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Survivor_Space.norm                       thrpt    5        1.379 ±     11.872    B/op
[info] NestedConcatenationBenchmark.scalaStringBuilder:·gc.count                                              thrpt    5       16.000               counts
[info] NestedConcatenationBenchmark.scalaStringBuilder:·gc.time                                               thrpt    5       17.000                   ms
[info] NestedConcatenationBenchmark.scalaStringConcatenation                                                  thrpt    5   148620.477 ±   5767.605   ops/s
[info] NestedConcatenationBenchmark.scalaStringConcatenation:·gc.alloc.rate                                   thrpt    5     2144.847 ±     82.277  MB/sec
[info] NestedConcatenationBenchmark.scalaStringConcatenation:·gc.alloc.rate.norm                              thrpt    5    22712.003 ±      0.001    B/op
[info] NestedConcatenationBenchmark.scalaStringConcatenation:·gc.churn.CodeHeap_'non-profiled_nmethods'       thrpt    5        0.001 ±      0.004  MB/sec
[info] NestedConcatenationBenchmark.scalaStringConcatenation:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm  thrpt    5        0.012 ±      0.045    B/op
[info] NestedConcatenationBenchmark.scalaStringConcatenation:·gc.churn.G1_Old_Gen                             thrpt    5     2110.596 ±    586.982  MB/sec
[info] NestedConcatenationBenchmark.scalaStringConcatenation:·gc.churn.G1_Old_Gen.norm                        thrpt    5    22357.426 ±   6718.524    B/op
[info] NestedConcatenationBenchmark.scalaStringConcatenation:·gc.count                                        thrpt    5       31.000               counts
[info] NestedConcatenationBenchmark.scalaStringConcatenation:·gc.time                                         thrpt    5       28.000                   ms
[info] SimpleConcatenationBenchmark.fInterpolator                                                             thrpt    5   552967.000 ±   9983.133   ops/s
[info] SimpleConcatenationBenchmark.fInterpolator:·gc.alloc.rate                                              thrpt    5      851.595 ±     15.384  MB/sec
[info] SimpleConcatenationBenchmark.fInterpolator:·gc.alloc.rate.norm                                         thrpt    5     2424.001 ±      0.001    B/op
[info] SimpleConcatenationBenchmark.fInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                  thrpt    5        0.014 ±      0.118  MB/sec
[info] SimpleConcatenationBenchmark.fInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm             thrpt    5        0.039 ±      0.333    B/op
[info] SimpleConcatenationBenchmark.fInterpolator:·gc.churn.G1_Old_Gen                                        thrpt    5      814.757 ±    713.554  MB/sec
[info] SimpleConcatenationBenchmark.fInterpolator:·gc.churn.G1_Old_Gen.norm                                   thrpt    5     2319.220 ±   2032.530    B/op
[info] SimpleConcatenationBenchmark.fInterpolator:·gc.churn.G1_Survivor_Space                                 thrpt    5        0.533 ±      4.588  MB/sec
[info] SimpleConcatenationBenchmark.fInterpolator:·gc.churn.G1_Survivor_Space.norm                            thrpt    5        1.512 ±     13.023    B/op
[info] SimpleConcatenationBenchmark.fInterpolator:·gc.count                                                   thrpt    5       12.000               counts
[info] SimpleConcatenationBenchmark.fInterpolator:·gc.time                                                    thrpt    5       20.000                   ms
[info] SimpleConcatenationBenchmark.fastInterpolator                                                          thrpt    5  4429728.940 ± 361610.601   ops/s
[info] SimpleConcatenationBenchmark.fastInterpolator:·gc.alloc.rate                                           thrpt    5     1958.777 ±    160.236  MB/sec
[info] SimpleConcatenationBenchmark.fastInterpolator:·gc.alloc.rate.norm                                      thrpt    5      696.000 ±      0.001    B/op
[info] SimpleConcatenationBenchmark.fastInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'               thrpt    5        0.002 ±      0.008  MB/sec
[info] SimpleConcatenationBenchmark.fastInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm          thrpt    5        0.001 ±      0.003    B/op
[info] SimpleConcatenationBenchmark.fastInterpolator:·gc.churn.G1_Old_Gen                                     thrpt    5     1974.106 ±    586.137  MB/sec
[info] SimpleConcatenationBenchmark.fastInterpolator:·gc.churn.G1_Old_Gen.norm                                thrpt    5      701.482 ±    204.490    B/op
[info] SimpleConcatenationBenchmark.fastInterpolator:·gc.count                                                thrpt    5       29.000               counts
[info] SimpleConcatenationBenchmark.fastInterpolator:·gc.time                                                 thrpt    5       29.000                   ms
[info] SimpleConcatenationBenchmark.frawInterpolator                                                          thrpt    5  6530576.275 ± 323167.644   ops/s
[info] SimpleConcatenationBenchmark.frawInterpolator:·gc.alloc.rate                                           thrpt    5      630.679 ±     31.324  MB/sec
[info] SimpleConcatenationBenchmark.frawInterpolator:·gc.alloc.rate.norm                                      thrpt    5      152.000 ±      0.001    B/op
[info] SimpleConcatenationBenchmark.frawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'               thrpt    5        0.008 ±      0.070  MB/sec
[info] SimpleConcatenationBenchmark.frawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm          thrpt    5        0.002 ±      0.017    B/op
[info] SimpleConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Old_Gen                                     thrpt    5      609.738 ±    584.122  MB/sec
[info] SimpleConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Old_Gen.norm                                thrpt    5      147.159 ±    143.419    B/op
[info] SimpleConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Survivor_Space                              thrpt    5        0.533 ±      3.344  MB/sec
[info] SimpleConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Survivor_Space.norm                         thrpt    5        0.129 ±      0.811    B/op
[info] SimpleConcatenationBenchmark.frawInterpolator:·gc.count                                                thrpt    5        9.000               counts
[info] SimpleConcatenationBenchmark.frawInterpolator:·gc.time                                                 thrpt    5       22.000                   ms
[info] SimpleConcatenationBenchmark.fsInterpolator                                                            thrpt    5  6790572.160 ± 243261.243   ops/s
[info] SimpleConcatenationBenchmark.fsInterpolator:·gc.alloc.rate                                             thrpt    5      655.949 ±     23.856  MB/sec
[info] SimpleConcatenationBenchmark.fsInterpolator:·gc.alloc.rate.norm                                        thrpt    5      152.000 ±      0.001    B/op
[info] SimpleConcatenationBenchmark.fsInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                 thrpt    5        0.015 ±      0.126  MB/sec
[info] SimpleConcatenationBenchmark.fsInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm            thrpt    5        0.003 ±      0.029    B/op
[info] SimpleConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Old_Gen                                       thrpt    5      610.075 ±    584.877  MB/sec
[info] SimpleConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Old_Gen.norm                                  thrpt    5      141.126 ±    132.265    B/op
[info] SimpleConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Survivor_Space                                thrpt    5        0.400 ±      3.442  MB/sec
[info] SimpleConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Survivor_Space.norm                           thrpt    5        0.092 ±      0.796    B/op
[info] SimpleConcatenationBenchmark.fsInterpolator:·gc.count                                                  thrpt    5        9.000               counts
[info] SimpleConcatenationBenchmark.fsInterpolator:·gc.time                                                   thrpt    5       23.000                   ms
[info] SimpleConcatenationBenchmark.javaStringBuilder                                                         thrpt    5  5230264.635 ± 295156.659   ops/s
[info] SimpleConcatenationBenchmark.javaStringBuilder:·gc.alloc.rate                                          thrpt    5     1701.592 ±     96.219  MB/sec
[info] SimpleConcatenationBenchmark.javaStringBuilder:·gc.alloc.rate.norm                                     thrpt    5      512.000 ±      0.001    B/op
[info] SimpleConcatenationBenchmark.javaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'              thrpt    5        0.002 ±      0.006  MB/sec
[info] SimpleConcatenationBenchmark.javaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm         thrpt    5        0.001 ±      0.002    B/op
[info] SimpleConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Old_Gen                                    thrpt    5     1702.077 ±      0.661  MB/sec
[info] SimpleConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Old_Gen.norm                               thrpt    5      512.234 ±     29.017    B/op
[info] SimpleConcatenationBenchmark.javaStringBuilder:·gc.count                                               thrpt    5       25.000               counts
[info] SimpleConcatenationBenchmark.javaStringBuilder:·gc.time                                                thrpt    5       23.000                   ms
[info] SimpleConcatenationBenchmark.pInterpolator                                                             thrpt    5  6270946.776 ± 581630.695   ops/s
[info] SimpleConcatenationBenchmark.pInterpolator:·gc.alloc.rate                                              thrpt    5     1306.992 ±    121.510  MB/sec
[info] SimpleConcatenationBenchmark.pInterpolator:·gc.alloc.rate.norm                                         thrpt    5      328.000 ±      0.001    B/op
[info] SimpleConcatenationBenchmark.pInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                  thrpt    5        0.001 ±      0.009  MB/sec
[info] SimpleConcatenationBenchmark.pInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm             thrpt    5       ≈ 10⁻³                 B/op
[info] SimpleConcatenationBenchmark.pInterpolator:·gc.churn.G1_Old_Gen                                        thrpt    5     1361.690 ±      1.188  MB/sec
[info] SimpleConcatenationBenchmark.pInterpolator:·gc.churn.G1_Old_Gen.norm                                   thrpt    5      341.885 ±     31.534    B/op
[info] SimpleConcatenationBenchmark.pInterpolator:·gc.count                                                   thrpt    5       20.000               counts
[info] SimpleConcatenationBenchmark.pInterpolator:·gc.time                                                    thrpt    5       17.000                   ms
[info] SimpleConcatenationBenchmark.rawInterpolator                                                           thrpt    5  3271582.779 ± 287601.612   ops/s
[info] SimpleConcatenationBenchmark.rawInterpolator:·gc.alloc.rate                                            thrpt    5     2095.175 ±    183.324  MB/sec
[info] SimpleConcatenationBenchmark.rawInterpolator:·gc.alloc.rate.norm                                       thrpt    5     1008.000 ±      0.001    B/op
[info] SimpleConcatenationBenchmark.rawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                thrpt    5        0.001 ±      0.005  MB/sec
[info] SimpleConcatenationBenchmark.rawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm           thrpt    5        0.001 ±      0.002    B/op
[info] SimpleConcatenationBenchmark.rawInterpolator:·gc.churn.G1_Old_Gen                                      thrpt    5     2110.300 ±    585.581  MB/sec
[info] SimpleConcatenationBenchmark.rawInterpolator:·gc.churn.G1_Old_Gen.norm                                 thrpt    5     1015.031 ±    244.674    B/op
[info] SimpleConcatenationBenchmark.rawInterpolator:·gc.count                                                 thrpt    5       31.000               counts
[info] SimpleConcatenationBenchmark.rawInterpolator:·gc.time                                                  thrpt    5       26.000                   ms
[info] SimpleConcatenationBenchmark.sInterpolator                                                             thrpt    5  3145834.723 ±  74683.271   ops/s
[info] SimpleConcatenationBenchmark.sInterpolator:·gc.alloc.rate                                              thrpt    5     2062.942 ±     48.887  MB/sec
[info] SimpleConcatenationBenchmark.sInterpolator:·gc.alloc.rate.norm                                         thrpt    5     1032.000 ±      0.001    B/op
[info] SimpleConcatenationBenchmark.sInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                  thrpt    5        0.001 ±      0.004  MB/sec
[info] SimpleConcatenationBenchmark.sInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm             thrpt    5        0.001 ±      0.002    B/op
[info] SimpleConcatenationBenchmark.sInterpolator:·gc.churn.G1_Old_Gen                                        thrpt    5     2042.564 ±      1.414  MB/sec
[info] SimpleConcatenationBenchmark.sInterpolator:·gc.churn.G1_Old_Gen.norm                                   thrpt    5     1021.837 ±     24.335    B/op
[info] SimpleConcatenationBenchmark.sInterpolator:·gc.count                                                   thrpt    5       30.000               counts
[info] SimpleConcatenationBenchmark.sInterpolator:·gc.time                                                    thrpt    5       26.000                   ms
[info] SimpleConcatenationBenchmark.scalaStringBuilder                                                        thrpt    5  5301126.574 ± 209895.847   ops/s
[info] SimpleConcatenationBenchmark.scalaStringBuilder:·gc.alloc.rate                                         thrpt    5     1724.495 ±     67.893  MB/sec
[info] SimpleConcatenationBenchmark.scalaStringBuilder:·gc.alloc.rate.norm                                    thrpt    5      512.000 ±      0.001    B/op
[info] SimpleConcatenationBenchmark.scalaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'             thrpt    5        0.001 ±      0.005  MB/sec
[info] SimpleConcatenationBenchmark.scalaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm        thrpt    5       ≈ 10⁻³                 B/op
[info] SimpleConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Old_Gen                                   thrpt    5     1770.028 ±    585.494  MB/sec
[info] SimpleConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Old_Gen.norm                              thrpt    5      525.641 ±    179.790    B/op
[info] SimpleConcatenationBenchmark.scalaStringBuilder:·gc.count                                              thrpt    5       26.000               counts
[info] SimpleConcatenationBenchmark.scalaStringBuilder:·gc.time                                               thrpt    5       21.000                   ms
[info] SimpleConcatenationBenchmark.scalaStringConcatenation                                                  thrpt    5  4265243.837 ± 103250.362   ops/s
[info] SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.alloc.rate                                   thrpt    5     1843.000 ±     44.706  MB/sec
[info] SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.alloc.rate.norm                              thrpt    5      680.000 ±      0.001    B/op
[info] SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.churn.CodeHeap_'non-profiled_nmethods'       thrpt    5        0.002 ±      0.004  MB/sec
[info] SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm  thrpt    5        0.001 ±      0.002    B/op
[info] SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.churn.G1_Old_Gen                             thrpt    5     1838.277 ±    717.840  MB/sec
[info] SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.churn.G1_Old_Gen.norm                        thrpt    5      678.508 ±    276.381    B/op
[info] SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.count                                        thrpt    5       27.000               counts
[info] SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.time                                         thrpt    5       23.000                   ms
[info] Benchmark result is saved to jdk-9_scala-2.11.12.json
[success] Total time: 328 s, completed Mar 28, 2018 7:04:58 PM
