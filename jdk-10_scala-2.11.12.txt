[info] Loading settings from idea.sbt,build.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/project
[info] Loading settings from release.sbt,build.sbt,version.sbt ...
[info] Set current project to fast-string-interpolator (in build file:/home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/)
[info] Setting Scala version to 2.11.12 on 3 projects.
[info] Excluded 1 projects, run ++ 2.11.12 -v for more details.
[info] Reapplying settings...
[info] Set current project to fast-string-interpolator (in build file:/home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/)
[success] Total time: 0 s, completed Mar 28, 2018 7:05:46 PM
[info] Updating macros...
[info] Done updating.
[info] Updating benchmark-core...
[info] Done updating.
[info] Updating benchmark...
[info] Done updating.
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/macros/target/scala-2.11/classes ...
[info] Done compiling.
[info] Compiling 2 Scala sources to /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark-core/target/scala-2.11/classes ...
[info] Packaging /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/macros/target/scala-2.11/macros_2.11-0.1.1-SNAPSHOT.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark-core/target/scala-2.11/benchmark-core_2.11-0.1.1-SNAPSHOT.jar ...
[info] Compiling 2 Scala sources to /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.11/classes ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.11/benchmark_2.11-0.1.1-SNAPSHOT.jar ...
[info] Done packaging.
Processing 14 classes from /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.11/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.11/src_managed/jmh and resources to /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.11/resource_managed/jmh
[info] Compiling 2 Scala sources to /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.11/test-classes ...
[info] Compiling 28 Java sources to /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.11/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.11/benchmark_2.11-0.1.1-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.11/benchmark_2.11-0.1.1-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -jvm /usr/lib/jvm/jdk-10/bin/java -prof gc -rf json -rff jdk-10_scala-2.11.12.json .*Benchmark.*
[info] # JMH version: 1.20
[info] # VM version: JDK 10, VM 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fInterpolator
[info] # Run progress: 0.00% complete, ETA 00:03:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11295.030 ops/s
[info] # Warmup Iteration   2: 22246.000 ops/s
[info] # Warmup Iteration   3: 23312.167 ops/s
[info] # Warmup Iteration   4: 23064.811 ops/s
[info] # Warmup Iteration   5: 23080.915 ops/s
[info] Iteration   1: 23502.579 ops/s
[info]                  ·gc.alloc.rate:                   1051.981 MB/sec
[info]                  ·gc.alloc.rate.norm:              70444.478 B/op
[info]                  ·gc.churn.G1_Old_Gen:             1015.193 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:        67981.019 B/op
[info]                  ·gc.churn.G1_Survivor_Space:      1.998 MB/sec
[info]                  ·gc.churn.G1_Survivor_Space.norm: 133.821 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 23041.515 ops/s
[info]                  ·gc.alloc.rate:                                  1031.099 MB/sec
[info]                  ·gc.alloc.rate.norm:                             70440.018 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.091 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 6.247 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1021.048 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       69753.396 B/op
[info]                  ·gc.count:                                       3.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   3: 23118.253 ops/s
[info]                  ·gc.alloc.rate:            1034.464 MB/sec
[info]                  ·gc.alloc.rate.norm:       70440.018 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1020.969 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 69521.106 B/op
[info]                  ·gc.count:                 3.000 counts
[info]                  ·gc.time:                  3.000 ms
[info] Iteration   4: 24298.480 ops/s
[info]                  ·gc.alloc.rate:            1087.435 MB/sec
[info]                  ·gc.alloc.rate.norm:       70440.017 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1361.515 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 88193.949 B/op
[info]                  ·gc.count:                 4.000 counts
[info]                  ·gc.time:                  3.000 ms
[info] Iteration   5: 24330.024 ops/s
[info]                  ·gc.alloc.rate:                                  1089.267 MB/sec
[info]                  ·gc.alloc.rate.norm:                             70440.017 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.085 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1021.428 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       66053.049 B/op
[info]                  ·gc.count:                                       3.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fInterpolator":
[info]   23658.170 ±(99.9%) 2402.696 ops/s [Average]
[info]   (min, avg, max) = (23041.515, 23658.170, 24330.024), stdev = 623.972
[info]   CI (99.9%): [21255.474, 26060.866] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fInterpolator:·gc.alloc.rate":
[info]   1058.849 ±(99.9%) 108.132 MB/sec [Average]
[info]   (min, avg, max) = (1031.099, 1058.849, 1089.267), stdev = 28.081
[info]   CI (99.9%): [950.717, 1166.981] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fInterpolator:·gc.alloc.rate.norm":
[info]   70440.909 ±(99.9%) 7.681 B/op [Average]
[info]   (min, avg, max) = (70440.017, 70440.909, 70444.478), stdev = 1.995
[info]   CI (99.9%): [70433.228, 70448.590] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.019 ±(99.9%) 0.157 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.019, 0.091), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.175] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   1.266 ±(99.9%) 10.722 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.266, 6.247), stdev = 2.784
[info]   CI (99.9%): [≈ 0, 11.988] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fInterpolator:·gc.churn.G1_Old_Gen":
[info]   1088.031 ±(99.9%) 588.780 MB/sec [Average]
[info]   (min, avg, max) = (1015.193, 1088.031, 1361.515), stdev = 152.904
[info]   CI (99.9%): [499.250, 1676.811] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   72300.504 ±(99.9%) 34682.688 B/op [Average]
[info]   (min, avg, max) = (66053.049, 72300.504, 88193.949), stdev = 9006.984
[info]   CI (99.9%): [37617.816, 106983.192] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fInterpolator:·gc.churn.G1_Survivor_Space":
[info]   0.400 ±(99.9%) 3.441 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.998), stdev = 0.894
[info]   CI (99.9%): [≈ 0, 3.841] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fInterpolator:·gc.churn.G1_Survivor_Space.norm":
[info]   26.764 ±(99.9%) 230.448 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 26.764, 133.821), stdev = 59.847
[info]   CI (99.9%): [≈ 0, 257.212] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fInterpolator:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fInterpolator:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 9.000), stdev = 2.608
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 10, VM 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fastInterpolator
[info] # Run progress: 5.00% complete, ETA 00:04:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 208405.603 ops/s
[info] # Warmup Iteration   2: 265365.101 ops/s
[info] # Warmup Iteration   3: 263668.332 ops/s
[info] # Warmup Iteration   4: 259460.736 ops/s
[info] # Warmup Iteration   5: 264362.060 ops/s
[info] Iteration   1: 268584.116 ops/s
[info]                  ·gc.alloc.rate:                                  1580.711 MB/sec
[info]                  ·gc.alloc.rate.norm:                             9264.002 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.015 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1361.398 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       7978.682 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   2: 260599.560 ops/s
[info]                  ·gc.alloc.rate:                                  1533.653 MB/sec
[info]                  ·gc.alloc.rate.norm:                             9264.002 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.002 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.012 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.720 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       10279.210 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   3: 255484.345 ops/s
[info]                  ·gc.alloc.rate:                                  1504.268 MB/sec
[info]                  ·gc.alloc.rate.norm:                             9264.002 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.005 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1362.012 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       8387.919 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Iteration   4: 263031.070 ops/s
[info]                  ·gc.alloc.rate:            1548.480 MB/sec
[info]                  ·gc.alloc.rate.norm:       9264.002 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1702.302 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 10184.258 B/op
[info]                  ·gc.count:                 5.000 counts
[info]                  ·gc.time:                  4.000 ms
[info] Iteration   5: 269147.931 ops/s
[info]                  ·gc.alloc.rate:            1584.066 MB/sec
[info]                  ·gc.alloc.rate.norm:       9264.002 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1361.409 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 7961.847 B/op
[info]                  ·gc.count:                 4.000 counts
[info]                  ·gc.time:                  3.000 ms
[info] Result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fastInterpolator":
[info]   263369.404 ±(99.9%) 21998.037 ops/s [Average]
[info]   (min, avg, max) = (255484.345, 263369.404, 269147.931), stdev = 5712.820
[info]   CI (99.9%): [241371.367, 285367.442] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fastInterpolator:·gc.alloc.rate":
[info]   1550.236 ±(99.9%) 128.642 MB/sec [Average]
[info]   (min, avg, max) = (1504.268, 1550.236, 1584.066), stdev = 33.408
[info]   CI (99.9%): [1421.594, 1678.877] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fastInterpolator:·gc.alloc.rate.norm":
[info]   9264.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9264.002, 9264.002, 9264.002), stdev = 0.001
[info]   CI (99.9%): [9264.001, 9264.002] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fastInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.001 ±(99.9%) 0.005 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.003), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.006] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fastInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.006 ±(99.9%) 0.027 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.015), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.033] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fastInterpolator:·gc.churn.G1_Old_Gen":
[info]   1497.768 ±(99.9%) 717.944 MB/sec [Average]
[info]   (min, avg, max) = (1361.398, 1497.768, 1702.302), stdev = 186.448
[info]   CI (99.9%): [779.824, 2215.712] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fastInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   8958.383 ±(99.9%) 4525.810 B/op [Average]
[info]   (min, avg, max) = (7961.847, 8958.383, 10279.210), stdev = 1175.339
[info]   CI (99.9%): [4432.573, 13484.193] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fastInterpolator:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fastInterpolator:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 5.000), stdev = 0.837
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 10, VM 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.frawInterpolator
[info] # Run progress: 10.00% complete, ETA 00:04:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 145644.849 ops/s
[info] # Warmup Iteration   2: 173558.625 ops/s
[info] # Warmup Iteration   3: 175594.574 ops/s
[info] # Warmup Iteration   4: 176856.630 ops/s
[info] # Warmup Iteration   5: 177636.692 ops/s
[info] Iteration   1: 177369.011 ops/s
[info]                  ·gc.alloc.rate:                                  1423.323 MB/sec
[info]                  ·gc.alloc.rate.norm:                             12632.002 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      ≈ 10⁻³ MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.004 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1361.345 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       12081.949 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        11.000 ms
[info] Iteration   2: 181619.486 ops/s
[info]                  ·gc.alloc.rate:            1457.523 MB/sec
[info]                  ·gc.alloc.rate.norm:       12632.002 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1361.484 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 11799.655 B/op
[info]                  ·gc.count:                 4.000 counts
[info]                  ·gc.time:                  3.000 ms
[info] Iteration   3: 178020.490 ops/s
[info]                  ·gc.alloc.rate:                                  1429.082 MB/sec
[info]                  ·gc.alloc.rate.norm:                             12632.002 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.006 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1361.863 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       12037.840 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   4: 180927.959 ops/s
[info]                  ·gc.alloc.rate:                                  1451.911 MB/sec
[info]                  ·gc.alloc.rate.norm:                             12632.002 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.002 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.015 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.692 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       14805.157 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        6.000 ms
[info] Iteration   5: 174874.698 ops/s
[info]                  ·gc.alloc.rate:            1403.429 MB/sec
[info]                  ·gc.alloc.rate.norm:       12632.002 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1361.450 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 12254.160 B/op
[info]                  ·gc.count:                 4.000 counts
[info]                  ·gc.time:                  3.000 ms
[info] Result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.frawInterpolator":
[info]   178562.329 ±(99.9%) 10590.782 ops/s [Average]
[info]   (min, avg, max) = (174874.698, 178562.329, 181619.486), stdev = 2750.392
[info]   CI (99.9%): [167971.547, 189153.111] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.frawInterpolator:·gc.alloc.rate":
[info]   1433.054 ±(99.9%) 84.855 MB/sec [Average]
[info]   (min, avg, max) = (1403.429, 1433.054, 1457.523), stdev = 22.037
[info]   CI (99.9%): [1348.198, 1517.909] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.frawInterpolator:·gc.alloc.rate.norm":
[info]   12632.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (12632.002, 12632.002, 12632.002), stdev = 0.001
[info]   CI (99.9%): [12632.002, 12632.002] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.frawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.001 ±(99.9%) 0.003 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.002), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.003] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.frawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.005 ±(99.9%) 0.024 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.015), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.029] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Old_Gen":
[info]   1429.567 ±(99.9%) 585.769 MB/sec [Average]
[info]   (min, avg, max) = (1361.345, 1429.567, 1701.692), stdev = 152.122
[info]   CI (99.9%): [843.798, 2015.336] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   12595.752 ±(99.9%) 4796.791 B/op [Average]
[info]   (min, avg, max) = (11799.655, 12595.752, 14805.157), stdev = 1245.711
[info]   CI (99.9%): [7798.961, 17392.543] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.frawInterpolator:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.frawInterpolator:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.400, 11.000), stdev = 3.362
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 10, VM 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fsInterpolator
[info] # Run progress: 15.00% complete, ETA 00:04:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 146850.908 ops/s
[info] # Warmup Iteration   2: 184329.141 ops/s
[info] # Warmup Iteration   3: 190597.268 ops/s
[info] # Warmup Iteration   4: 188838.339 ops/s
[info] # Warmup Iteration   5: 192728.105 ops/s
[info] Iteration   1: 192312.660 ops/s
[info]                  ·gc.alloc.rate:                                  1543.305 MB/sec
[info]                  ·gc.alloc.rate.norm:                             12632.002 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.011 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.725 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       13928.679 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   2: 191805.225 ops/s
[info]                  ·gc.alloc.rate:                                  1539.235 MB/sec
[info]                  ·gc.alloc.rate.norm:                             12632.002 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.022 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1361.393 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       11172.509 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Iteration   3: 189793.510 ops/s
[info]                  ·gc.alloc.rate:                                  1523.133 MB/sec
[info]                  ·gc.alloc.rate.norm:                             12632.002 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.022 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.850 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       14114.182 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   4: 187547.548 ops/s
[info]                  ·gc.alloc.rate:            1504.961 MB/sec
[info]                  ·gc.alloc.rate.norm:       12632.002 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1361.258 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 11425.819 B/op
[info]                  ·gc.count:                 4.000 counts
[info]                  ·gc.time:                  3.000 ms
[info] Iteration   5: 189705.870 ops/s
[info]                  ·gc.alloc.rate:            1522.546 MB/sec
[info]                  ·gc.alloc.rate.norm:       12632.002 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1361.536 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 11296.166 B/op
[info]                  ·gc.count:                 4.000 counts
[info]                  ·gc.time:                  4.000 ms
[info] Result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fsInterpolator":
[info]   190232.963 ±(99.9%) 7326.235 ops/s [Average]
[info]   (min, avg, max) = (187547.548, 190232.963, 192312.660), stdev = 1902.600
[info]   CI (99.9%): [182906.728, 197559.197] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fsInterpolator:·gc.alloc.rate":
[info]   1526.636 ±(99.9%) 58.884 MB/sec [Average]
[info]   (min, avg, max) = (1504.961, 1526.636, 1543.305), stdev = 15.292
[info]   CI (99.9%): [1467.752, 1585.520] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fsInterpolator:·gc.alloc.rate.norm":
[info]   12632.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (12632.002, 12632.002, 12632.002), stdev = 0.001
[info]   CI (99.9%): [12632.002, 12632.002] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fsInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.001 ±(99.9%) 0.005 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.003), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.006] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fsInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.011 ±(99.9%) 0.042 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.022), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Old_Gen":
[info]   1497.553 ±(99.9%) 717.916 MB/sec [Average]
[info]   (min, avg, max) = (1361.258, 1497.553, 1701.850), stdev = 186.440
[info]   CI (99.9%): [779.637, 2215.468] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   12387.471 ±(99.9%) 5759.483 B/op [Average]
[info]   (min, avg, max) = (11172.509, 12387.471, 14114.182), stdev = 1495.720
[info]   CI (99.9%): [6627.988, 18146.954] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fsInterpolator:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fsInterpolator:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 10, VM 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.javaStringBuilder
[info] # Run progress: 20.00% complete, ETA 00:04:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 362892.585 ops/s
[info] # Warmup Iteration   2: 390958.120 ops/s
[info] # Warmup Iteration   3: 406881.830 ops/s
[info] # Warmup Iteration   4: 406194.007 ops/s
[info] # Warmup Iteration   5: 404035.025 ops/s
[info] Iteration   1: 402123.295 ops/s
[info]                  ·gc.alloc.rate:                   964.586 MB/sec
[info]                  ·gc.alloc.rate.norm:              3776.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:             676.681 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:        2648.959 B/op
[info]                  ·gc.churn.G1_Survivor_Space:      1.998 MB/sec
[info]                  ·gc.churn.G1_Survivor_Space.norm: 7.822 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 396073.881 ops/s
[info]                  ·gc.alloc.rate:                                  950.081 MB/sec
[info]                  ·gc.alloc.rate.norm:                             3776.001 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.010 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.040 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1021.014 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       4057.918 B/op
[info]                  ·gc.count:                                       3.000 counts
[info]                  ·gc.time:                                        10.000 ms
[info] Iteration   3: 395254.838 ops/s
[info]                  ·gc.alloc.rate:            948.449 MB/sec
[info]                  ·gc.alloc.rate.norm:       3776.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1021.354 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 4066.253 B/op
[info]                  ·gc.count:                 3.000 counts
[info]                  ·gc.time:                  2.000 ms
[info] Iteration   4: 402704.862 ops/s
[info]                  ·gc.alloc.rate:                                  966.010 MB/sec
[info]                  ·gc.alloc.rate.norm:                             3776.001 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.010 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1021.021 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       3991.030 B/op
[info]                  ·gc.count:                                       3.000 counts
[info]                  ·gc.time:                                        8.000 ms
[info] Iteration   5: 404170.621 ops/s
[info]                  ·gc.alloc.rate:            969.545 MB/sec
[info]                  ·gc.alloc.rate.norm:       3776.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1021.063 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 3976.644 B/op
[info]                  ·gc.count:                 3.000 counts
[info]                  ·gc.time:                  3.000 ms
[info] Result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.javaStringBuilder":
[info]   400065.499 ±(99.9%) 15774.516 ops/s [Average]
[info]   (min, avg, max) = (395254.838, 400065.499, 404170.621), stdev = 4096.592
[info]   CI (99.9%): [384290.983, 415840.015] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.javaStringBuilder:·gc.alloc.rate":
[info]   959.734 ±(99.9%) 37.517 MB/sec [Average]
[info]   (min, avg, max) = (948.449, 959.734, 969.545), stdev = 9.743
[info]   CI (99.9%): [922.217, 997.251] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.javaStringBuilder:·gc.alloc.rate.norm":
[info]   3776.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3776.001, 3776.001, 3776.001), stdev = 0.001
[info]   CI (99.9%): [3776.001, 3776.001] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.javaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.003 ±(99.9%) 0.017 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.010), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.020] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.javaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.010 ±(99.9%) 0.067 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.040), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Old_Gen":
[info]   952.227 ±(99.9%) 593.133 MB/sec [Average]
[info]   (min, avg, max) = (676.681, 952.227, 1021.354), stdev = 154.035
[info]   CI (99.9%): [359.094, 1545.359] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Old_Gen.norm":
[info]   3748.161 ±(99.9%) 2371.013 B/op [Average]
[info]   (min, avg, max) = (2648.959, 3748.161, 4066.253), stdev = 615.745
[info]   CI (99.9%): [1377.148, 6119.174] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Survivor_Space":
[info]   0.400 ±(99.9%) 3.441 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.998), stdev = 0.894
[info]   CI (99.9%): [≈ 0, 3.840] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Survivor_Space.norm":
[info]   1.564 ±(99.9%) 13.469 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.564, 7.822), stdev = 3.498
[info]   CI (99.9%): [≈ 0, 15.034] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.javaStringBuilder:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.javaStringBuilder:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.600, 10.000), stdev = 3.362
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 10, VM 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.pInterpolator
[info] # Run progress: 25.00% complete, ETA 00:03:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 178362.021 ops/s
[info] # Warmup Iteration   2: 208144.439 ops/s
[info] # Warmup Iteration   3: 205980.875 ops/s
[info] # Warmup Iteration   4: 210827.769 ops/s
[info] # Warmup Iteration   5: 214435.467 ops/s
[info] Iteration   1: 210949.169 ops/s
[info]                  ·gc.alloc.rate:                                  1733.563 MB/sec
[info]                  ·gc.alloc.rate.norm:                             12936.002 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.008 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.088 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       15238.243 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        7.000 ms
[info] Iteration   2: 215070.317 ops/s
[info]                  ·gc.alloc.rate:                                  1767.392 MB/sec
[info]                  ·gc.alloc.rate.norm:                             12936.002 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.010 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.709 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       12455.249 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   3: 215017.449 ops/s
[info]                  ·gc.alloc.rate:                                  1767.018 MB/sec
[info]                  ·gc.alloc.rate.norm:                             12936.002 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      ≈ 10⁻³ MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.003 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.745 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       12458.145 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   4: 211581.867 ops/s
[info]                  ·gc.alloc.rate:                                  1738.854 MB/sec
[info]                  ·gc.alloc.rate.norm:                             12936.002 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.004 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.029 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.771 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       12660.131 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   5: 213725.217 ops/s
[info]                  ·gc.alloc.rate:            1757.011 MB/sec
[info]                  ·gc.alloc.rate.norm:       12936.002 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1702.303 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 12533.211 B/op
[info]                  ·gc.count:                 5.000 counts
[info]                  ·gc.time:                  4.000 ms
[info] Result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.pInterpolator":
[info]   213268.804 ±(99.9%) 7391.326 ops/s [Average]
[info]   (min, avg, max) = (210949.169, 213268.804, 215070.317), stdev = 1919.504
[info]   CI (99.9%): [205877.478, 220660.130] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.pInterpolator:·gc.alloc.rate":
[info]   1752.768 ±(99.9%) 60.805 MB/sec [Average]
[info]   (min, avg, max) = (1733.563, 1752.768, 1767.392), stdev = 15.791
[info]   CI (99.9%): [1691.963, 1813.573] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.pInterpolator:·gc.alloc.rate.norm":
[info]   12936.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (12936.002, 12936.002, 12936.002), stdev = 0.001
[info]   CI (99.9%): [12936.002, 12936.002] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.pInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.001 ±(99.9%) 0.006 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.004), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.007] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.pInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.010 ±(99.9%) 0.044 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.029), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.054] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.pInterpolator:·gc.churn.G1_Old_Gen":
[info]   1769.923 ±(99.9%) 585.856 MB/sec [Average]
[info]   (min, avg, max) = (1701.709, 1769.923, 2042.088), stdev = 152.145
[info]   CI (99.9%): [1184.068, 2355.779] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.pInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   13068.996 ±(99.9%) 4680.430 B/op [Average]
[info]   (min, avg, max) = (12455.249, 13068.996, 15238.243), stdev = 1215.493
[info]   CI (99.9%): [8388.566, 17749.426] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.pInterpolator:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.pInterpolator:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 7.000), stdev = 1.342
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 10, VM 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.rawInterpolator
[info] # Run progress: 30.00% complete, ETA 00:03:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 86380.345 ops/s
[info] # Warmup Iteration   2: 109980.599 ops/s
[info] # Warmup Iteration   3: 109313.219 ops/s
[info] # Warmup Iteration   4: 111823.294 ops/s
[info] # Warmup Iteration   5: 109743.824 ops/s
[info] Iteration   1: 110344.233 ops/s
[info]                  ·gc.alloc.rate:                                  2235.831 MB/sec
[info]                  ·gc.alloc.rate.norm:                             31896.004 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.050 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2382.330 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       33985.940 B/op
[info]                  ·gc.count:                                       7.000 counts
[info]                  ·gc.time:                                        6.000 ms
[info] Iteration   2: 107683.893 ops/s
[info]                  ·gc.alloc.rate:                                  2182.117 MB/sec
[info]                  ·gc.alloc.rate.norm:                             31896.004 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.019 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.199 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       29850.827 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   3: 107263.991 ops/s
[info]                  ·gc.alloc.rate:            2173.914 MB/sec
[info]                  ·gc.alloc.rate.norm:       31896.004 B/op
[info]                  ·gc.churn.G1_Old_Gen:      2381.282 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 34938.533 B/op
[info]                  ·gc.count:                 7.000 counts
[info]                  ·gc.time:                  7.000 ms
[info] Iteration   4: 110936.036 ops/s
[info]                  ·gc.alloc.rate:            2247.957 MB/sec
[info]                  ·gc.alloc.rate.norm:       31896.004 B/op
[info]                  ·gc.churn.G1_Old_Gen:      2042.026 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 28974.072 B/op
[info]                  ·gc.count:                 6.000 counts
[info]                  ·gc.time:                  5.000 ms
[info] Iteration   5: 111535.819 ops/s
[info]                  ·gc.alloc.rate:                                  2259.920 MB/sec
[info]                  ·gc.alloc.rate.norm:                             31896.004 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.013 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2382.289 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       33623.088 B/op
[info]                  ·gc.count:                                       7.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.rawInterpolator":
[info]   109552.794 ±(99.9%) 7507.159 ops/s [Average]
[info]   (min, avg, max) = (107263.991, 109552.794, 111535.819), stdev = 1949.585
[info]   CI (99.9%): [102045.636, 117059.953] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.rawInterpolator:·gc.alloc.rate":
[info]   2219.948 ±(99.9%) 151.415 MB/sec [Average]
[info]   (min, avg, max) = (2173.914, 2219.948, 2259.920), stdev = 39.322
[info]   CI (99.9%): [2068.533, 2371.363] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.rawInterpolator:·gc.alloc.rate.norm":
[info]   31896.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (31896.004, 31896.004, 31896.004), stdev = 0.001
[info]   CI (99.9%): [31896.003, 31896.004] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.rawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.001 ±(99.9%) 0.006 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.003), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.007] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.rawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.016 ±(99.9%) 0.079 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.050), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.095] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.rawInterpolator:·gc.churn.G1_Old_Gen":
[info]   2246.025 ±(99.9%) 716.784 MB/sec [Average]
[info]   (min, avg, max) = (2042.026, 2246.025, 2382.330), stdev = 186.146
[info]   CI (99.9%): [1529.241, 2962.809] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.rawInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   32274.492 ±(99.9%) 10298.549 B/op [Average]
[info]   (min, avg, max) = (28974.072, 32274.492, 34938.533), stdev = 2674.500
[info]   CI (99.9%): [21975.943, 42573.041] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.rawInterpolator:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.rawInterpolator:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.400, 7.000), stdev = 1.140
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 10, VM 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.sInterpolator
[info] # Run progress: 35.00% complete, ETA 00:03:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 79267.609 ops/s
[info] # Warmup Iteration   2: 100236.184 ops/s
[info] # Warmup Iteration   3: 101266.080 ops/s
[info] # Warmup Iteration   4: 106465.442 ops/s
[info] # Warmup Iteration   5: 102543.288 ops/s
[info] Iteration   1: 104894.224 ops/s
[info]                  ·gc.alloc.rate:                                  2172.307 MB/sec
[info]                  ·gc.alloc.rate.norm:                             32600.004 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.002 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.033 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.033 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       30644.978 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   2: 107021.132 ops/s
[info]                  ·gc.alloc.rate:                                  2216.562 MB/sec
[info]                  ·gc.alloc.rate.norm:                             32600.004 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.039 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.153 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       30034.884 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   3: 105430.440 ops/s
[info]                  ·gc.alloc.rate:                                  2183.571 MB/sec
[info]                  ·gc.alloc.rate.norm:                             32600.004 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.020 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2382.484 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       35569.725 B/op
[info]                  ·gc.count:                                       7.000 counts
[info]                  ·gc.time:                                        6.000 ms
[info] Iteration   4: 105062.797 ops/s
[info]                  ·gc.alloc.rate:                                  2175.822 MB/sec
[info]                  ·gc.alloc.rate.norm:                             32600.004 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.004 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.056 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2041.990 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       30594.817 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   5: 106166.965 ops/s
[info]                  ·gc.alloc.rate:                                  2199.466 MB/sec
[info]                  ·gc.alloc.rate.norm:                             32600.004 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.002 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.026 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2383.104 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       35321.848 B/op
[info]                  ·gc.count:                                       7.000 counts
[info]                  ·gc.time:                                        6.000 ms
[info] Result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.sInterpolator":
[info]   105715.112 ±(99.9%) 3384.556 ops/s [Average]
[info]   (min, avg, max) = (104894.224, 105715.112, 107021.132), stdev = 878.958
[info]   CI (99.9%): [102330.556, 109099.667] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.sInterpolator:·gc.alloc.rate":
[info]   2189.545 ±(99.9%) 70.729 MB/sec [Average]
[info]   (min, avg, max) = (2172.307, 2189.545, 2216.562), stdev = 18.368
[info]   CI (99.9%): [2118.817, 2260.274] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.sInterpolator:·gc.alloc.rate.norm":
[info]   32600.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (32600.004, 32600.004, 32600.004), stdev = 0.001
[info]   CI (99.9%): [32600.003, 32600.005] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.sInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.002 ±(99.9%) 0.004 MB/sec [Average]
[info]   (min, avg, max) = (0.001, 0.002, 0.004), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.006] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.sInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.035 ±(99.9%) 0.054 B/op [Average]
[info]   (min, avg, max) = (0.020, 0.035, 0.056), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.089] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.sInterpolator:·gc.churn.G1_Old_Gen":
[info]   2178.353 ±(99.9%) 718.642 MB/sec [Average]
[info]   (min, avg, max) = (2041.990, 2178.353, 2383.104), stdev = 186.629
[info]   CI (99.9%): [1459.711, 2896.994] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.sInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   32433.250 ±(99.9%) 10634.921 B/op [Average]
[info]   (min, avg, max) = (30034.884, 32433.250, 35569.725), stdev = 2761.855
[info]   CI (99.9%): [21798.329, 43068.172] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.sInterpolator:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.sInterpolator:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 10, VM 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringBuilder
[info] # Run progress: 40.00% complete, ETA 00:03:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 377871.755 ops/s
[info] # Warmup Iteration   2: 446365.471 ops/s
[info] # Warmup Iteration   3: 455497.841 ops/s
[info] # Warmup Iteration   4: 452019.244 ops/s
[info] # Warmup Iteration   5: 459161.376 ops/s
[info] Iteration   1: 455855.337 ops/s
[info]                  ·gc.alloc.rate:                                  1098.569 MB/sec
[info]                  ·gc.alloc.rate.norm:                             3792.001 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.010 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1019.399 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       3518.727 B/op
[info]                  ·gc.churn.G1_Survivor_Space:                     1.999 MB/sec
[info]                  ·gc.churn.G1_Survivor_Space.norm:                6.899 B/op
[info]                  ·gc.count:                                       3.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   2: 456113.350 ops/s
[info]                  ·gc.alloc.rate:                                  1098.808 MB/sec
[info]                  ·gc.alloc.rate.norm:                             3792.001 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.010 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.035 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1361.456 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       4698.403 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Iteration   3: 455134.238 ops/s
[info]                  ·gc.alloc.rate:            1096.709 MB/sec
[info]                  ·gc.alloc.rate.norm:       3792.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1021.340 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 3531.404 B/op
[info]                  ·gc.count:                 3.000 counts
[info]                  ·gc.time:                  3.000 ms
[info] Iteration   4: 455689.027 ops/s
[info]                  ·gc.alloc.rate:            1097.801 MB/sec
[info]                  ·gc.alloc.rate.norm:       3792.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1021.092 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 3527.034 B/op
[info]                  ·gc.count:                 3.000 counts
[info]                  ·gc.time:                  2.000 ms
[info] Iteration   5: 456730.243 ops/s
[info]                  ·gc.alloc.rate:                                  1100.262 MB/sec
[info]                  ·gc.alloc.rate.norm:                             3792.001 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.003 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1021.047 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       3518.989 B/op
[info]                  ·gc.count:                                       3.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringBuilder":
[info]   455904.439 ±(99.9%) 2251.573 ops/s [Average]
[info]   (min, avg, max) = (455134.238, 455904.439, 456730.243), stdev = 584.726
[info]   CI (99.9%): [453652.866, 458156.011] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringBuilder:·gc.alloc.rate":
[info]   1098.430 ±(99.9%) 5.049 MB/sec [Average]
[info]   (min, avg, max) = (1096.709, 1098.430, 1100.262), stdev = 1.311
[info]   CI (99.9%): [1093.381, 1103.478] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringBuilder:·gc.alloc.rate.norm":
[info]   3792.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3792.001, 3792.001, 3792.001), stdev = 0.001
[info]   CI (99.9%): [3792.001, 3792.001] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.003 ±(99.9%) 0.016 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.010), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.019] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.009 ±(99.9%) 0.056 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.009, 0.035), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.066] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Old_Gen":
[info]   1088.867 ±(99.9%) 586.776 MB/sec [Average]
[info]   (min, avg, max) = (1019.399, 1088.867, 1361.456), stdev = 152.384
[info]   CI (99.9%): [502.090, 1675.643] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Old_Gen.norm":
[info]   3758.911 ±(99.9%) 2022.434 B/op [Average]
[info]   (min, avg, max) = (3518.727, 3758.911, 4698.403), stdev = 525.220
[info]   CI (99.9%): [1736.478, 5781.345] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Survivor_Space":
[info]   0.400 ±(99.9%) 3.442 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.999), stdev = 0.894
[info]   CI (99.9%): [≈ 0, 3.842] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Survivor_Space.norm":
[info]   1.380 ±(99.9%) 11.881 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.380, 6.899), stdev = 3.086
[info]   CI (99.9%): [≈ 0, 13.261] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringBuilder:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringBuilder:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 5.000), stdev = 1.095
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 10, VM 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringConcatenation
[info] # Run progress: 45.00% complete, ETA 00:02:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 119643.652 ops/s
[info] # Warmup Iteration   2: 149180.649 ops/s
[info] # Warmup Iteration   3: 150707.233 ops/s
[info] # Warmup Iteration   4: 152855.492 ops/s
[info] # Warmup Iteration   5: 150215.205 ops/s
[info] Iteration   1: 150229.124 ops/s
[info]                  ·gc.alloc.rate:                                  2213.430 MB/sec
[info]                  ·gc.alloc.rate.norm:                             23192.003 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.027 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2382.463 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       24963.104 B/op
[info]                  ·gc.count:                                       7.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   2: 153120.815 ops/s
[info]                  ·gc.alloc.rate:            2256.022 MB/sec
[info]                  ·gc.alloc.rate.norm:       23192.003 B/op
[info]                  ·gc.churn.G1_Old_Gen:      2042.101 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 20992.883 B/op
[info]                  ·gc.count:                 6.000 counts
[info]                  ·gc.time:                  5.000 ms
[info] Iteration   3: 150529.817 ops/s
[info]                  ·gc.alloc.rate:            2217.945 MB/sec
[info]                  ·gc.alloc.rate.norm:       23192.003 B/op
[info]                  ·gc.churn.G1_Old_Gen:      2382.518 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 24912.865 B/op
[info]                  ·gc.count:                 7.000 counts
[info]                  ·gc.time:                  6.000 ms
[info] Iteration   4: 151848.451 ops/s
[info]                  ·gc.alloc.rate:                                  2237.937 MB/sec
[info]                  ·gc.alloc.rate.norm:                             23192.003 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.004 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.043 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.683 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       21168.569 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        6.000 ms
[info] Iteration   5: 151627.302 ops/s
[info]                  ·gc.alloc.rate:                                  2234.260 MB/sec
[info]                  ·gc.alloc.rate.norm:                             23192.003 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.014 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2382.557 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       24731.349 B/op
[info]                  ·gc.count:                                       7.000 counts
[info]                  ·gc.time:                                        6.000 ms
[info] Result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringConcatenation":
[info]   151471.102 ±(99.9%) 4439.473 ops/s [Average]
[info]   (min, avg, max) = (150229.124, 151471.102, 153120.815), stdev = 1152.917
[info]   CI (99.9%): [147031.629, 155910.575] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringConcatenation:·gc.alloc.rate":
[info]   2231.919 ±(99.9%) 65.567 MB/sec [Average]
[info]   (min, avg, max) = (2213.430, 2231.919, 2256.022), stdev = 17.028
[info]   CI (99.9%): [2166.352, 2297.486] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringConcatenation:·gc.alloc.rate.norm":
[info]   23192.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (23192.003, 23192.003, 23192.003), stdev = 0.001
[info]   CI (99.9%): [23192.002, 23192.003] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringConcatenation:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.002 ±(99.9%) 0.007 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.004), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.008] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringConcatenation:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.017 ±(99.9%) 0.071 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.043), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.088] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringConcatenation:·gc.churn.G1_Old_Gen":
[info]   2246.465 ±(99.9%) 717.344 MB/sec [Average]
[info]   (min, avg, max) = (2042.101, 2246.465, 2382.557), stdev = 186.292
[info]   CI (99.9%): [1529.121, 2963.808] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringConcatenation:·gc.churn.G1_Old_Gen.norm":
[info]   23353.754 ±(99.9%) 8000.483 B/op [Average]
[info]   (min, avg, max) = (20992.883, 23353.754, 24963.104), stdev = 2077.700
[info]   CI (99.9%): [15353.270, 31354.237] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringConcatenation:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringConcatenation:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 10, VM 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fInterpolator
[info] # Run progress: 50.00% complete, ETA 00:02:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 284241.474 ops/s
[info] # Warmup Iteration   2: 513539.007 ops/s
[info] # Warmup Iteration   3: 527120.562 ops/s
[info] # Warmup Iteration   4: 526629.224 ops/s
[info] # Warmup Iteration   5: 510063.281 ops/s
[info] Iteration   1: 525978.724 ops/s
[info]                  ·gc.alloc.rate:            823.288 MB/sec
[info]                  ·gc.alloc.rate.norm:       2464.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1014.957 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 3037.641 B/op
[info]                  ·gc.count:                 3.000 counts
[info]                  ·gc.time:                  8.000 ms
[info] Iteration   2: 529327.097 ops/s
[info]                  ·gc.alloc.rate:            828.783 MB/sec
[info]                  ·gc.alloc.rate.norm:       2464.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:      676.865 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 2012.344 B/op
[info]                  ·gc.count:                 2.000 counts
[info]                  ·gc.time:                  6.000 ms
[info] Iteration   3: 525671.243 ops/s
[info]                  ·gc.alloc.rate:                                  822.878 MB/sec
[info]                  ·gc.alloc.rate.norm:                             2464.001 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.090 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.269 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1019.096 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       3051.549 B/op
[info]                  ·gc.churn.G1_Survivor_Space:                     1.998 MB/sec
[info]                  ·gc.churn.G1_Survivor_Space.norm:                5.983 B/op
[info]                  ·gc.count:                                       3.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   4: 512147.924 ops/s
[info]                  ·gc.alloc.rate:            801.726 MB/sec
[info]                  ·gc.alloc.rate.norm:       2464.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:      680.713 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 2092.084 B/op
[info]                  ·gc.count:                 2.000 counts
[info]                  ·gc.time:                  1.000 ms
[info] Iteration   5: 510391.870 ops/s
[info]                  ·gc.alloc.rate:            798.989 MB/sec
[info]                  ·gc.alloc.rate.norm:       2464.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1021.074 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 3148.889 B/op
[info]                  ·gc.count:                 3.000 counts
[info]                  ·gc.time:                  3.000 ms
[info] Result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fInterpolator":
[info]   520703.372 ±(99.9%) 33701.411 ops/s [Average]
[info]   (min, avg, max) = (510391.870, 520703.372, 529327.097), stdev = 8752.149
[info]   CI (99.9%): [487001.961, 554404.783] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fInterpolator:·gc.alloc.rate":
[info]   815.133 ±(99.9%) 52.839 MB/sec [Average]
[info]   (min, avg, max) = (798.989, 815.133, 828.783), stdev = 13.722
[info]   CI (99.9%): [762.294, 867.972] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fInterpolator:·gc.alloc.rate.norm":
[info]   2464.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2464.001, 2464.001, 2464.001), stdev = 0.001
[info]   CI (99.9%): [2464.001, 2464.001] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.018 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.018, 0.090), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.054 ±(99.9%) 0.463 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.269), stdev = 0.120
[info]   CI (99.9%): [≈ 0, 0.516] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fInterpolator:·gc.churn.G1_Old_Gen":
[info]   882.541 ±(99.9%) 716.286 MB/sec [Average]
[info]   (min, avg, max) = (676.865, 882.541, 1021.074), stdev = 186.017
[info]   CI (99.9%): [166.255, 1598.827] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   2668.501 ±(99.9%) 2175.325 B/op [Average]
[info]   (min, avg, max) = (2012.344, 2668.501, 3148.889), stdev = 564.925
[info]   CI (99.9%): [493.176, 4843.826] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fInterpolator:·gc.churn.G1_Survivor_Space":
[info]   0.400 ±(99.9%) 3.441 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.998), stdev = 0.894
[info]   CI (99.9%): [≈ 0, 3.841] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fInterpolator:·gc.churn.G1_Survivor_Space.norm":
[info]   1.197 ±(99.9%) 10.304 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.197, 5.983), stdev = 2.676
[info]   CI (99.9%): [≈ 0, 11.501] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fInterpolator:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fInterpolator:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.600, 8.000), stdev = 2.702
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 10, VM 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fastInterpolator
[info] # Run progress: 55.00% complete, ETA 00:02:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2582895.979 ops/s
[info] # Warmup Iteration   2: 4237074.668 ops/s
[info] # Warmup Iteration   3: 4163623.866 ops/s
[info] # Warmup Iteration   4: 4306270.606 ops/s
[info] # Warmup Iteration   5: 4412378.922 ops/s
[info] Iteration   1: 4411799.629 ops/s
[info]                  ·gc.alloc.rate:                                  1950.594 MB/sec
[info]                  ·gc.alloc.rate.norm:                             696.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.654 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       607.175 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   2: 4389269.254 ops/s
[info]                  ·gc.alloc.rate:                                  1940.847 MB/sec
[info]                  ·gc.alloc.rate.norm:                             696.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.198 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       732.345 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   3: 4297954.497 ops/s
[info]                  ·gc.alloc.rate:                                  1900.224 MB/sec
[info]                  ·gc.alloc.rate.norm:                             696.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      ≈ 10⁻³ MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2041.891 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       747.889 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        13.000 ms
[info] Iteration   4: 4362711.231 ops/s
[info]                  ·gc.alloc.rate:                                  1928.939 MB/sec
[info]                  ·gc.alloc.rate.norm:                             696.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻³ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.690 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       614.004 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   5: 4330806.074 ops/s
[info]                  ·gc.alloc.rate:            1915.007 MB/sec
[info]                  ·gc.alloc.rate.norm:       696.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      2042.183 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 742.222 B/op
[info]                  ·gc.count:                 6.000 counts
[info]                  ·gc.time:                  11.000 ms
[info] Result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fastInterpolator":
[info]   4358508.137 ±(99.9%) 174749.280 ops/s [Average]
[info]   (min, avg, max) = (4297954.497, 4358508.137, 4411799.629), stdev = 45381.833
[info]   CI (99.9%): [4183758.857, 4533257.416] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fastInterpolator:·gc.alloc.rate":
[info]   1927.122 ±(99.9%) 77.322 MB/sec [Average]
[info]   (min, avg, max) = (1900.224, 1927.122, 1950.594), stdev = 20.080
[info]   CI (99.9%): [1849.800, 2004.444] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fastInterpolator:·gc.alloc.rate.norm":
[info]   696.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (696.000, 696.000, 696.000), stdev = 0.001
[info]   CI (99.9%): [696.000, 696.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fastInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.001 ±(99.9%) 0.004 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.003), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.005] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fastInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   ≈ 10⁻³ B/op
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fastInterpolator:·gc.churn.G1_Old_Gen":
[info]   1905.923 ±(99.9%) 717.972 MB/sec [Average]
[info]   (min, avg, max) = (1701.654, 1905.923, 2042.198), stdev = 186.455
[info]   CI (99.9%): [1187.951, 2623.895] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fastInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   688.727 ±(99.9%) 275.655 B/op [Average]
[info]   (min, avg, max) = (607.175, 688.727, 747.889), stdev = 71.587
[info]   CI (99.9%): [413.072, 964.382] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fastInterpolator:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fastInterpolator:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 13.000), stdev = 4.278
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 10, VM 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.frawInterpolator
[info] # Run progress: 60.00% complete, ETA 00:02:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5836001.733 ops/s
[info] # Warmup Iteration   2: 6799068.827 ops/s
[info] # Warmup Iteration   3: 6101255.443 ops/s
[info] # Warmup Iteration   4: 6314926.518 ops/s
[info] # Warmup Iteration   5: 6315214.191 ops/s
[info] Iteration   1: 6328722.194 ops/s
[info]                  ·gc.alloc.rate:            611.125 MB/sec
[info]                  ·gc.alloc.rate.norm:       152.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      676.711 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 168.313 B/op
[info]                  ·gc.count:                 2.000 counts
[info]                  ·gc.time:                  7.000 ms
[info] Iteration   2: 6174369.817 ops/s
[info]                  ·gc.alloc.rate:            596.349 MB/sec
[info]                  ·gc.alloc.rate.norm:       152.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      676.838 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 172.515 B/op
[info]                  ·gc.count:                 2.000 counts
[info]                  ·gc.time:                  5.000 ms
[info] Iteration   3: 6187270.989 ops/s
[info]                  ·gc.alloc.rate:            597.466 MB/sec
[info]                  ·gc.alloc.rate.norm:       152.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      676.687 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 172.155 B/op
[info]                  ·gc.count:                 2.000 counts
[info]                  ·gc.time:                  6.000 ms
[info] Iteration   4: 6193579.340 ops/s
[info]                  ·gc.alloc.rate:                   598.159 MB/sec
[info]                  ·gc.alloc.rate.norm:              152.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:             676.753 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:        171.972 B/op
[info]                  ·gc.churn.G1_Survivor_Space:      1.998 MB/sec
[info]                  ·gc.churn.G1_Survivor_Space.norm: 0.508 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 6205385.757 ops/s
[info]                  ·gc.alloc.rate:            599.299 MB/sec
[info]                  ·gc.alloc.rate.norm:       152.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      340.391 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 86.333 B/op
[info]                  ·gc.count:                 1.000 counts
[info]                  ·gc.time:                  1.000 ms
[info] Result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.frawInterpolator":
[info]   6217865.619 ±(99.9%) 242488.677 ops/s [Average]
[info]   (min, avg, max) = (6174369.817, 6217865.619, 6328722.194), stdev = 62973.539
[info]   CI (99.9%): [5975376.942, 6460354.296] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.frawInterpolator:·gc.alloc.rate":
[info]   600.479 ±(99.9%) 23.283 MB/sec [Average]
[info]   (min, avg, max) = (596.349, 600.479, 611.125), stdev = 6.047
[info]   CI (99.9%): [577.196, 623.763] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.frawInterpolator:·gc.alloc.rate.norm":
[info]   152.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (152.000, 152.000, 152.000), stdev = 0.001
[info]   CI (99.9%): [152.000, 152.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Old_Gen":
[info]   609.476 ±(99.9%) 579.225 MB/sec [Average]
[info]   (min, avg, max) = (340.391, 609.476, 676.838), stdev = 150.423
[info]   CI (99.9%): [30.251, 1188.701] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   154.258 ±(99.9%) 146.359 B/op [Average]
[info]   (min, avg, max) = (86.333, 154.258, 172.515), stdev = 38.009
[info]   CI (99.9%): [7.899, 300.616] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Survivor_Space":
[info]   0.400 ±(99.9%) 3.441 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.998), stdev = 0.894
[info]   CI (99.9%): [≈ 0, 3.841] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Survivor_Space.norm":
[info]   0.102 ±(99.9%) 0.874 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.102, 0.508), stdev = 0.227
[info]   CI (99.9%): [≈ 0, 0.976] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.frawInterpolator:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.frawInterpolator:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.800, 7.000), stdev = 2.280
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 10, VM 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fsInterpolator
[info] # Run progress: 65.00% complete, ETA 00:01:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5601600.686 ops/s
[info] # Warmup Iteration   2: 6286312.224 ops/s
[info] # Warmup Iteration   3: 6032946.842 ops/s
[info] # Warmup Iteration   4: 6074866.170 ops/s
[info] # Warmup Iteration   5: 6196621.042 ops/s
[info] Iteration   1: 6370511.472 ops/s
[info]                  ·gc.alloc.rate:            615.172 MB/sec
[info]                  ·gc.alloc.rate.norm:       152.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      676.711 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 167.206 B/op
[info]                  ·gc.count:                 2.000 counts
[info]                  ·gc.time:                  5.000 ms
[info] Iteration   2: 6173958.824 ops/s
[info]                  ·gc.alloc.rate:            596.181 MB/sec
[info]                  ·gc.alloc.rate.norm:       152.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      676.666 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 172.520 B/op
[info]                  ·gc.count:                 2.000 counts
[info]                  ·gc.time:                  6.000 ms
[info] Iteration   3: 6025740.406 ops/s
[info]                  ·gc.alloc.rate:            581.842 MB/sec
[info]                  ·gc.alloc.rate.norm:       152.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      338.332 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 88.386 B/op
[info]                  ·gc.count:                 1.000 counts
[info]                  ·gc.time:                  2.000 ms
[info] Iteration   4: 6029764.890 ops/s
[info]                  ·gc.alloc.rate:            582.437 MB/sec
[info]                  ·gc.alloc.rate.norm:       152.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      676.856 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 176.641 B/op
[info]                  ·gc.count:                 2.000 counts
[info]                  ·gc.time:                  6.000 ms
[info] Iteration   5: 6059050.369 ops/s
[info]                  ·gc.alloc.rate:                   585.166 MB/sec
[info]                  ·gc.alloc.rate.norm:              152.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:             678.784 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:        176.318 B/op
[info]                  ·gc.churn.G1_Survivor_Space:      1.998 MB/sec
[info]                  ·gc.churn.G1_Survivor_Space.norm: 0.519 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fsInterpolator":
[info]   6131805.192 ±(99.9%) 563671.810 ops/s [Average]
[info]   (min, avg, max) = (6025740.406, 6131805.192, 6370511.472), stdev = 146383.779
[info]   CI (99.9%): [5568133.383, 6695477.002] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fsInterpolator:·gc.alloc.rate":
[info]   592.159 ±(99.9%) 54.307 MB/sec [Average]
[info]   (min, avg, max) = (581.842, 592.159, 615.172), stdev = 14.103
[info]   CI (99.9%): [537.852, 646.467] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fsInterpolator:·gc.alloc.rate.norm":
[info]   152.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (152.000, 152.000, 152.000), stdev = 0.001
[info]   CI (99.9%): [152.000, 152.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Old_Gen":
[info]   609.470 ±(99.9%) 583.655 MB/sec [Average]
[info]   (min, avg, max) = (338.332, 609.470, 678.784), stdev = 151.573
[info]   CI (99.9%): [25.815, 1193.124] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   156.214 ±(99.9%) 146.740 B/op [Average]
[info]   (min, avg, max) = (88.386, 156.214, 176.641), stdev = 38.108
[info]   CI (99.9%): [9.475, 302.954] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Survivor_Space":
[info]   0.400 ±(99.9%) 3.441 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.998), stdev = 0.894
[info]   CI (99.9%): [≈ 0, 3.841] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Survivor_Space.norm":
[info]   0.104 ±(99.9%) 0.894 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.104, 0.519), stdev = 0.232
[info]   CI (99.9%): [≈ 0, 0.998] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fsInterpolator:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fsInterpolator:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.400, 6.000), stdev = 1.817
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 10, VM 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.javaStringBuilder
[info] # Run progress: 70.00% complete, ETA 00:01:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4477990.792 ops/s
[info] # Warmup Iteration   2: 4792738.810 ops/s
[info] # Warmup Iteration   3: 4979776.429 ops/s
[info] # Warmup Iteration   4: 5154814.339 ops/s
[info] # Warmup Iteration   5: 5205337.346 ops/s
[info] Iteration   1: 5034476.004 ops/s
[info]                  ·gc.alloc.rate:            1637.562 MB/sec
[info]                  ·gc.alloc.rate.norm:       512.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1701.778 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 532.078 B/op
[info]                  ·gc.count:                 5.000 counts
[info]                  ·gc.time:                  4.000 ms
[info] Iteration   2: 5239357.181 ops/s
[info]                  ·gc.alloc.rate:            1704.180 MB/sec
[info]                  ·gc.alloc.rate.norm:       512.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1701.757 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 511.272 B/op
[info]                  ·gc.count:                 5.000 counts
[info]                  ·gc.time:                  4.000 ms
[info] Iteration   3: 5183167.215 ops/s
[info]                  ·gc.alloc.rate:                                  1685.763 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.580 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       516.804 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   4: 5031789.579 ops/s
[info]                  ·gc.alloc.rate:                                  1637.126 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻³ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1702.227 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       532.360 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   5: 5089507.799 ops/s
[info]                  ·gc.alloc.rate:            1655.933 MB/sec
[info]                  ·gc.alloc.rate.norm:       512.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1702.272 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 526.327 B/op
[info]                  ·gc.count:                 5.000 counts
[info]                  ·gc.time:                  4.000 ms
[info] Result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.javaStringBuilder":
[info]   5115659.556 ±(99.9%) 355883.893 ops/s [Average]
[info]   (min, avg, max) = (5031789.579, 5115659.556, 5239357.181), stdev = 92421.917
[info]   CI (99.9%): [4759775.662, 5471543.449] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.javaStringBuilder:·gc.alloc.rate":
[info]   1664.113 ±(99.9%) 115.106 MB/sec [Average]
[info]   (min, avg, max) = (1637.126, 1664.113, 1704.180), stdev = 29.893
[info]   CI (99.9%): [1549.007, 1779.219] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.javaStringBuilder:·gc.alloc.rate.norm":
[info]   512.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (512.000, 512.000, 512.000), stdev = 0.001
[info]   CI (99.9%): [512.000, 512.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.javaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   ≈ 10⁻³ MB/sec
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.javaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Old_Gen":
[info]   1701.923 ±(99.9%) 1.188 MB/sec [Average]
[info]   (min, avg, max) = (1701.580, 1701.923, 1702.272), stdev = 0.308
[info]   CI (99.9%): [1700.735, 1703.111] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Old_Gen.norm":
[info]   523.768 ±(99.9%) 36.229 B/op [Average]
[info]   (min, avg, max) = (511.272, 523.768, 532.360), stdev = 9.408
[info]   CI (99.9%): [487.540, 559.997] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.javaStringBuilder:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.javaStringBuilder:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 10, VM 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.pInterpolator
[info] # Run progress: 75.00% complete, ETA 00:01:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5519591.639 ops/s
[info] # Warmup Iteration   2: 5745986.688 ops/s
[info] # Warmup Iteration   3: 6149030.386 ops/s
[info] # Warmup Iteration   4: 6176485.532 ops/s
[info] # Warmup Iteration   5: 6241627.031 ops/s
[info] Iteration   1: 6271886.098 ops/s
[info]                  ·gc.alloc.rate:                                  1307.473 MB/sec
[info]                  ·gc.alloc.rate.norm:                             328.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.004 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1361.983 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       341.675 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        7.000 ms
[info] Iteration   2: 6166510.982 ops/s
[info]                  ·gc.alloc.rate:            1285.608 MB/sec
[info]                  ·gc.alloc.rate.norm:       328.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1362.095 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 347.515 B/op
[info]                  ·gc.count:                 4.000 counts
[info]                  ·gc.time:                  2.000 ms
[info] Iteration   3: 6050880.713 ops/s
[info]                  ·gc.alloc.rate:                                  1260.881 MB/sec
[info]                  ·gc.alloc.rate.norm:                             328.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.002 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1021.034 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       265.607 B/op
[info]                  ·gc.count:                                       3.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Iteration   4: 6049372.675 ops/s
[info]                  ·gc.alloc.rate:                                  1260.497 MB/sec
[info]                  ·gc.alloc.rate.norm:                             328.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻³ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1361.275 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       354.224 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Iteration   5: 6202033.303 ops/s
[info]                  ·gc.alloc.rate:                                  1292.379 MB/sec
[info]                  ·gc.alloc.rate.norm:                             328.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻³ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1361.430 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       345.525 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.pInterpolator":
[info]   6148136.754 ±(99.9%) 374173.983 ops/s [Average]
[info]   (min, avg, max) = (6049372.675, 6148136.754, 6271886.098), stdev = 97171.795
[info]   CI (99.9%): [5773962.771, 6522310.738] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.pInterpolator:·gc.alloc.rate":
[info]   1281.367 ±(99.9%) 78.822 MB/sec [Average]
[info]   (min, avg, max) = (1260.497, 1281.367, 1307.473), stdev = 20.470
[info]   CI (99.9%): [1202.546, 1360.189] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.pInterpolator:·gc.alloc.rate.norm":
[info]   328.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (328.000, 328.000, 328.000), stdev = 0.001
[info]   CI (99.9%): [328.000, 328.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.pInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.002 ±(99.9%) 0.006 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.004), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.008] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.pInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   ≈ 10⁻³ B/op
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.pInterpolator:·gc.churn.G1_Old_Gen":
[info]   1293.563 ±(99.9%) 586.641 MB/sec [Average]
[info]   (min, avg, max) = (1021.034, 1293.563, 1362.095), stdev = 152.349
[info]   CI (99.9%): [706.922, 1880.204] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.pInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   330.909 ±(99.9%) 141.654 B/op [Average]
[info]   (min, avg, max) = (265.607, 330.909, 354.224), stdev = 36.787
[info]   CI (99.9%): [189.255, 472.563] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.pInterpolator:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.pInterpolator:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.600, 7.000), stdev = 1.949
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 10, VM 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.rawInterpolator
[info] # Run progress: 80.00% complete, ETA 00:01:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2673118.803 ops/s
[info] # Warmup Iteration   2: 3155352.901 ops/s
[info] # Warmup Iteration   3: 3201914.700 ops/s
[info] # Warmup Iteration   4: 3152579.236 ops/s
[info] # Warmup Iteration   5: 3241718.446 ops/s
[info] Iteration   1: 3166197.056 ops/s
[info]                  ·gc.alloc.rate:                                  2027.837 MB/sec
[info]                  ·gc.alloc.rate.norm:                             1008.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.397 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       1015.237 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   2: 3213316.478 ops/s
[info]                  ·gc.alloc.rate:            2057.691 MB/sec
[info]                  ·gc.alloc.rate.norm:       1008.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      2042.118 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 1000.372 B/op
[info]                  ·gc.count:                 6.000 counts
[info]                  ·gc.time:                  4.000 ms
[info] Iteration   3: 3136150.781 ops/s
[info]                  ·gc.alloc.rate:                                  2008.259 MB/sec
[info]                  ·gc.alloc.rate.norm:                             1008.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2041.977 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       1024.925 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   4: 3144174.752 ops/s
[info]                  ·gc.alloc.rate:            2013.332 MB/sec
[info]                  ·gc.alloc.rate.norm:       1008.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      2041.967 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 1022.337 B/op
[info]                  ·gc.count:                 6.000 counts
[info]                  ·gc.time:                  5.000 ms
[info] Iteration   5: 3157668.486 ops/s
[info]                  ·gc.alloc.rate:                                  2022.358 MB/sec
[info]                  ·gc.alloc.rate.norm:                             1008.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.295 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       1017.937 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.rawInterpolator":
[info]   3163501.511 ±(99.9%) 116229.618 ops/s [Average]
[info]   (min, avg, max) = (3136150.781, 3163501.511, 3213316.478), stdev = 30184.463
[info]   CI (99.9%): [3047271.892, 3279731.129] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.rawInterpolator:·gc.alloc.rate":
[info]   2025.895 ±(99.9%) 74.471 MB/sec [Average]
[info]   (min, avg, max) = (2008.259, 2025.895, 2057.691), stdev = 19.340
[info]   CI (99.9%): [1951.424, 2100.367] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.rawInterpolator:·gc.alloc.rate.norm":
[info]   1008.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1008.000, 1008.000, 1008.000), stdev = 0.001
[info]   CI (99.9%): [1008.000, 1008.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.rawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.001 ±(99.9%) 0.004 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.003), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.005] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.rawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   ≈ 10⁻³ B/op
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.rawInterpolator:·gc.churn.G1_Old_Gen":
[info]   2042.151 ±(99.9%) 0.736 MB/sec [Average]
[info]   (min, avg, max) = (2041.967, 2042.151, 2042.397), stdev = 0.191
[info]   CI (99.9%): [2041.415, 2042.888] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.rawInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   1016.161 ±(99.9%) 36.947 B/op [Average]
[info]   (min, avg, max) = (1000.372, 1016.161, 1024.925), stdev = 9.595
[info]   CI (99.9%): [979.215, 1053.108] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.rawInterpolator:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.rawInterpolator:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 10, VM 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.sInterpolator
[info] # Run progress: 85.00% complete, ETA 00:00:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2524767.127 ops/s
[info] # Warmup Iteration   2: 2958151.184 ops/s
[info] # Warmup Iteration   3: 2963989.254 ops/s
[info] # Warmup Iteration   4: 3007646.336 ops/s
[info] # Warmup Iteration   5: 3006560.413 ops/s
[info] Iteration   1: 2949779.155 ops/s
[info]                  ·gc.alloc.rate:            1889.005 MB/sec
[info]                  ·gc.alloc.rate.norm:       1008.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1701.740 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 908.073 B/op
[info]                  ·gc.count:                 5.000 counts
[info]                  ·gc.time:                  4.000 ms
[info] Iteration   2: 2906299.963 ops/s
[info]                  ·gc.alloc.rate:                                  1861.161 MB/sec
[info]                  ·gc.alloc.rate.norm:                             1008.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.184 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       1106.042 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   3: 2907443.840 ops/s
[info]                  ·gc.alloc.rate:                                  1861.795 MB/sec
[info]                  ·gc.alloc.rate.norm:                             1008.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.710 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       921.328 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   4: 2908081.795 ops/s
[info]                  ·gc.alloc.rate:                                  1862.771 MB/sec
[info]                  ·gc.alloc.rate.norm:                             1008.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.673 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       1105.350 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   5: 2974260.051 ops/s
[info]                  ·gc.alloc.rate:            1905.430 MB/sec
[info]                  ·gc.alloc.rate.norm:       1008.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1702.449 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 900.620 B/op
[info]                  ·gc.count:                 5.000 counts
[info]                  ·gc.time:                  4.000 ms
[info] Result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.sInterpolator":
[info]   2929172.961 ±(99.9%) 120199.732 ops/s [Average]
[info]   (min, avg, max) = (2906299.963, 2929172.961, 2974260.051), stdev = 31215.489
[info]   CI (99.9%): [2808973.229, 3049372.693] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.sInterpolator:·gc.alloc.rate":
[info]   1876.033 ±(99.9%) 77.785 MB/sec [Average]
[info]   (min, avg, max) = (1861.161, 1876.033, 1905.430), stdev = 20.201
[info]   CI (99.9%): [1798.248, 1953.818] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.sInterpolator:·gc.alloc.rate.norm":
[info]   1008.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1008.000, 1008.000, 1008.000), stdev = 0.001
[info]   CI (99.9%): [1008.000, 1008.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.sInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.001 ±(99.9%) 0.004 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.003), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.005] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.sInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.001 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.003] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.sInterpolator:·gc.churn.G1_Old_Gen":
[info]   1838.151 ±(99.9%) 718.065 MB/sec [Average]
[info]   (min, avg, max) = (1701.710, 1838.151, 2042.673), stdev = 186.479
[info]   CI (99.9%): [1120.086, 2556.216] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.sInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   988.282 ±(99.9%) 413.713 B/op [Average]
[info]   (min, avg, max) = (900.620, 988.282, 1106.042), stdev = 107.440
[info]   CI (99.9%): [574.570, 1401.995] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.sInterpolator:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.sInterpolator:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 10, VM 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringBuilder
[info] # Run progress: 90.00% complete, ETA 00:00:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4369170.016 ops/s
[info] # Warmup Iteration   2: 4758003.303 ops/s
[info] # Warmup Iteration   3: 4954300.304 ops/s
[info] # Warmup Iteration   4: 4925944.134 ops/s
[info] # Warmup Iteration   5: 5001702.398 ops/s
[info] Iteration   1: 4971325.517 ops/s
[info]                  ·gc.alloc.rate:                                  1617.030 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.002 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1361.442 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       431.073 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Iteration   2: 4947949.023 ops/s
[info]                  ·gc.alloc.rate:                                  1609.552 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻³ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.874 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       541.368 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   3: 4979060.650 ops/s
[info]                  ·gc.alloc.rate:                                  1619.385 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.568 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       537.984 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   4: 5015216.527 ops/s
[info]                  ·gc.alloc.rate:                                  1631.756 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻³ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1702.220 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       534.110 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   5: 4953731.350 ops/s
[info]                  ·gc.alloc.rate:            1611.278 MB/sec
[info]                  ·gc.alloc.rate.norm:       512.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1361.362 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 432.587 B/op
[info]                  ·gc.count:                 4.000 counts
[info]                  ·gc.time:                  3.000 ms
[info] Result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringBuilder":
[info]   4973456.614 ±(99.9%) 102233.696 ops/s [Average]
[info]   (min, avg, max) = (4947949.023, 4973456.614, 5015216.527), stdev = 26549.766
[info]   CI (99.9%): [4871222.917, 5075690.310] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringBuilder:·gc.alloc.rate":
[info]   1617.800 ±(99.9%) 33.812 MB/sec [Average]
[info]   (min, avg, max) = (1609.552, 1617.800, 1631.756), stdev = 8.781
[info]   CI (99.9%): [1583.988, 1651.613] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringBuilder:·gc.alloc.rate.norm":
[info]   512.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (512.000, 512.000, 512.000), stdev = 0.001
[info]   CI (99.9%): [512.000, 512.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.001 ±(99.9%) 0.004 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.003), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.005] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   ≈ 10⁻³ B/op
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Old_Gen":
[info]   1565.693 ±(99.9%) 718.113 MB/sec [Average]
[info]   (min, avg, max) = (1361.362, 1565.693, 1702.220), stdev = 186.492
[info]   CI (99.9%): [847.580, 2283.807] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Old_Gen.norm":
[info]   495.424 ±(99.9%) 223.771 B/op [Average]
[info]   (min, avg, max) = (431.073, 495.424, 541.368), stdev = 58.113
[info]   CI (99.9%): [271.653, 719.195] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringBuilder:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringBuilder:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 10, VM 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringConcatenation
[info] # Run progress: 95.00% complete, ETA 00:00:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3086698.034 ops/s
[info] # Warmup Iteration   2: 3408769.709 ops/s
[info] # Warmup Iteration   3: 4031253.605 ops/s
[info] # Warmup Iteration   4: 4083303.025 ops/s
[info] # Warmup Iteration   5: 4082153.673 ops/s
[info] Iteration   1: 4050485.228 ops/s
[info]                  ·gc.alloc.rate:                                  1749.733 MB/sec
[info]                  ·gc.alloc.rate.norm:                             680.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.004 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.002 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.726 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       661.343 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Iteration   2: 3981351.365 ops/s
[info]                  ·gc.alloc.rate:                                  1719.821 MB/sec
[info]                  ·gc.alloc.rate.norm:                             680.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.605 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       672.798 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   3: 4108514.928 ops/s
[info]                  ·gc.alloc.rate:                                  1774.849 MB/sec
[info]                  ·gc.alloc.rate.norm:                             680.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.722 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       651.983 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   4: 4108163.003 ops/s
[info]                  ·gc.alloc.rate:                                  1774.748 MB/sec
[info]                  ·gc.alloc.rate.norm:                             680.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.788 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       652.045 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   5: 4065998.182 ops/s
[info]                  ·gc.alloc.rate:                                  1756.501 MB/sec
[info]                  ·gc.alloc.rate.norm:                             680.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.823 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       658.833 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringConcatenation":
[info]   4062902.541 ±(99.9%) 201408.981 ops/s [Average]
[info]   (min, avg, max) = (3981351.365, 4062902.541, 4108514.928), stdev = 52305.273
[info]   CI (99.9%): [3861493.560, 4264311.522] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.alloc.rate":
[info]   1755.130 ±(99.9%) 87.204 MB/sec [Average]
[info]   (min, avg, max) = (1719.821, 1755.130, 1774.849), stdev = 22.646
[info]   CI (99.9%): [1667.927, 1842.334] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.alloc.rate.norm":
[info]   680.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (680.000, 680.000, 680.000), stdev = 0.001
[info]   CI (99.9%): [680.000, 680.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.002 ±(99.9%) 0.004 MB/sec [Average]
[info]   (min, avg, max) = (0.001, 0.002, 0.004), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.007] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.001 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.002), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.003] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.churn.G1_Old_Gen":
[info]   1701.733 ±(99.9%) 0.320 MB/sec [Average]
[info]   (min, avg, max) = (1701.605, 1701.733, 1701.823), stdev = 0.083
[info]   CI (99.9%): [1701.413, 1702.053] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.churn.G1_Old_Gen.norm":
[info]   659.400 ±(99.9%) 32.940 B/op [Average]
[info]   (min, avg, max) = (651.983, 659.400, 672.798), stdev = 8.554
[info]   CI (99.9%): [626.461, 692.340] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # Run complete. Total time: 00:05:13
[info] Benchmark                                                                                               Mode  Cnt        Score        Error   Units
[info] NestedConcatenationBenchmark.fInterpolator                                                             thrpt    5    23658.170 ±   2402.696   ops/s
[info] NestedConcatenationBenchmark.fInterpolator:·gc.alloc.rate                                              thrpt    5     1058.849 ±    108.132  MB/sec
[info] NestedConcatenationBenchmark.fInterpolator:·gc.alloc.rate.norm                                         thrpt    5    70440.909 ±      7.681    B/op
[info] NestedConcatenationBenchmark.fInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                  thrpt    5        0.019 ±      0.157  MB/sec
[info] NestedConcatenationBenchmark.fInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm             thrpt    5        1.266 ±     10.722    B/op
[info] NestedConcatenationBenchmark.fInterpolator:·gc.churn.G1_Old_Gen                                        thrpt    5     1088.031 ±    588.780  MB/sec
[info] NestedConcatenationBenchmark.fInterpolator:·gc.churn.G1_Old_Gen.norm                                   thrpt    5    72300.504 ±  34682.688    B/op
[info] NestedConcatenationBenchmark.fInterpolator:·gc.churn.G1_Survivor_Space                                 thrpt    5        0.400 ±      3.441  MB/sec
[info] NestedConcatenationBenchmark.fInterpolator:·gc.churn.G1_Survivor_Space.norm                            thrpt    5       26.764 ±    230.448    B/op
[info] NestedConcatenationBenchmark.fInterpolator:·gc.count                                                   thrpt    5       16.000               counts
[info] NestedConcatenationBenchmark.fInterpolator:·gc.time                                                    thrpt    5       22.000                   ms
[info] NestedConcatenationBenchmark.fastInterpolator                                                          thrpt    5   263369.404 ±  21998.037   ops/s
[info] NestedConcatenationBenchmark.fastInterpolator:·gc.alloc.rate                                           thrpt    5     1550.236 ±    128.642  MB/sec
[info] NestedConcatenationBenchmark.fastInterpolator:·gc.alloc.rate.norm                                      thrpt    5     9264.002 ±      0.001    B/op
[info] NestedConcatenationBenchmark.fastInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'               thrpt    5        0.001 ±      0.005  MB/sec
[info] NestedConcatenationBenchmark.fastInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm          thrpt    5        0.006 ±      0.027    B/op
[info] NestedConcatenationBenchmark.fastInterpolator:·gc.churn.G1_Old_Gen                                     thrpt    5     1497.768 ±    717.944  MB/sec
[info] NestedConcatenationBenchmark.fastInterpolator:·gc.churn.G1_Old_Gen.norm                                thrpt    5     8958.383 ±   4525.810    B/op
[info] NestedConcatenationBenchmark.fastInterpolator:·gc.count                                                thrpt    5       22.000               counts
[info] NestedConcatenationBenchmark.fastInterpolator:·gc.time                                                 thrpt    5       19.000                   ms
[info] NestedConcatenationBenchmark.frawInterpolator                                                          thrpt    5   178562.329 ±  10590.782   ops/s
[info] NestedConcatenationBenchmark.frawInterpolator:·gc.alloc.rate                                           thrpt    5     1433.054 ±     84.855  MB/sec
[info] NestedConcatenationBenchmark.frawInterpolator:·gc.alloc.rate.norm                                      thrpt    5    12632.002 ±      0.001    B/op
[info] NestedConcatenationBenchmark.frawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'               thrpt    5        0.001 ±      0.003  MB/sec
[info] NestedConcatenationBenchmark.frawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm          thrpt    5        0.005 ±      0.024    B/op
[info] NestedConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Old_Gen                                     thrpt    5     1429.567 ±    585.769  MB/sec
[info] NestedConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Old_Gen.norm                                thrpt    5    12595.752 ±   4796.791    B/op
[info] NestedConcatenationBenchmark.frawInterpolator:·gc.count                                                thrpt    5       21.000               counts
[info] NestedConcatenationBenchmark.frawInterpolator:·gc.time                                                 thrpt    5       27.000                   ms
[info] NestedConcatenationBenchmark.fsInterpolator                                                            thrpt    5   190232.963 ±   7326.235   ops/s
[info] NestedConcatenationBenchmark.fsInterpolator:·gc.alloc.rate                                             thrpt    5     1526.636 ±     58.884  MB/sec
[info] NestedConcatenationBenchmark.fsInterpolator:·gc.alloc.rate.norm                                        thrpt    5    12632.002 ±      0.001    B/op
[info] NestedConcatenationBenchmark.fsInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                 thrpt    5        0.001 ±      0.005  MB/sec
[info] NestedConcatenationBenchmark.fsInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm            thrpt    5        0.011 ±      0.042    B/op
[info] NestedConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Old_Gen                                       thrpt    5     1497.553 ±    717.916  MB/sec
[info] NestedConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Old_Gen.norm                                  thrpt    5    12387.471 ±   5759.483    B/op
[info] NestedConcatenationBenchmark.fsInterpolator:·gc.count                                                  thrpt    5       22.000               counts
[info] NestedConcatenationBenchmark.fsInterpolator:·gc.time                                                   thrpt    5       18.000                   ms
[info] NestedConcatenationBenchmark.javaStringBuilder                                                         thrpt    5   400065.499 ±  15774.516   ops/s
[info] NestedConcatenationBenchmark.javaStringBuilder:·gc.alloc.rate                                          thrpt    5      959.734 ±     37.517  MB/sec
[info] NestedConcatenationBenchmark.javaStringBuilder:·gc.alloc.rate.norm                                     thrpt    5     3776.001 ±      0.001    B/op
[info] NestedConcatenationBenchmark.javaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'              thrpt    5        0.003 ±      0.017  MB/sec
[info] NestedConcatenationBenchmark.javaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm         thrpt    5        0.010 ±      0.067    B/op
[info] NestedConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Old_Gen                                    thrpt    5      952.227 ±    593.133  MB/sec
[info] NestedConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Old_Gen.norm                               thrpt    5     3748.161 ±   2371.013    B/op
[info] NestedConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Survivor_Space                             thrpt    5        0.400 ±      3.441  MB/sec
[info] NestedConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Survivor_Space.norm                        thrpt    5        1.564 ±     13.469    B/op
[info] NestedConcatenationBenchmark.javaStringBuilder:·gc.count                                               thrpt    5       14.000               counts
[info] NestedConcatenationBenchmark.javaStringBuilder:·gc.time                                                thrpt    5       28.000                   ms
[info] NestedConcatenationBenchmark.pInterpolator                                                             thrpt    5   213268.804 ±   7391.326   ops/s
[info] NestedConcatenationBenchmark.pInterpolator:·gc.alloc.rate                                              thrpt    5     1752.768 ±     60.805  MB/sec
[info] NestedConcatenationBenchmark.pInterpolator:·gc.alloc.rate.norm                                         thrpt    5    12936.002 ±      0.001    B/op
[info] NestedConcatenationBenchmark.pInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                  thrpt    5        0.001 ±      0.006  MB/sec
[info] NestedConcatenationBenchmark.pInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm             thrpt    5        0.010 ±      0.044    B/op
[info] NestedConcatenationBenchmark.pInterpolator:·gc.churn.G1_Old_Gen                                        thrpt    5     1769.923 ±    585.856  MB/sec
[info] NestedConcatenationBenchmark.pInterpolator:·gc.churn.G1_Old_Gen.norm                                   thrpt    5    13068.996 ±   4680.430    B/op
[info] NestedConcatenationBenchmark.pInterpolator:·gc.count                                                   thrpt    5       26.000               counts
[info] NestedConcatenationBenchmark.pInterpolator:·gc.time                                                    thrpt    5       23.000                   ms
[info] NestedConcatenationBenchmark.rawInterpolator                                                           thrpt    5   109552.794 ±   7507.159   ops/s
[info] NestedConcatenationBenchmark.rawInterpolator:·gc.alloc.rate                                            thrpt    5     2219.948 ±    151.415  MB/sec
[info] NestedConcatenationBenchmark.rawInterpolator:·gc.alloc.rate.norm                                       thrpt    5    31896.004 ±      0.001    B/op
[info] NestedConcatenationBenchmark.rawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                thrpt    5        0.001 ±      0.006  MB/sec
[info] NestedConcatenationBenchmark.rawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm           thrpt    5        0.016 ±      0.079    B/op
[info] NestedConcatenationBenchmark.rawInterpolator:·gc.churn.G1_Old_Gen                                      thrpt    5     2246.025 ±    716.784  MB/sec
[info] NestedConcatenationBenchmark.rawInterpolator:·gc.churn.G1_Old_Gen.norm                                 thrpt    5    32274.492 ±  10298.549    B/op
[info] NestedConcatenationBenchmark.rawInterpolator:·gc.count                                                 thrpt    5       33.000               counts
[info] NestedConcatenationBenchmark.rawInterpolator:·gc.time                                                  thrpt    5       27.000                   ms
[info] NestedConcatenationBenchmark.sInterpolator                                                             thrpt    5   105715.112 ±   3384.556   ops/s
[info] NestedConcatenationBenchmark.sInterpolator:·gc.alloc.rate                                              thrpt    5     2189.545 ±     70.729  MB/sec
[info] NestedConcatenationBenchmark.sInterpolator:·gc.alloc.rate.norm                                         thrpt    5    32600.004 ±      0.001    B/op
[info] NestedConcatenationBenchmark.sInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                  thrpt    5        0.002 ±      0.004  MB/sec
[info] NestedConcatenationBenchmark.sInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm             thrpt    5        0.035 ±      0.054    B/op
[info] NestedConcatenationBenchmark.sInterpolator:·gc.churn.G1_Old_Gen                                        thrpt    5     2178.353 ±    718.642  MB/sec
[info] NestedConcatenationBenchmark.sInterpolator:·gc.churn.G1_Old_Gen.norm                                   thrpt    5    32433.250 ±  10634.921    B/op
[info] NestedConcatenationBenchmark.sInterpolator:·gc.count                                                   thrpt    5       32.000               counts
[info] NestedConcatenationBenchmark.sInterpolator:·gc.time                                                    thrpt    5       27.000                   ms
[info] NestedConcatenationBenchmark.scalaStringBuilder                                                        thrpt    5   455904.439 ±   2251.573   ops/s
[info] NestedConcatenationBenchmark.scalaStringBuilder:·gc.alloc.rate                                         thrpt    5     1098.430 ±      5.049  MB/sec
[info] NestedConcatenationBenchmark.scalaStringBuilder:·gc.alloc.rate.norm                                    thrpt    5     3792.001 ±      0.001    B/op
[info] NestedConcatenationBenchmark.scalaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'             thrpt    5        0.003 ±      0.016  MB/sec
[info] NestedConcatenationBenchmark.scalaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm        thrpt    5        0.009 ±      0.056    B/op
[info] NestedConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Old_Gen                                   thrpt    5     1088.867 ±    586.776  MB/sec
[info] NestedConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Old_Gen.norm                              thrpt    5     3758.911 ±   2022.434    B/op
[info] NestedConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Survivor_Space                            thrpt    5        0.400 ±      3.442  MB/sec
[info] NestedConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Survivor_Space.norm                       thrpt    5        1.380 ±     11.881    B/op
[info] NestedConcatenationBenchmark.scalaStringBuilder:·gc.count                                              thrpt    5       16.000               counts
[info] NestedConcatenationBenchmark.scalaStringBuilder:·gc.time                                               thrpt    5       16.000                   ms
[info] NestedConcatenationBenchmark.scalaStringConcatenation                                                  thrpt    5   151471.102 ±   4439.473   ops/s
[info] NestedConcatenationBenchmark.scalaStringConcatenation:·gc.alloc.rate                                   thrpt    5     2231.919 ±     65.567  MB/sec
[info] NestedConcatenationBenchmark.scalaStringConcatenation:·gc.alloc.rate.norm                              thrpt    5    23192.003 ±      0.001    B/op
[info] NestedConcatenationBenchmark.scalaStringConcatenation:·gc.churn.CodeHeap_'non-profiled_nmethods'       thrpt    5        0.002 ±      0.007  MB/sec
[info] NestedConcatenationBenchmark.scalaStringConcatenation:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm  thrpt    5        0.017 ±      0.071    B/op
[info] NestedConcatenationBenchmark.scalaStringConcatenation:·gc.churn.G1_Old_Gen                             thrpt    5     2246.465 ±    717.344  MB/sec
[info] NestedConcatenationBenchmark.scalaStringConcatenation:·gc.churn.G1_Old_Gen.norm                        thrpt    5    23353.754 ±   8000.483    B/op
[info] NestedConcatenationBenchmark.scalaStringConcatenation:·gc.count                                        thrpt    5       33.000               counts
[info] NestedConcatenationBenchmark.scalaStringConcatenation:·gc.time                                         thrpt    5       28.000                   ms
[info] SimpleConcatenationBenchmark.fInterpolator                                                             thrpt    5   520703.372 ±  33701.411   ops/s
[info] SimpleConcatenationBenchmark.fInterpolator:·gc.alloc.rate                                              thrpt    5      815.133 ±     52.839  MB/sec
[info] SimpleConcatenationBenchmark.fInterpolator:·gc.alloc.rate.norm                                         thrpt    5     2464.001 ±      0.001    B/op
[info] SimpleConcatenationBenchmark.fInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                  thrpt    5        0.018 ±      0.154  MB/sec
[info] SimpleConcatenationBenchmark.fInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm             thrpt    5        0.054 ±      0.463    B/op
[info] SimpleConcatenationBenchmark.fInterpolator:·gc.churn.G1_Old_Gen                                        thrpt    5      882.541 ±    716.286  MB/sec
[info] SimpleConcatenationBenchmark.fInterpolator:·gc.churn.G1_Old_Gen.norm                                   thrpt    5     2668.501 ±   2175.325    B/op
[info] SimpleConcatenationBenchmark.fInterpolator:·gc.churn.G1_Survivor_Space                                 thrpt    5        0.400 ±      3.441  MB/sec
[info] SimpleConcatenationBenchmark.fInterpolator:·gc.churn.G1_Survivor_Space.norm                            thrpt    5        1.197 ±     10.304    B/op
[info] SimpleConcatenationBenchmark.fInterpolator:·gc.count                                                   thrpt    5       13.000               counts
[info] SimpleConcatenationBenchmark.fInterpolator:·gc.time                                                    thrpt    5       23.000                   ms
[info] SimpleConcatenationBenchmark.fastInterpolator                                                          thrpt    5  4358508.137 ± 174749.280   ops/s
[info] SimpleConcatenationBenchmark.fastInterpolator:·gc.alloc.rate                                           thrpt    5     1927.122 ±     77.322  MB/sec
[info] SimpleConcatenationBenchmark.fastInterpolator:·gc.alloc.rate.norm                                      thrpt    5      696.000 ±      0.001    B/op
[info] SimpleConcatenationBenchmark.fastInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'               thrpt    5        0.001 ±      0.004  MB/sec
[info] SimpleConcatenationBenchmark.fastInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm          thrpt    5       ≈ 10⁻³                 B/op
[info] SimpleConcatenationBenchmark.fastInterpolator:·gc.churn.G1_Old_Gen                                     thrpt    5     1905.923 ±    717.972  MB/sec
[info] SimpleConcatenationBenchmark.fastInterpolator:·gc.churn.G1_Old_Gen.norm                                thrpt    5      688.727 ±    275.655    B/op
[info] SimpleConcatenationBenchmark.fastInterpolator:·gc.count                                                thrpt    5       28.000               counts
[info] SimpleConcatenationBenchmark.fastInterpolator:·gc.time                                                 thrpt    5       37.000                   ms
[info] SimpleConcatenationBenchmark.frawInterpolator                                                          thrpt    5  6217865.619 ± 242488.677   ops/s
[info] SimpleConcatenationBenchmark.frawInterpolator:·gc.alloc.rate                                           thrpt    5      600.479 ±     23.283  MB/sec
[info] SimpleConcatenationBenchmark.frawInterpolator:·gc.alloc.rate.norm                                      thrpt    5      152.000 ±      0.001    B/op
[info] SimpleConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Old_Gen                                     thrpt    5      609.476 ±    579.225  MB/sec
[info] SimpleConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Old_Gen.norm                                thrpt    5      154.258 ±    146.359    B/op
[info] SimpleConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Survivor_Space                              thrpt    5        0.400 ±      3.441  MB/sec
[info] SimpleConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Survivor_Space.norm                         thrpt    5        0.102 ±      0.874    B/op
[info] SimpleConcatenationBenchmark.frawInterpolator:·gc.count                                                thrpt    5        9.000               counts
[info] SimpleConcatenationBenchmark.frawInterpolator:·gc.time                                                 thrpt    5       24.000                   ms
[info] SimpleConcatenationBenchmark.fsInterpolator                                                            thrpt    5  6131805.192 ± 563671.810   ops/s
[info] SimpleConcatenationBenchmark.fsInterpolator:·gc.alloc.rate                                             thrpt    5      592.159 ±     54.307  MB/sec
[info] SimpleConcatenationBenchmark.fsInterpolator:·gc.alloc.rate.norm                                        thrpt    5      152.000 ±      0.001    B/op
[info] SimpleConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Old_Gen                                       thrpt    5      609.470 ±    583.655  MB/sec
[info] SimpleConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Old_Gen.norm                                  thrpt    5      156.214 ±    146.740    B/op
[info] SimpleConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Survivor_Space                                thrpt    5        0.400 ±      3.441  MB/sec
[info] SimpleConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Survivor_Space.norm                           thrpt    5        0.104 ±      0.894    B/op
[info] SimpleConcatenationBenchmark.fsInterpolator:·gc.count                                                  thrpt    5        9.000               counts
[info] SimpleConcatenationBenchmark.fsInterpolator:·gc.time                                                   thrpt    5       22.000                   ms
[info] SimpleConcatenationBenchmark.javaStringBuilder                                                         thrpt    5  5115659.556 ± 355883.893   ops/s
[info] SimpleConcatenationBenchmark.javaStringBuilder:·gc.alloc.rate                                          thrpt    5     1664.113 ±    115.106  MB/sec
[info] SimpleConcatenationBenchmark.javaStringBuilder:·gc.alloc.rate.norm                                     thrpt    5      512.000 ±      0.001    B/op
[info] SimpleConcatenationBenchmark.javaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'              thrpt    5       ≈ 10⁻³               MB/sec
[info] SimpleConcatenationBenchmark.javaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm         thrpt    5       ≈ 10⁻⁴                 B/op
[info] SimpleConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Old_Gen                                    thrpt    5     1701.923 ±      1.188  MB/sec
[info] SimpleConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Old_Gen.norm                               thrpt    5      523.768 ±     36.229    B/op
[info] SimpleConcatenationBenchmark.javaStringBuilder:·gc.count                                               thrpt    5       25.000               counts
[info] SimpleConcatenationBenchmark.javaStringBuilder:·gc.time                                                thrpt    5       20.000                   ms
[info] SimpleConcatenationBenchmark.pInterpolator                                                             thrpt    5  6148136.754 ± 374173.983   ops/s
[info] SimpleConcatenationBenchmark.pInterpolator:·gc.alloc.rate                                              thrpt    5     1281.367 ±     78.822  MB/sec
[info] SimpleConcatenationBenchmark.pInterpolator:·gc.alloc.rate.norm                                         thrpt    5      328.000 ±      0.001    B/op
[info] SimpleConcatenationBenchmark.pInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                  thrpt    5        0.002 ±      0.006  MB/sec
[info] SimpleConcatenationBenchmark.pInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm             thrpt    5       ≈ 10⁻³                 B/op
[info] SimpleConcatenationBenchmark.pInterpolator:·gc.churn.G1_Old_Gen                                        thrpt    5     1293.563 ±    586.641  MB/sec
[info] SimpleConcatenationBenchmark.pInterpolator:·gc.churn.G1_Old_Gen.norm                                   thrpt    5      330.909 ±    141.654    B/op
[info] SimpleConcatenationBenchmark.pInterpolator:·gc.count                                                   thrpt    5       19.000               counts
[info] SimpleConcatenationBenchmark.pInterpolator:·gc.time                                                    thrpt    5       18.000                   ms
[info] SimpleConcatenationBenchmark.rawInterpolator                                                           thrpt    5  3163501.511 ± 116229.618   ops/s
[info] SimpleConcatenationBenchmark.rawInterpolator:·gc.alloc.rate                                            thrpt    5     2025.895 ±     74.471  MB/sec
[info] SimpleConcatenationBenchmark.rawInterpolator:·gc.alloc.rate.norm                                       thrpt    5     1008.000 ±      0.001    B/op
[info] SimpleConcatenationBenchmark.rawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                thrpt    5        0.001 ±      0.004  MB/sec
[info] SimpleConcatenationBenchmark.rawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm           thrpt    5       ≈ 10⁻³                 B/op
[info] SimpleConcatenationBenchmark.rawInterpolator:·gc.churn.G1_Old_Gen                                      thrpt    5     2042.151 ±      0.736  MB/sec
[info] SimpleConcatenationBenchmark.rawInterpolator:·gc.churn.G1_Old_Gen.norm                                 thrpt    5     1016.161 ±     36.947    B/op
[info] SimpleConcatenationBenchmark.rawInterpolator:·gc.count                                                 thrpt    5       30.000               counts
[info] SimpleConcatenationBenchmark.rawInterpolator:·gc.time                                                  thrpt    5       23.000                   ms
[info] SimpleConcatenationBenchmark.sInterpolator                                                             thrpt    5  2929172.961 ± 120199.732   ops/s
[info] SimpleConcatenationBenchmark.sInterpolator:·gc.alloc.rate                                              thrpt    5     1876.033 ±     77.785  MB/sec
[info] SimpleConcatenationBenchmark.sInterpolator:·gc.alloc.rate.norm                                         thrpt    5     1008.000 ±      0.001    B/op
[info] SimpleConcatenationBenchmark.sInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                  thrpt    5        0.001 ±      0.004  MB/sec
[info] SimpleConcatenationBenchmark.sInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm             thrpt    5        0.001 ±      0.002    B/op
[info] SimpleConcatenationBenchmark.sInterpolator:·gc.churn.G1_Old_Gen                                        thrpt    5     1838.151 ±    718.065  MB/sec
[info] SimpleConcatenationBenchmark.sInterpolator:·gc.churn.G1_Old_Gen.norm                                   thrpt    5      988.282 ±    413.713    B/op
[info] SimpleConcatenationBenchmark.sInterpolator:·gc.count                                                   thrpt    5       27.000               counts
[info] SimpleConcatenationBenchmark.sInterpolator:·gc.time                                                    thrpt    5       21.000                   ms
[info] SimpleConcatenationBenchmark.scalaStringBuilder                                                        thrpt    5  4973456.614 ± 102233.696   ops/s
[info] SimpleConcatenationBenchmark.scalaStringBuilder:·gc.alloc.rate                                         thrpt    5     1617.800 ±     33.812  MB/sec
[info] SimpleConcatenationBenchmark.scalaStringBuilder:·gc.alloc.rate.norm                                    thrpt    5      512.000 ±      0.001    B/op
[info] SimpleConcatenationBenchmark.scalaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'             thrpt    5        0.001 ±      0.004  MB/sec
[info] SimpleConcatenationBenchmark.scalaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm        thrpt    5       ≈ 10⁻³                 B/op
[info] SimpleConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Old_Gen                                   thrpt    5     1565.693 ±    718.113  MB/sec
[info] SimpleConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Old_Gen.norm                              thrpt    5      495.424 ±    223.771    B/op
[info] SimpleConcatenationBenchmark.scalaStringBuilder:·gc.count                                              thrpt    5       23.000               counts
[info] SimpleConcatenationBenchmark.scalaStringBuilder:·gc.time                                               thrpt    5       18.000                   ms
[info] SimpleConcatenationBenchmark.scalaStringConcatenation                                                  thrpt    5  4062902.541 ± 201408.981   ops/s
[info] SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.alloc.rate                                   thrpt    5     1755.130 ±     87.204  MB/sec
[info] SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.alloc.rate.norm                              thrpt    5      680.000 ±      0.001    B/op
[info] SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.churn.CodeHeap_'non-profiled_nmethods'       thrpt    5        0.002 ±      0.004  MB/sec
[info] SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm  thrpt    5        0.001 ±      0.002    B/op
[info] SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.churn.G1_Old_Gen                             thrpt    5     1701.733 ±      0.320  MB/sec
[info] SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.churn.G1_Old_Gen.norm                        thrpt    5      659.400 ±     32.940    B/op
[info] SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.count                                        thrpt    5       25.000               counts
[info] SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.time                                         thrpt    5       19.000                   ms
[info] Benchmark result is saved to jdk-10_scala-2.11.12.json
[success] Total time: 328 s, completed Mar 28, 2018 7:11:13 PM
