[info] Loading settings from idea.sbt,build.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/project
[info] Loading settings from release.sbt,build.sbt,version.sbt ...
[info] Set current project to fast-string-interpolator (in build file:/home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/)
[info] Setting Scala version to 2.12.5 on 4 projects.
[info] Reapplying settings...
[info] Set current project to fast-string-interpolator (in build file:/home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/)
[success] Total time: 0 s, completed Mar 28, 2018 6:53:26 PM
[info] Updating macros...
[info] Done updating.
[info] Updating benchmark-core...
[info] Done updating.
[info] Updating benchmark...
[info] Done updating.
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/macros/target/scala-2.12/classes ...
[info] Done compiling.
[info] Compiling 2 Scala sources to /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark-core/target/scala-2.12/classes ...
[info] Packaging /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/macros/target/scala-2.12/macros_2.12-0.1.1-SNAPSHOT.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark-core/target/scala-2.12/benchmark-core_2.12-0.1.1-SNAPSHOT.jar ...
[info] Done packaging.
[info] Compiling 2 Scala sources to /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.12/benchmark_2.12-0.1.1-SNAPSHOT.jar ...
[info] Done packaging.
Processing 8 classes from /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.12/resource_managed/jmh
[info] Compiling 2 Scala sources to /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.12/test-classes ...
[info] Compiling 28 Java sources to /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.12/benchmark_2.12-0.1.1-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/Sizmek/fast-string-interpolator/benchmark/target/scala-2.12/benchmark_2.12-0.1.1-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -jvm /usr/lib/jvm/java-9-oracle/bin/java -prof gc -rf json -rff jdk-9_scala-2.12.5.json .*Benchmark.*
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fInterpolator
[info] # Run progress: 0.00% complete, ETA 00:03:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8012.188 ops/s
[info] # Warmup Iteration   2: 21291.198 ops/s
[info] # Warmup Iteration   3: 21888.145 ops/s
[info] # Warmup Iteration   4: 21742.302 ops/s
[info] # Warmup Iteration   5: 21617.090 ops/s
[info] Iteration   1: 21506.602 ops/s
[info]                  ·gc.alloc.rate:            980.276 MB/sec
[info]                  ·gc.alloc.rate.norm:       71747.181 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1015.004 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 74288.960 B/op
[info]                  ·gc.count:                 3.000 counts
[info]                  ·gc.time:                  9.000 ms
[info] Iteration   2: 21379.113 ops/s
[info]                  ·gc.alloc.rate:                                  974.336 MB/sec
[info]                  ·gc.alloc.rate.norm:                             71736.021 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.116 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 8.518 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1019.047 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       75027.886 B/op
[info]                  ·gc.churn.G1_Survivor_Space:                     1.998 MB/sec
[info]                  ·gc.churn.G1_Survivor_Space.norm:                147.114 B/op
[info]                  ·gc.count:                                       3.000 counts
[info]                  ·gc.time:                                        8.000 ms
[info] Iteration   3: 21890.773 ops/s
[info]                  ·gc.alloc.rate:                                  997.608 MB/sec
[info]                  ·gc.alloc.rate.norm:                             71736.019 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.007 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.490 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1020.986 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       73417.082 B/op
[info]                  ·gc.count:                                       3.000 counts
[info]                  ·gc.time:                                        2.000 ms
[info] Iteration   4: 22331.483 ops/s
[info]                  ·gc.alloc.rate:            1017.803 MB/sec
[info]                  ·gc.alloc.rate.norm:       71736.018 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1021.088 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 71967.542 B/op
[info]                  ·gc.count:                 3.000 counts
[info]                  ·gc.time:                  3.000 ms
[info] Iteration   5: 21537.593 ops/s
[info]                  ·gc.alloc.rate:            981.924 MB/sec
[info]                  ·gc.alloc.rate.norm:       71736.019 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1021.450 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 74623.602 B/op
[info]                  ·gc.count:                 3.000 counts
[info]                  ·gc.time:                  2.000 ms
[info] Result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fInterpolator":
[info]   21729.113 ±(99.9%) 1488.456 ops/s [Average]
[info]   (min, avg, max) = (21379.113, 21729.113, 22331.483), stdev = 386.547
[info]   CI (99.9%): [20240.657, 23217.568] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fInterpolator:·gc.alloc.rate":
[info]   990.390 ±(99.9%) 67.668 MB/sec [Average]
[info]   (min, avg, max) = (974.336, 990.390, 1017.803), stdev = 17.573
[info]   CI (99.9%): [922.721, 1058.058] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fInterpolator:·gc.alloc.rate.norm":
[info]   71738.251 ±(99.9%) 19.221 B/op [Average]
[info]   (min, avg, max) = (71736.018, 71738.251, 71747.181), stdev = 4.992
[info]   CI (99.9%): [71719.030, 71757.473] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.025 ±(99.9%) 0.197 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.116), stdev = 0.051
[info]   CI (99.9%): [≈ 0, 0.221] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   1.802 ±(99.9%) 14.481 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.802, 8.518), stdev = 3.761
[info]   CI (99.9%): [≈ 0, 16.283] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fInterpolator:·gc.churn.G1_Old_Gen":
[info]   1019.515 ±(99.9%) 10.359 MB/sec [Average]
[info]   (min, avg, max) = (1015.004, 1019.515, 1021.450), stdev = 2.690
[info]   CI (99.9%): [1009.156, 1029.874] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   73865.014 ±(99.9%) 4679.959 B/op [Average]
[info]   (min, avg, max) = (71967.542, 73865.014, 75027.886), stdev = 1215.370
[info]   CI (99.9%): [69185.055, 78544.973] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fInterpolator:·gc.churn.G1_Survivor_Space":
[info]   0.400 ±(99.9%) 3.441 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.998), stdev = 0.894
[info]   CI (99.9%): [≈ 0, 3.841] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fInterpolator:·gc.churn.G1_Survivor_Space.norm":
[info]   29.423 ±(99.9%) 253.338 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 29.423, 147.114), stdev = 65.791
[info]   CI (99.9%): [≈ 0, 282.761] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fInterpolator:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fInterpolator:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.800, 9.000), stdev = 3.421
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fastInterpolator
[info] # Run progress: 5.00% complete, ETA 00:04:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 185994.709 ops/s
[info] # Warmup Iteration   2: 273469.776 ops/s
[info] # Warmup Iteration   3: 276419.738 ops/s
[info] # Warmup Iteration   4: 267280.779 ops/s
[info] # Warmup Iteration   5: 273922.543 ops/s
[info] Iteration   1: 282762.225 ops/s
[info]                  ·gc.alloc.rate:                                  1941.576 MB/sec
[info]                  ·gc.alloc.rate.norm:                             10808.001 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.004 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.022 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.201 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       11368.145 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   2: 279631.804 ops/s
[info]                  ·gc.alloc.rate:                                  1920.724 MB/sec
[info]                  ·gc.alloc.rate.norm:                             10808.001 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.019 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.886 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       11495.414 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   3: 276469.227 ops/s
[info]                  ·gc.alloc.rate:                                  1898.250 MB/sec
[info]                  ·gc.alloc.rate.norm:                             10808.002 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.008 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.714 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       9688.988 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   4: 275762.320 ops/s
[info]                  ·gc.alloc.rate:                                  1893.408 MB/sec
[info]                  ·gc.alloc.rate.norm:                             10808.001 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.017 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.009 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       11656.251 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   5: 273877.436 ops/s
[info]                  ·gc.alloc.rate:                                  1880.482 MB/sec
[info]                  ·gc.alloc.rate.norm:                             10808.001 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.015 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.055 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       11736.634 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fastInterpolator":
[info]   277700.602 ±(99.9%) 13510.135 ops/s [Average]
[info]   (min, avg, max) = (273877.436, 277700.602, 282762.225), stdev = 3508.539
[info]   CI (99.9%): [264190.468, 291210.737] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fastInterpolator:·gc.alloc.rate":
[info]   1906.888 ±(99.9%) 93.299 MB/sec [Average]
[info]   (min, avg, max) = (1880.482, 1906.888, 1941.576), stdev = 24.229
[info]   CI (99.9%): [1813.589, 2000.187] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fastInterpolator:·gc.alloc.rate.norm":
[info]   10808.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10808.001, 10808.001, 10808.002), stdev = 0.001
[info]   CI (99.9%): [10808.001, 10808.002] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fastInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.003 ±(99.9%) 0.004 MB/sec [Average]
[info]   (min, avg, max) = (0.001, 0.003, 0.004), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.006] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fastInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.016 ±(99.9%) 0.019 B/op [Average]
[info]   (min, avg, max) = (0.008, 0.016, 0.022), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.036] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fastInterpolator:·gc.churn.G1_Old_Gen":
[info]   1974.173 ±(99.9%) 586.491 MB/sec [Average]
[info]   (min, avg, max) = (1701.714, 1974.173, 2042.886), stdev = 152.310
[info]   CI (99.9%): [1387.682, 2560.664] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fastInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   11189.086 ±(99.9%) 3275.451 B/op [Average]
[info]   (min, avg, max) = (9688.988, 11189.086, 11736.634), stdev = 850.624
[info]   CI (99.9%): [7913.635, 14464.537] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fastInterpolator:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fastInterpolator:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.frawInterpolator
[info] # Run progress: 10.00% complete, ETA 00:04:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 92522.950 ops/s
[info] # Warmup Iteration   2: 147559.416 ops/s
[info] # Warmup Iteration   3: 146995.212 ops/s
[info] # Warmup Iteration   4: 144004.258 ops/s
[info] # Warmup Iteration   5: 144973.100 ops/s
[info] Iteration   1: 144375.013 ops/s
[info]                  ·gc.alloc.rate:                                  1208.619 MB/sec
[info]                  ·gc.alloc.rate.norm:                             13176.003 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.021 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.227 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1361.514 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       14842.827 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   2: 145250.898 ops/s
[info]                  ·gc.alloc.rate:            1215.878 MB/sec
[info]                  ·gc.alloc.rate.norm:       13176.003 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1021.054 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 11064.766 B/op
[info]                  ·gc.count:                 3.000 counts
[info]                  ·gc.time:                  2.000 ms
[info] Iteration   3: 146414.876 ops/s
[info]                  ·gc.alloc.rate:                                  1225.480 MB/sec
[info]                  ·gc.alloc.rate.norm:                             13176.003 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.014 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1361.296 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       14636.255 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   4: 151759.193 ops/s
[info]                  ·gc.alloc.rate:                                  1270.281 MB/sec
[info]                  ·gc.alloc.rate.norm:                             13176.003 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.002 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.024 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1361.363 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       14120.747 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Iteration   5: 151126.096 ops/s
[info]                  ·gc.alloc.rate:                                  1265.052 MB/sec
[info]                  ·gc.alloc.rate.norm:                             13176.003 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.014 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1361.463 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       14180.165 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.frawInterpolator":
[info]   147785.215 ±(99.9%) 13183.051 ops/s [Average]
[info]   (min, avg, max) = (144375.013, 147785.215, 151759.193), stdev = 3423.596
[info]   CI (99.9%): [134602.164, 160968.266] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.frawInterpolator:·gc.alloc.rate":
[info]   1237.062 ±(99.9%) 110.247 MB/sec [Average]
[info]   (min, avg, max) = (1208.619, 1237.062, 1270.281), stdev = 28.631
[info]   CI (99.9%): [1126.815, 1347.309] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.frawInterpolator:·gc.alloc.rate.norm":
[info]   13176.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (13176.003, 13176.003, 13176.003), stdev = 0.001
[info]   CI (99.9%): [13176.002, 13176.003] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.frawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.005 ±(99.9%) 0.034 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.039] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.frawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.056 ±(99.9%) 0.371 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.056, 0.227), stdev = 0.096
[info]   CI (99.9%): [≈ 0, 0.426] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Old_Gen":
[info]   1293.338 ±(99.9%) 586.112 MB/sec [Average]
[info]   (min, avg, max) = (1021.054, 1293.338, 1361.514), stdev = 152.211
[info]   CI (99.9%): [707.226, 1879.450] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   13768.952 ±(99.9%) 5937.645 B/op [Average]
[info]   (min, avg, max) = (11064.766, 13768.952, 14842.827), stdev = 1541.988
[info]   CI (99.9%): [7831.307, 19706.597] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.frawInterpolator:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.frawInterpolator:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.400, 4.000), stdev = 0.894
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fsInterpolator
[info] # Run progress: 15.00% complete, ETA 00:04:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 96826.914 ops/s
[info] # Warmup Iteration   2: 145766.127 ops/s
[info] # Warmup Iteration   3: 149805.601 ops/s
[info] # Warmup Iteration   4: 154218.850 ops/s
[info] # Warmup Iteration   5: 153914.046 ops/s
[info] Iteration   1: 155874.532 ops/s
[info]                  ·gc.alloc.rate:                                  1304.790 MB/sec
[info]                  ·gc.alloc.rate.norm:                             13176.003 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.018 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.178 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1361.410 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       13747.759 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Iteration   2: 153516.265 ops/s
[info]                  ·gc.alloc.rate:            1285.174 MB/sec
[info]                  ·gc.alloc.rate.norm:       13176.003 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1361.563 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 13959.159 B/op
[info]                  ·gc.count:                 4.000 counts
[info]                  ·gc.time:                  3.000 ms
[info] Iteration   3: 154519.482 ops/s
[info]                  ·gc.alloc.rate:            1293.446 MB/sec
[info]                  ·gc.alloc.rate.norm:       13176.003 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1021.061 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 10401.288 B/op
[info]                  ·gc.count:                 3.000 counts
[info]                  ·gc.time:                  3.000 ms
[info] Iteration   4: 148937.454 ops/s
[info]                  ·gc.alloc.rate:                                  1246.831 MB/sec
[info]                  ·gc.alloc.rate.norm:                             13176.003 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.012 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1361.546 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       14388.258 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Iteration   5: 151890.332 ops/s
[info]                  ·gc.alloc.rate:                                  1271.463 MB/sec
[info]                  ·gc.alloc.rate.norm:                             13176.003 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.027 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1361.436 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       14108.385 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fsInterpolator":
[info]   152947.613 ±(99.9%) 10289.258 ops/s [Average]
[info]   (min, avg, max) = (148937.454, 152947.613, 155874.532), stdev = 2672.088
[info]   CI (99.9%): [142658.355, 163236.871] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fsInterpolator:·gc.alloc.rate":
[info]   1280.341 ±(99.9%) 85.986 MB/sec [Average]
[info]   (min, avg, max) = (1246.831, 1280.341, 1304.790), stdev = 22.330
[info]   CI (99.9%): [1194.355, 1366.327] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fsInterpolator:·gc.alloc.rate.norm":
[info]   13176.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (13176.003, 13176.003, 13176.003), stdev = 0.001
[info]   CI (99.9%): [13176.002, 13176.003] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fsInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.004 ±(99.9%) 0.029 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.018), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.033] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fsInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.043 ±(99.9%) 0.293 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.043, 0.178), stdev = 0.076
[info]   CI (99.9%): [≈ 0, 0.337] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Old_Gen":
[info]   1293.403 ±(99.9%) 586.237 MB/sec [Average]
[info]   (min, avg, max) = (1021.061, 1293.403, 1361.563), stdev = 152.244
[info]   CI (99.9%): [707.166, 1879.640] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   13320.970 ±(99.9%) 6348.632 B/op [Average]
[info]   (min, avg, max) = (10401.288, 13320.970, 14388.258), stdev = 1648.720
[info]   CI (99.9%): [6972.338, 19669.602] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fsInterpolator:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.fsInterpolator:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.javaStringBuilder
[info] # Run progress: 20.00% complete, ETA 00:04:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 409032.670 ops/s
[info] # Warmup Iteration   2: 541505.559 ops/s
[info] # Warmup Iteration   3: 542854.969 ops/s
[info] # Warmup Iteration   4: 548395.333 ops/s
[info] # Warmup Iteration   5: 545700.487 ops/s
[info] Iteration   1: 549765.774 ops/s
[info]                  ·gc.alloc.rate:            1486.406 MB/sec
[info]                  ·gc.alloc.rate.norm:       4256.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1701.689 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 4872.414 B/op
[info]                  ·gc.count:                 5.000 counts
[info]                  ·gc.time:                  4.000 ms
[info] Iteration   2: 538155.705 ops/s
[info]                  ·gc.alloc.rate:            1455.144 MB/sec
[info]                  ·gc.alloc.rate.norm:       4256.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1361.432 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 3981.914 B/op
[info]                  ·gc.count:                 4.000 counts
[info]                  ·gc.time:                  3.000 ms
[info] Iteration   3: 534143.347 ops/s
[info]                  ·gc.alloc.rate:                                  1444.048 MB/sec
[info]                  ·gc.alloc.rate.norm:                             4256.001 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.003 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1361.256 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       4011.990 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   4: 534830.501 ops/s
[info]                  ·gc.alloc.rate:            1446.267 MB/sec
[info]                  ·gc.alloc.rate.norm:       4256.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1361.546 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 4006.688 B/op
[info]                  ·gc.count:                 4.000 counts
[info]                  ·gc.time:                  3.000 ms
[info] Iteration   5: 538141.862 ops/s
[info]                  ·gc.alloc.rate:                                  1454.860 MB/sec
[info]                  ·gc.alloc.rate.norm:                             4256.001 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.004 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.582 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       4977.754 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.javaStringBuilder":
[info]   539007.438 ±(99.9%) 24225.618 ops/s [Average]
[info]   (min, avg, max) = (534143.347, 539007.438, 549765.774), stdev = 6291.316
[info]   CI (99.9%): [514781.820, 563233.056] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.javaStringBuilder:·gc.alloc.rate":
[info]   1457.345 ±(99.9%) 65.436 MB/sec [Average]
[info]   (min, avg, max) = (1444.048, 1457.345, 1486.406), stdev = 16.993
[info]   CI (99.9%): [1391.910, 1522.781] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.javaStringBuilder:·gc.alloc.rate.norm":
[info]   4256.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4256.001, 4256.001, 4256.001), stdev = 0.001
[info]   CI (99.9%): [4256.001, 4256.001] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.javaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   ≈ 10⁻³ MB/sec
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.javaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.001 ±(99.9%) 0.007 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.004), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.008] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Old_Gen":
[info]   1497.501 ±(99.9%) 717.561 MB/sec [Average]
[info]   (min, avg, max) = (1361.256, 1497.501, 1701.689), stdev = 186.348
[info]   CI (99.9%): [779.940, 2215.062] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Old_Gen.norm":
[info]   4370.152 ±(99.9%) 1956.417 B/op [Average]
[info]   (min, avg, max) = (3981.914, 4370.152, 4977.754), stdev = 508.075
[info]   CI (99.9%): [2413.735, 6326.569] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.javaStringBuilder:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.javaStringBuilder:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 5.000), stdev = 0.837
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.pInterpolator
[info] # Run progress: 25.00% complete, ETA 00:03:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 141140.266 ops/s
[info] # Warmup Iteration   2: 203826.035 ops/s
[info] # Warmup Iteration   3: 210367.108 ops/s
[info] # Warmup Iteration   4: 209498.203 ops/s
[info] # Warmup Iteration   5: 213748.041 ops/s
[info] Iteration   1: 214144.770 ops/s
[info]                  ·gc.alloc.rate:            1793.104 MB/sec
[info]                  ·gc.alloc.rate.norm:       13176.002 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1702.290 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 12508.692 B/op
[info]                  ·gc.count:                 5.000 counts
[info]                  ·gc.time:                  4.000 ms
[info] Iteration   2: 214591.415 ops/s
[info]                  ·gc.alloc.rate:            1796.353 MB/sec
[info]                  ·gc.alloc.rate.norm:       13176.002 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1701.823 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 12482.640 B/op
[info]                  ·gc.count:                 5.000 counts
[info]                  ·gc.time:                  4.000 ms
[info] Iteration   3: 212246.023 ops/s
[info]                  ·gc.alloc.rate:                                  1777.211 MB/sec
[info]                  ·gc.alloc.rate.norm:                             13176.002 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.004 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.029 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.707 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       15144.353 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        7.000 ms
[info] Iteration   4: 210191.324 ops/s
[info]                  ·gc.alloc.rate:                                  1759.425 MB/sec
[info]                  ·gc.alloc.rate.norm:                             13176.002 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.010 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.822 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       12744.627 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   5: 213322.059 ops/s
[info]                  ·gc.alloc.rate:            1785.710 MB/sec
[info]                  ·gc.alloc.rate.norm:       13176.002 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1701.762 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 12556.590 B/op
[info]                  ·gc.count:                 5.000 counts
[info]                  ·gc.time:                  7.000 ms
[info] Result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.pInterpolator":
[info]   212899.118 ±(99.9%) 6766.920 ops/s [Average]
[info]   (min, avg, max) = (210191.324, 212899.118, 214591.415), stdev = 1757.348
[info]   CI (99.9%): [206132.199, 219666.038] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.pInterpolator:·gc.alloc.rate":
[info]   1782.360 ±(99.9%) 56.951 MB/sec [Average]
[info]   (min, avg, max) = (1759.425, 1782.360, 1796.353), stdev = 14.790
[info]   CI (99.9%): [1725.410, 1839.311] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.pInterpolator:·gc.alloc.rate.norm":
[info]   13176.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (13176.002, 13176.002, 13176.002), stdev = 0.001
[info]   CI (99.9%): [13176.002, 13176.002] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.pInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.001 ±(99.9%) 0.007 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.004), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.008] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.pInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.008 ±(99.9%) 0.049 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.029), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.057] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.pInterpolator:·gc.churn.G1_Old_Gen":
[info]   1770.081 ±(99.9%) 586.848 MB/sec [Average]
[info]   (min, avg, max) = (1701.762, 1770.081, 2042.707), stdev = 152.403
[info]   CI (99.9%): [1183.233, 2356.929] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.pInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   13087.380 ±(99.9%) 4445.344 B/op [Average]
[info]   (min, avg, max) = (12482.640, 13087.380, 15144.353), stdev = 1154.442
[info]   CI (99.9%): [8642.036, 17532.725] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.pInterpolator:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.pInterpolator:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 7.000), stdev = 1.643
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.rawInterpolator
[info] # Run progress: 30.00% complete, ETA 00:03:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 117577.861 ops/s
[info] # Warmup Iteration   2: 177958.757 ops/s
[info] # Warmup Iteration   3: 177296.742 ops/s
[info] # Warmup Iteration   4: 179240.308 ops/s
[info] # Warmup Iteration   5: 181768.191 ops/s
[info] Iteration   1: 185743.125 ops/s
[info]                  ·gc.alloc.rate:                                  2136.229 MB/sec
[info]                  ·gc.alloc.rate.norm:                             18104.002 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.002 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.021 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.011 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       17305.526 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   2: 184491.191 ops/s
[info]                  ·gc.alloc.rate:                                  2121.984 MB/sec
[info]                  ·gc.alloc.rate.norm:                             18104.002 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.026 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.123 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       17422.661 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   3: 183852.257 ops/s
[info]                  ·gc.alloc.rate:                                  2114.464 MB/sec
[info]                  ·gc.alloc.rate.norm:                             18104.002 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.002 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2382.400 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       20398.070 B/op
[info]                  ·gc.count:                                       7.000 counts
[info]                  ·gc.time:                                        7.000 ms
[info] Iteration   4: 182897.413 ops/s
[info]                  ·gc.alloc.rate:                                  2103.641 MB/sec
[info]                  ·gc.alloc.rate.norm:                             18104.002 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.011 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.167 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       17574.956 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   5: 184835.737 ops/s
[info]                  ·gc.alloc.rate:                                  2125.913 MB/sec
[info]                  ·gc.alloc.rate.norm:                             18104.002 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.011 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.087 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       17390.148 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.rawInterpolator":
[info]   184363.944 ±(99.9%) 4108.412 ops/s [Average]
[info]   (min, avg, max) = (182897.413, 184363.944, 185743.125), stdev = 1066.941
[info]   CI (99.9%): [180255.533, 188472.356] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.rawInterpolator:·gc.alloc.rate":
[info]   2120.446 ±(99.9%) 47.143 MB/sec [Average]
[info]   (min, avg, max) = (2103.641, 2120.446, 2136.229), stdev = 12.243
[info]   CI (99.9%): [2073.304, 2167.589] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.rawInterpolator:·gc.alloc.rate.norm":
[info]   18104.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (18104.002, 18104.002, 18104.002), stdev = 0.001
[info]   CI (99.9%): [18104.002, 18104.003] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.rawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.002 ±(99.9%) 0.004 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.002, 0.003), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.006] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.rawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.014 ±(99.9%) 0.037 B/op [Average]
[info]   (min, avg, max) = (0.002, 0.014, 0.026), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.051] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.rawInterpolator:·gc.churn.G1_Old_Gen":
[info]   2110.158 ±(99.9%) 586.023 MB/sec [Average]
[info]   (min, avg, max) = (2042.011, 2110.158, 2382.400), stdev = 152.188
[info]   CI (99.9%): [1524.135, 2696.180] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.rawInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   18018.272 ±(99.9%) 5136.414 B/op [Average]
[info]   (min, avg, max) = (17305.526, 18018.272, 20398.070), stdev = 1333.910
[info]   CI (99.9%): [12881.858, 23154.686] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.rawInterpolator:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.rawInterpolator:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 7.000), stdev = 0.894
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.sInterpolator
[info] # Run progress: 35.00% complete, ETA 00:03:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 103020.393 ops/s
[info] # Warmup Iteration   2: 172106.153 ops/s
[info] # Warmup Iteration   3: 170250.029 ops/s
[info] # Warmup Iteration   4: 173195.963 ops/s
[info] # Warmup Iteration   5: 174493.333 ops/s
[info] Iteration   1: 174979.787 ops/s
[info]                  ·gc.alloc.rate:                                  1890.601 MB/sec
[info]                  ·gc.alloc.rate.norm:                             17008.003 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.008 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.667 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       15308.335 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   2: 173657.378 ops/s
[info]                  ·gc.alloc.rate:                                  1876.419 MB/sec
[info]                  ·gc.alloc.rate.norm:                             17008.002 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.012 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.085 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       18509.609 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   3: 174632.335 ops/s
[info]                  ·gc.alloc.rate:                                  1887.259 MB/sec
[info]                  ·gc.alloc.rate.norm:                             17008.002 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.024 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.475 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       18406.813 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   4: 172795.297 ops/s
[info]                  ·gc.alloc.rate:                                  1867.625 MB/sec
[info]                  ·gc.alloc.rate.norm:                             17008.003 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.012 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1702.279 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       15502.235 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   5: 174676.704 ops/s
[info]                  ·gc.alloc.rate:            1887.365 MB/sec
[info]                  ·gc.alloc.rate.norm:       17008.002 B/op
[info]                  ·gc.churn.G1_Old_Gen:      2042.110 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 18402.493 B/op
[info]                  ·gc.count:                 6.000 counts
[info]                  ·gc.time:                  5.000 ms
[info] Result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.sInterpolator":
[info]   174148.300 ±(99.9%) 3485.041 ops/s [Average]
[info]   (min, avg, max) = (172795.297, 174148.300, 174979.787), stdev = 905.054
[info]   CI (99.9%): [170663.259, 177633.341] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.sInterpolator:·gc.alloc.rate":
[info]   1881.854 ±(99.9%) 36.939 MB/sec [Average]
[info]   (min, avg, max) = (1867.625, 1881.854, 1890.601), stdev = 9.593
[info]   CI (99.9%): [1844.915, 1918.793] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.sInterpolator:·gc.alloc.rate.norm":
[info]   17008.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (17008.002, 17008.002, 17008.003), stdev = 0.001
[info]   CI (99.9%): [17008.002, 17008.003] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.sInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.001 ±(99.9%) 0.004 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.003), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.005] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.sInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.011 ±(99.9%) 0.033 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.024), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.044] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.sInterpolator:·gc.churn.G1_Old_Gen":
[info]   1906.123 ±(99.9%) 717.618 MB/sec [Average]
[info]   (min, avg, max) = (1701.667, 1906.123, 2042.475), stdev = 186.363
[info]   CI (99.9%): [1188.505, 2623.741] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.sInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   17225.897 ±(99.9%) 6407.278 B/op [Average]
[info]   (min, avg, max) = (15308.335, 17225.897, 18509.609), stdev = 1663.950
[info]   CI (99.9%): [10818.619, 23633.175] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.sInterpolator:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.sInterpolator:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringBuilder
[info] # Run progress: 40.00% complete, ETA 00:03:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 351703.266 ops/s
[info] # Warmup Iteration   2: 487174.047 ops/s
[info] # Warmup Iteration   3: 488935.234 ops/s
[info] # Warmup Iteration   4: 477406.830 ops/s
[info] # Warmup Iteration   5: 483286.351 ops/s
[info] Iteration   1: 494734.043 ops/s
[info]                  ·gc.alloc.rate:                                  1342.991 MB/sec
[info]                  ·gc.alloc.rate.norm:                             4272.001 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.021 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.067 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1361.733 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       4331.619 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   2: 495729.900 ops/s
[info]                  ·gc.alloc.rate:            1346.021 MB/sec
[info]                  ·gc.alloc.rate.norm:       4272.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1362.031 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 4322.813 B/op
[info]                  ·gc.count:                 4.000 counts
[info]                  ·gc.time:                  3.000 ms
[info] Iteration   3: 500798.236 ops/s
[info]                  ·gc.alloc.rate:                                  1359.248 MB/sec
[info]                  ·gc.alloc.rate.norm:                             4272.001 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.003 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1361.422 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       4278.834 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Iteration   4: 495001.172 ops/s
[info]                  ·gc.alloc.rate:            1343.341 MB/sec
[info]                  ·gc.alloc.rate.norm:       4272.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1361.343 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 4329.248 B/op
[info]                  ·gc.count:                 4.000 counts
[info]                  ·gc.time:                  4.000 ms
[info] Iteration   5: 495013.512 ops/s
[info]                  ·gc.alloc.rate:                                  1343.461 MB/sec
[info]                  ·gc.alloc.rate.norm:                             4272.001 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.004 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1361.439 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       4329.169 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringBuilder":
[info]   496255.373 ±(99.9%) 9881.875 ops/s [Average]
[info]   (min, avg, max) = (494734.043, 496255.373, 500798.236), stdev = 2566.292
[info]   CI (99.9%): [486373.498, 506137.247] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringBuilder:·gc.alloc.rate":
[info]   1347.012 ±(99.9%) 26.745 MB/sec [Average]
[info]   (min, avg, max) = (1342.991, 1347.012, 1359.248), stdev = 6.946
[info]   CI (99.9%): [1320.267, 1373.757] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringBuilder:·gc.alloc.rate.norm":
[info]   4272.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4272.001, 4272.001, 4272.001), stdev = 0.001
[info]   CI (99.9%): [4272.001, 4272.001] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.005 ±(99.9%) 0.035 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.015 ±(99.9%) 0.112 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.015, 0.067), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.127] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Old_Gen":
[info]   1361.594 ±(99.9%) 1.100 MB/sec [Average]
[info]   (min, avg, max) = (1361.343, 1361.594, 1362.031), stdev = 0.286
[info]   CI (99.9%): [1360.493, 1362.694] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Old_Gen.norm":
[info]   4318.336 ±(99.9%) 85.959 B/op [Average]
[info]   (min, avg, max) = (4278.834, 4318.336, 4331.619), stdev = 22.323
[info]   CI (99.9%): [4232.378, 4404.295] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringBuilder:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringBuilder:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringConcatenation
[info] # Run progress: 45.00% complete, ETA 00:02:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 92970.281 ops/s
[info] # Warmup Iteration   2: 138963.897 ops/s
[info] # Warmup Iteration   3: 139220.044 ops/s
[info] # Warmup Iteration   4: 138004.285 ops/s
[info] # Warmup Iteration   5: 141205.151 ops/s
[info] Iteration   1: 141083.051 ops/s
[info]                  ·gc.alloc.rate:                                  1917.282 MB/sec
[info]                  ·gc.alloc.rate.norm:                             21384.003 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.015 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1702.276 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       18985.980 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   2: 137693.637 ops/s
[info]                  ·gc.alloc.rate:                                  1870.703 MB/sec
[info]                  ·gc.alloc.rate.norm:                             21384.003 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.004 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.049 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.224 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       23344.666 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   3: 143162.813 ops/s
[info]                  ·gc.alloc.rate:                                  1944.961 MB/sec
[info]                  ·gc.alloc.rate.norm:                             21384.003 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.014 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.192 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       22453.008 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   4: 138398.993 ops/s
[info]                  ·gc.alloc.rate:            1880.153 MB/sec
[info]                  ·gc.alloc.rate.norm:       21384.003 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1701.629 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 19353.548 B/op
[info]                  ·gc.count:                 5.000 counts
[info]                  ·gc.time:                  5.000 ms
[info] Iteration   5: 139817.807 ops/s
[info]                  ·gc.alloc.rate:                                  1899.502 MB/sec
[info]                  ·gc.alloc.rate.norm:                             21384.003 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.015 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.139 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       22989.760 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringConcatenation":
[info]   140031.260 ±(99.9%) 8411.526 ops/s [Average]
[info]   (min, avg, max) = (137693.637, 140031.260, 143162.813), stdev = 2184.447
[info]   CI (99.9%): [131619.734, 148442.786] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringConcatenation:·gc.alloc.rate":
[info]   1902.520 ±(99.9%) 114.567 MB/sec [Average]
[info]   (min, avg, max) = (1870.703, 1902.520, 1944.961), stdev = 29.753
[info]   CI (99.9%): [1787.953, 2017.088] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringConcatenation:·gc.alloc.rate.norm":
[info]   21384.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (21384.003, 21384.003, 21384.003), stdev = 0.001
[info]   CI (99.9%): [21384.003, 21384.003] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringConcatenation:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.002 ±(99.9%) 0.006 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.004), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.008] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringConcatenation:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.019 ±(99.9%) 0.070 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.019, 0.049), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.088] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringConcatenation:·gc.churn.G1_Old_Gen":
[info]   1906.092 ±(99.9%) 717.580 MB/sec [Average]
[info]   (min, avg, max) = (1701.629, 1906.092, 2042.224), stdev = 186.353
[info]   CI (99.9%): [1188.512, 2623.672] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringConcatenation:·gc.churn.G1_Old_Gen.norm":
[info]   21425.393 ±(99.9%) 8038.103 B/op [Average]
[info]   (min, avg, max) = (18985.980, 21425.393, 23344.666), stdev = 2087.470
[info]   CI (99.9%): [13387.290, 29463.496] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringConcatenation:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.NestedConcatenationBenchmark.scalaStringConcatenation:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fInterpolator
[info] # Run progress: 50.00% complete, ETA 00:02:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 241382.152 ops/s
[info] # Warmup Iteration   2: 514516.036 ops/s
[info] # Warmup Iteration   3: 522969.726 ops/s
[info] # Warmup Iteration   4: 526941.283 ops/s
[info] # Warmup Iteration   5: 540248.882 ops/s
[info] Iteration   1: 547215.867 ops/s
[info]                  ·gc.alloc.rate:            834.349 MB/sec
[info]                  ·gc.alloc.rate.norm:       2400.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1015.082 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 2919.880 B/op
[info]                  ·gc.count:                 3.000 counts
[info]                  ·gc.time:                  9.000 ms
[info] Iteration   2: 538623.117 ops/s
[info]                  ·gc.alloc.rate:                   821.325 MB/sec
[info]                  ·gc.alloc.rate.norm:              2400.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:             676.109 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:        1975.661 B/op
[info]                  ·gc.churn.G1_Survivor_Space:      0.666 MB/sec
[info]                  ·gc.churn.G1_Survivor_Space.norm: 1.946 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 544903.114 ops/s
[info]                  ·gc.alloc.rate:                   830.890 MB/sec
[info]                  ·gc.alloc.rate.norm:              2400.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:             678.791 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:        1960.667 B/op
[info]                  ·gc.churn.G1_Survivor_Space:      1.998 MB/sec
[info]                  ·gc.churn.G1_Survivor_Space.norm: 5.772 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 552261.105 ops/s
[info]                  ·gc.alloc.rate:                                  842.077 MB/sec
[info]                  ·gc.alloc.rate.norm:                             2400.001 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.090 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.255 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1021.104 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       2910.243 B/op
[info]                  ·gc.count:                                       3.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Iteration   5: 538123.608 ops/s
[info]                  ·gc.alloc.rate:            820.586 MB/sec
[info]                  ·gc.alloc.rate.norm:       2400.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:      680.807 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 1991.183 B/op
[info]                  ·gc.count:                 2.000 counts
[info]                  ·gc.time:                  2.000 ms
[info] Result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fInterpolator":
[info]   544225.362 ±(99.9%) 22990.649 ops/s [Average]
[info]   (min, avg, max) = (538123.608, 544225.362, 552261.105), stdev = 5970.599
[info]   CI (99.9%): [521234.713, 567216.011] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fInterpolator:·gc.alloc.rate":
[info]   829.845 ±(99.9%) 34.939 MB/sec [Average]
[info]   (min, avg, max) = (820.586, 829.845, 842.077), stdev = 9.073
[info]   CI (99.9%): [794.907, 864.784] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fInterpolator:·gc.alloc.rate.norm":
[info]   2400.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2400.001, 2400.001, 2400.001), stdev = 0.001
[info]   CI (99.9%): [2400.001, 2400.001] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.018 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.018, 0.090), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.051 ±(99.9%) 0.440 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.051, 0.255), stdev = 0.114
[info]   CI (99.9%): [≈ 0, 0.491] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fInterpolator:·gc.churn.G1_Old_Gen":
[info]   814.378 ±(99.9%) 716.161 MB/sec [Average]
[info]   (min, avg, max) = (676.109, 814.378, 1021.104), stdev = 185.985
[info]   CI (99.9%): [98.218, 1530.539] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   2351.527 ±(99.9%) 1981.383 B/op [Average]
[info]   (min, avg, max) = (1960.667, 2351.527, 2919.880), stdev = 514.559
[info]   CI (99.9%): [370.144, 4332.910] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fInterpolator:·gc.churn.G1_Survivor_Space":
[info]   0.533 ±(99.9%) 3.344 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.533, 1.998), stdev = 0.869
[info]   CI (99.9%): [≈ 0, 3.877] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fInterpolator:·gc.churn.G1_Survivor_Space.norm":
[info]   1.544 ±(99.9%) 9.664 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.544, 5.772), stdev = 2.510
[info]   CI (99.9%): [≈ 0, 11.207] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fInterpolator:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fInterpolator:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.800, 9.000), stdev = 2.683
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fastInterpolator
[info] # Run progress: 55.00% complete, ETA 00:02:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2711278.154 ops/s
[info] # Warmup Iteration   2: 4265614.628 ops/s
[info] # Warmup Iteration   3: 4472679.460 ops/s
[info] # Warmup Iteration   4: 4498407.545 ops/s
[info] # Warmup Iteration   5: 4402755.302 ops/s
[info] Iteration   1: 4485894.629 ops/s
[info]                  ·gc.alloc.rate:            1984.257 MB/sec
[info]                  ·gc.alloc.rate.norm:       696.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1702.484 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 597.165 B/op
[info]                  ·gc.count:                 5.000 counts
[info]                  ·gc.time:                  3.000 ms
[info] Iteration   2: 4519151.066 ops/s
[info]                  ·gc.alloc.rate:                                  1998.300 MB/sec
[info]                  ·gc.alloc.rate.norm:                             696.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻³ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.255 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       711.309 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   3: 4494494.036 ops/s
[info]                  ·gc.alloc.rate:            1987.369 MB/sec
[info]                  ·gc.alloc.rate.norm:       696.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      2042.162 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 715.189 B/op
[info]                  ·gc.count:                 6.000 counts
[info]                  ·gc.time:                  5.000 ms
[info] Iteration   4: 4424486.353 ops/s
[info]                  ·gc.alloc.rate:            1956.288 MB/sec
[info]                  ·gc.alloc.rate.norm:       696.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      2042.062 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 726.517 B/op
[info]                  ·gc.count:                 6.000 counts
[info]                  ·gc.time:                  5.000 ms
[info] Iteration   5: 4534528.329 ops/s
[info]                  ·gc.alloc.rate:                                  2005.660 MB/sec
[info]                  ·gc.alloc.rate.norm:                             696.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.004 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.761 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       708.875 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fastInterpolator":
[info]   4491710.882 ±(99.9%) 162766.696 ops/s [Average]
[info]   (min, avg, max) = (4424486.353, 4491710.882, 4534528.329), stdev = 42269.994
[info]   CI (99.9%): [4328944.187, 4654477.578] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fastInterpolator:·gc.alloc.rate":
[info]   1986.375 ±(99.9%) 72.676 MB/sec [Average]
[info]   (min, avg, max) = (1956.288, 1986.375, 2005.660), stdev = 18.874
[info]   CI (99.9%): [1913.699, 2059.050] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fastInterpolator:·gc.alloc.rate.norm":
[info]   696.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (696.000, 696.000, 696.000), stdev = 0.001
[info]   CI (99.9%): [696.000, 696.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fastInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.001 ±(99.9%) 0.007 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.004), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.008] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fastInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   ≈ 10⁻³ B/op
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fastInterpolator:·gc.churn.G1_Old_Gen":
[info]   1974.345 ±(99.9%) 585.203 MB/sec [Average]
[info]   (min, avg, max) = (1702.484, 1974.345, 2042.761), stdev = 151.975
[info]   CI (99.9%): [1389.142, 2559.547] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fastInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   691.811 ±(99.9%) 205.390 B/op [Average]
[info]   (min, avg, max) = (597.165, 691.811, 726.517), stdev = 53.339
[info]   CI (99.9%): [486.421, 897.201] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fastInterpolator:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fastInterpolator:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.600, 5.000), stdev = 0.894
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.frawInterpolator
[info] # Run progress: 60.00% complete, ETA 00:02:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5052058.831 ops/s
[info] # Warmup Iteration   2: 6500568.989 ops/s
[info] # Warmup Iteration   3: 6591104.946 ops/s
[info] # Warmup Iteration   4: 6453036.183 ops/s
[info] # Warmup Iteration   5: 6633642.706 ops/s
[info] Iteration   1: 6764557.961 ops/s
[info]                  ·gc.alloc.rate:            653.212 MB/sec
[info]                  ·gc.alloc.rate.norm:       152.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      676.694 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 157.464 B/op
[info]                  ·gc.count:                 2.000 counts
[info]                  ·gc.time:                  6.000 ms
[info] Iteration   2: 6736270.778 ops/s
[info]                  ·gc.alloc.rate:            650.731 MB/sec
[info]                  ·gc.alloc.rate.norm:       152.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      676.945 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 158.123 B/op
[info]                  ·gc.count:                 2.000 counts
[info]                  ·gc.time:                  5.000 ms
[info] Iteration   3: 6727994.712 ops/s
[info]                  ·gc.alloc.rate:            649.720 MB/sec
[info]                  ·gc.alloc.rate.norm:       152.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      676.735 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 158.320 B/op
[info]                  ·gc.count:                 2.000 counts
[info]                  ·gc.time:                  6.000 ms
[info] Iteration   4: 6579793.691 ops/s
[info]                  ·gc.alloc.rate:                   635.608 MB/sec
[info]                  ·gc.alloc.rate.norm:              152.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:             676.928 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:        161.881 B/op
[info]                  ·gc.churn.G1_Survivor_Space:      1.999 MB/sec
[info]                  ·gc.churn.G1_Survivor_Space.norm: 0.478 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 6620072.180 ops/s
[info]                  ·gc.alloc.rate:                                  639.501 MB/sec
[info]                  ·gc.alloc.rate.norm:                             152.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.100 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.024 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            680.958 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       161.854 B/op
[info]                  ·gc.count:                                       2.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.frawInterpolator":
[info]   6685737.865 ±(99.9%) 310973.616 ops/s [Average]
[info]   (min, avg, max) = (6579793.691, 6685737.865, 6764557.961), stdev = 80758.861
[info]   CI (99.9%): [6374764.248, 6996711.481] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.frawInterpolator:·gc.alloc.rate":
[info]   645.754 ±(99.9%) 29.713 MB/sec [Average]
[info]   (min, avg, max) = (635.608, 645.754, 653.212), stdev = 7.716
[info]   CI (99.9%): [616.041, 675.468] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.frawInterpolator:·gc.alloc.rate.norm":
[info]   152.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (152.000, 152.000, 152.000), stdev = 0.001
[info]   CI (99.9%): [152.000, 152.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.frawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.020 ±(99.9%) 0.172 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.020, 0.100), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.frawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.005 ±(99.9%) 0.041 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.024), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.046] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Old_Gen":
[info]   677.652 ±(99.9%) 7.129 MB/sec [Average]
[info]   (min, avg, max) = (676.694, 677.652, 680.958), stdev = 1.852
[info]   CI (99.9%): [670.523, 684.782] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   159.529 ±(99.9%) 8.313 B/op [Average]
[info]   (min, avg, max) = (157.464, 159.529, 161.881), stdev = 2.159
[info]   CI (99.9%): [151.216, 167.841] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Survivor_Space":
[info]   0.400 ±(99.9%) 3.442 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.999), stdev = 0.894
[info]   CI (99.9%): [≈ 0, 3.842] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Survivor_Space.norm":
[info]   0.096 ±(99.9%) 0.823 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.096, 0.478), stdev = 0.214
[info]   CI (99.9%): [≈ 0, 0.919] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.frawInterpolator:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.frawInterpolator:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fsInterpolator
[info] # Run progress: 65.00% complete, ETA 00:01:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5150456.525 ops/s
[info] # Warmup Iteration   2: 6717985.895 ops/s
[info] # Warmup Iteration   3: 6462011.368 ops/s
[info] # Warmup Iteration   4: 6386900.622 ops/s
[info] # Warmup Iteration   5: 6708542.762 ops/s
[info] Iteration   1: 6723217.723 ops/s
[info]                  ·gc.alloc.rate:            649.196 MB/sec
[info]                  ·gc.alloc.rate.norm:       152.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      338.338 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 79.217 B/op
[info]                  ·gc.count:                 1.000 counts
[info]                  ·gc.time:                  3.000 ms
[info] Iteration   2: 6706215.684 ops/s
[info]                  ·gc.alloc.rate:                   647.665 MB/sec
[info]                  ·gc.alloc.rate.norm:              152.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:             676.125 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:        158.679 B/op
[info]                  ·gc.churn.G1_Survivor_Space:      0.666 MB/sec
[info]                  ·gc.churn.G1_Survivor_Space.norm: 0.156 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 6364034.027 ops/s
[info]                  ·gc.alloc.rate:            614.656 MB/sec
[info]                  ·gc.alloc.rate.norm:       152.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      676.821 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 167.373 B/op
[info]                  ·gc.count:                 2.000 counts
[info]                  ·gc.time:                  5.000 ms
[info] Iteration   4: 6311107.680 ops/s
[info]                  ·gc.alloc.rate:                   609.452 MB/sec
[info]                  ·gc.alloc.rate.norm:              152.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:             676.731 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:        168.780 B/op
[info]                  ·gc.churn.G1_Survivor_Space:      1.998 MB/sec
[info]                  ·gc.churn.G1_Survivor_Space.norm: 0.498 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 6765260.268 ops/s
[info]                  ·gc.alloc.rate:                                  653.422 MB/sec
[info]                  ·gc.alloc.rate.norm:                             152.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.073 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.017 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            680.862 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       158.383 B/op
[info]                  ·gc.count:                                       2.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fsInterpolator":
[info]   6573967.076 ±(99.9%) 838179.762 ops/s [Average]
[info]   (min, avg, max) = (6311107.680, 6573967.076, 6765260.268), stdev = 217672.623
[info]   CI (99.9%): [5735787.314, 7412146.839] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fsInterpolator:·gc.alloc.rate":
[info]   634.878 ±(99.9%) 80.950 MB/sec [Average]
[info]   (min, avg, max) = (609.452, 634.878, 653.422), stdev = 21.022
[info]   CI (99.9%): [553.928, 715.828] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fsInterpolator:·gc.alloc.rate.norm":
[info]   152.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (152.000, 152.000, 152.000), stdev = 0.001
[info]   CI (99.9%): [152.000, 152.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fsInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.015 ±(99.9%) 0.126 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.015, 0.073), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fsInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.003 ±(99.9%) 0.029 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.017), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.033] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Old_Gen":
[info]   609.775 ±(99.9%) 584.334 MB/sec [Average]
[info]   (min, avg, max) = (338.338, 609.775, 680.862), stdev = 151.750
[info]   CI (99.9%): [25.441, 1194.109] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   146.487 ±(99.9%) 145.977 B/op [Average]
[info]   (min, avg, max) = (79.217, 146.487, 168.780), stdev = 37.910
[info]   CI (99.9%): [0.510, 292.464] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Survivor_Space":
[info]   0.533 ±(99.9%) 3.344 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.533, 1.998), stdev = 0.868
[info]   CI (99.9%): [≈ 0, 3.877] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Survivor_Space.norm":
[info]   0.131 ±(99.9%) 0.833 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.131, 0.498), stdev = 0.216
[info]   CI (99.9%): [≈ 0, 0.964] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fsInterpolator:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.fsInterpolator:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.600, 6.000), stdev = 1.517
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.javaStringBuilder
[info] # Run progress: 70.00% complete, ETA 00:01:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4690938.547 ops/s
[info] # Warmup Iteration   2: 5029665.666 ops/s
[info] # Warmup Iteration   3: 5195055.595 ops/s
[info] # Warmup Iteration   4: 5232162.335 ops/s
[info] # Warmup Iteration   5: 5275972.196 ops/s
[info] Iteration   1: 5300986.200 ops/s
[info]                  ·gc.alloc.rate:            1724.380 MB/sec
[info]                  ·gc.alloc.rate.norm:       512.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1701.915 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 505.330 B/op
[info]                  ·gc.count:                 5.000 counts
[info]                  ·gc.time:                  4.000 ms
[info] Iteration   2: 5328094.992 ops/s
[info]                  ·gc.alloc.rate:                                  1733.410 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1702.122 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       502.758 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   3: 5111800.669 ops/s
[info]                  ·gc.alloc.rate:                                  1662.680 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.601 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       523.985 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   4: 5085180.957 ops/s
[info]                  ·gc.alloc.rate:                                  1654.145 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻³ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.779 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       526.744 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   5: 5304665.523 ops/s
[info]                  ·gc.alloc.rate:                                  1725.882 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1702.179 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       504.968 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.javaStringBuilder":
[info]   5226145.668 ±(99.9%) 451962.785 ops/s [Average]
[info]   (min, avg, max) = (5085180.957, 5226145.668, 5328094.992), stdev = 117373.300
[info]   CI (99.9%): [4774182.883, 5678108.453] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.javaStringBuilder:·gc.alloc.rate":
[info]   1700.099 ±(99.9%) 147.585 MB/sec [Average]
[info]   (min, avg, max) = (1654.145, 1700.099, 1733.410), stdev = 38.327
[info]   CI (99.9%): [1552.515, 1847.684] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.javaStringBuilder:·gc.alloc.rate.norm":
[info]   512.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (512.000, 512.000, 512.000), stdev = 0.001
[info]   CI (99.9%): [512.000, 512.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.javaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.002 ±(99.9%) 0.006 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.003), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.008] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.javaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.001 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.002] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Old_Gen":
[info]   1701.919 ±(99.9%) 0.923 MB/sec [Average]
[info]   (min, avg, max) = (1701.601, 1701.919, 1702.179), stdev = 0.240
[info]   CI (99.9%): [1700.996, 1702.842] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Old_Gen.norm":
[info]   512.757 ±(99.9%) 44.637 B/op [Average]
[info]   (min, avg, max) = (502.758, 512.757, 526.744), stdev = 11.592
[info]   CI (99.9%): [468.120, 557.394] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.javaStringBuilder:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.javaStringBuilder:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.pInterpolator
[info] # Run progress: 75.00% complete, ETA 00:01:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5884491.154 ops/s
[info] # Warmup Iteration   2: 6154867.491 ops/s
[info] # Warmup Iteration   3: 6503129.556 ops/s
[info] # Warmup Iteration   4: 6326132.439 ops/s
[info] # Warmup Iteration   5: 6280948.152 ops/s
[info] Iteration   1: 6379341.818 ops/s
[info]                  ·gc.alloc.rate:            1329.225 MB/sec
[info]                  ·gc.alloc.rate.norm:       328.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1361.331 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 335.922 B/op
[info]                  ·gc.count:                 4.000 counts
[info]                  ·gc.time:                  4.000 ms
[info] Iteration   2: 6587949.364 ops/s
[info]                  ·gc.alloc.rate:            1372.840 MB/sec
[info]                  ·gc.alloc.rate.norm:       328.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1361.478 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 325.285 B/op
[info]                  ·gc.count:                 4.000 counts
[info]                  ·gc.time:                  3.000 ms
[info] Iteration   3: 6525786.661 ops/s
[info]                  ·gc.alloc.rate:                                  1359.816 MB/sec
[info]                  ·gc.alloc.rate.norm:                             328.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1361.406 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       328.384 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Iteration   4: 6534991.286 ops/s
[info]                  ·gc.alloc.rate:                                  1361.648 MB/sec
[info]                  ·gc.alloc.rate.norm:                             328.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.002 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1361.353 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       327.929 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Iteration   5: 6581199.193 ops/s
[info]                  ·gc.alloc.rate:                                  1371.474 MB/sec
[info]                  ·gc.alloc.rate.norm:                             328.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1361.515 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       325.618 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        3.000 ms
[info] Result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.pInterpolator":
[info]   6521853.664 ±(99.9%) 324393.755 ops/s [Average]
[info]   (min, avg, max) = (6379341.818, 6521853.664, 6587949.364), stdev = 84244.028
[info]   CI (99.9%): [6197459.909, 6846247.420] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.pInterpolator:·gc.alloc.rate":
[info]   1359.000 ±(99.9%) 67.835 MB/sec [Average]
[info]   (min, avg, max) = (1329.225, 1359.000, 1372.840), stdev = 17.616
[info]   CI (99.9%): [1291.166, 1426.835] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.pInterpolator:·gc.alloc.rate.norm":
[info]   328.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (328.000, 328.000, 328.000), stdev = 0.001
[info]   CI (99.9%): [328.000, 328.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.pInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.001 ±(99.9%) 0.004 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.002), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.004] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.pInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.pInterpolator:·gc.churn.G1_Old_Gen":
[info]   1361.417 ±(99.9%) 0.304 MB/sec [Average]
[info]   (min, avg, max) = (1361.331, 1361.417, 1361.515), stdev = 0.079
[info]   CI (99.9%): [1361.112, 1361.721] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.pInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   328.628 ±(99.9%) 16.561 B/op [Average]
[info]   (min, avg, max) = (325.285, 328.628, 335.922), stdev = 4.301
[info]   CI (99.9%): [312.067, 345.189] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.pInterpolator:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.pInterpolator:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.rawInterpolator
[info] # Run progress: 80.00% complete, ETA 00:01:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4743220.262 ops/s
[info] # Warmup Iteration   2: 4946194.586 ops/s
[info] # Warmup Iteration   3: 5238005.795 ops/s
[info] # Warmup Iteration   4: 5334040.264 ops/s
[info] # Warmup Iteration   5: 5290885.544 ops/s
[info] Iteration   1: 5094913.011 ops/s
[info]                  ·gc.alloc.rate:            1760.676 MB/sec
[info]                  ·gc.alloc.rate.norm:       544.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1701.652 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 525.763 B/op
[info]                  ·gc.count:                 5.000 counts
[info]                  ·gc.time:                  4.000 ms
[info] Iteration   2: 5134147.232 ops/s
[info]                  ·gc.alloc.rate:                                  1774.332 MB/sec
[info]                  ·gc.alloc.rate.norm:                             544.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.002 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.733 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       521.742 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   3: 5256712.679 ops/s
[info]                  ·gc.alloc.rate:            1817.392 MB/sec
[info]                  ·gc.alloc.rate.norm:       544.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      1702.335 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 509.560 B/op
[info]                  ·gc.count:                 5.000 counts
[info]                  ·gc.time:                  3.000 ms
[info] Iteration   4: 5246684.370 ops/s
[info]                  ·gc.alloc.rate:                                  1813.067 MB/sec
[info]                  ·gc.alloc.rate.norm:                             544.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻³ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2041.895 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       612.659 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   5: 5366289.013 ops/s
[info]                  ·gc.alloc.rate:                                  1855.242 MB/sec
[info]                  ·gc.alloc.rate.norm:                             544.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻³ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1702.405 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       499.185 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.rawInterpolator":
[info]   5219749.261 ±(99.9%) 415073.205 ops/s [Average]
[info]   (min, avg, max) = (5094913.011, 5219749.261, 5366289.013), stdev = 107793.193
[info]   CI (99.9%): [4804676.056, 5634822.466] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.rawInterpolator:·gc.alloc.rate":
[info]   1804.142 ±(99.9%) 144.648 MB/sec [Average]
[info]   (min, avg, max) = (1760.676, 1804.142, 1855.242), stdev = 37.565
[info]   CI (99.9%): [1659.494, 1948.790] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.rawInterpolator:·gc.alloc.rate.norm":
[info]   544.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (544.000, 544.000, 544.000), stdev = 0.001
[info]   CI (99.9%): [544.000, 544.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.rawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.001 ±(99.9%) 0.004 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.002), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.004] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.rawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.rawInterpolator:·gc.churn.G1_Old_Gen":
[info]   1770.004 ±(99.9%) 585.267 MB/sec [Average]
[info]   (min, avg, max) = (1701.652, 1770.004, 2041.895), stdev = 151.992
[info]   CI (99.9%): [1184.737, 2355.271] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.rawInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   533.782 ±(99.9%) 174.499 B/op [Average]
[info]   (min, avg, max) = (499.185, 533.782, 612.659), stdev = 45.317
[info]   CI (99.9%): [359.283, 708.281] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.rawInterpolator:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.rawInterpolator:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 0.707
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.sInterpolator
[info] # Run progress: 85.00% complete, ETA 00:00:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4730483.553 ops/s
[info] # Warmup Iteration   2: 5038222.986 ops/s
[info] # Warmup Iteration   3: 5169309.782 ops/s
[info] # Warmup Iteration   4: 5158774.501 ops/s
[info] # Warmup Iteration   5: 5324050.011 ops/s
[info] Iteration   1: 5271818.913 ops/s
[info]                  ·gc.alloc.rate:                                  1821.957 MB/sec
[info]                  ·gc.alloc.rate.norm:                             544.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.084 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       609.726 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   2: 5303685.810 ops/s
[info]                  ·gc.alloc.rate:                                  1832.906 MB/sec
[info]                  ·gc.alloc.rate.norm:                             544.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻³ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.748 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       505.073 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   3: 5289099.541 ops/s
[info]                  ·gc.alloc.rate:            1828.436 MB/sec
[info]                  ·gc.alloc.rate.norm:       544.000 B/op
[info]                  ·gc.churn.G1_Old_Gen:      2042.751 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm: 607.763 B/op
[info]                  ·gc.count:                 6.000 counts
[info]                  ·gc.time:                  5.000 ms
[info] Iteration   4: 5210429.978 ops/s
[info]                  ·gc.alloc.rate:                                  1800.800 MB/sec
[info]                  ·gc.alloc.rate.norm:                             544.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻³ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.870 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       514.114 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   5: 5306156.773 ops/s
[info]                  ·gc.alloc.rate:                                  1833.808 MB/sec
[info]                  ·gc.alloc.rate.norm:                             544.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻³ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.767 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       504.830 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.sInterpolator":
[info]   5276238.203 ±(99.9%) 151161.179 ops/s [Average]
[info]   (min, avg, max) = (5210429.978, 5276238.203, 5306156.773), stdev = 39256.078
[info]   CI (99.9%): [5125077.024, 5427399.382] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.sInterpolator:·gc.alloc.rate":
[info]   1823.582 ±(99.9%) 52.259 MB/sec [Average]
[info]   (min, avg, max) = (1800.800, 1823.582, 1833.808), stdev = 13.571
[info]   CI (99.9%): [1771.323, 1875.840] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.sInterpolator:·gc.alloc.rate.norm":
[info]   544.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (544.000, 544.000, 544.000), stdev = 0.001
[info]   CI (99.9%): [544.000, 544.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.sInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.001 ±(99.9%) 0.002 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.003] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.sInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.sInterpolator:·gc.churn.G1_Old_Gen":
[info]   1838.044 ±(99.9%) 718.403 MB/sec [Average]
[info]   (min, avg, max) = (1701.748, 1838.044, 2042.751), stdev = 186.567
[info]   CI (99.9%): [1119.641, 2556.446] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.sInterpolator:·gc.churn.G1_Old_Gen.norm":
[info]   548.301 ±(99.9%) 212.971 B/op [Average]
[info]   (min, avg, max) = (504.830, 548.301, 609.726), stdev = 55.308
[info]   CI (99.9%): [335.330, 761.272] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.sInterpolator:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.sInterpolator:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringBuilder
[info] # Run progress: 90.00% complete, ETA 00:00:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4049697.006 ops/s
[info] # Warmup Iteration   2: 4741575.755 ops/s
[info] # Warmup Iteration   3: 5058380.376 ops/s
[info] # Warmup Iteration   4: 5146887.504 ops/s
[info] # Warmup Iteration   5: 5119951.597 ops/s
[info] Iteration   1: 5032012.902 ops/s
[info]                  ·gc.alloc.rate:                                  1636.718 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.002 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.720 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       532.334 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   2: 5067951.809 ops/s
[info]                  ·gc.alloc.rate:                                  1648.448 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻³ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1361.390 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       422.841 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   3: 5219143.669 ops/s
[info]                  ·gc.alloc.rate:                                  1697.882 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.004 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1702.009 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       513.245 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   4: 5216124.619 ops/s
[info]                  ·gc.alloc.rate:                                  1696.599 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻³ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.690 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       513.537 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   5: 5240597.245 ops/s
[info]                  ·gc.alloc.rate:                                  1704.549 MB/sec
[info]                  ·gc.alloc.rate.norm:                             512.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻³ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.680 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       511.138 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringBuilder":
[info]   5155166.049 ±(99.9%) 374724.211 ops/s [Average]
[info]   (min, avg, max) = (5032012.902, 5155166.049, 5240597.245), stdev = 97314.688
[info]   CI (99.9%): [4780441.837, 5529890.260] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringBuilder:·gc.alloc.rate":
[info]   1676.839 ±(99.9%) 122.024 MB/sec [Average]
[info]   (min, avg, max) = (1636.718, 1676.839, 1704.549), stdev = 31.689
[info]   CI (99.9%): [1554.815, 1798.863] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringBuilder:·gc.alloc.rate.norm":
[info]   512.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (512.000, 512.000, 512.000), stdev = 0.001
[info]   CI (99.9%): [512.000, 512.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.002 ±(99.9%) 0.004 MB/sec [Average]
[info]   (min, avg, max) = (0.001, 0.002, 0.004), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.006] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.002] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Old_Gen":
[info]   1633.698 ±(99.9%) 586.163 MB/sec [Average]
[info]   (min, avg, max) = (1361.390, 1633.698, 1702.009), stdev = 152.225
[info]   CI (99.9%): [1047.534, 2219.861] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Old_Gen.norm":
[info]   498.619 ±(99.9%) 166.428 B/op [Average]
[info]   (min, avg, max) = (422.841, 498.619, 532.334), stdev = 43.221
[info]   CI (99.9%): [332.191, 665.047] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringBuilder:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringBuilder:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 9.0.4, VM 9.0.4+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringConcatenation
[info] # Run progress: 95.00% complete, ETA 00:00:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4640562.611 ops/s
[info] # Warmup Iteration   2: 5101891.378 ops/s
[info] # Warmup Iteration   3: 5222600.076 ops/s
[info] # Warmup Iteration   4: 5272992.778 ops/s
[info] # Warmup Iteration   5: 5110518.008 ops/s
[info] Iteration   1: 5103637.447 ops/s
[info]                  ·gc.alloc.rate:                                  1764.347 MB/sec
[info]                  ·gc.alloc.rate.norm:                             544.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.778 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       629.849 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Iteration   2: 5280170.778 ops/s
[info]                  ·gc.alloc.rate:                                  1824.807 MB/sec
[info]                  ·gc.alloc.rate.norm:                             544.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.782 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       507.325 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   3: 5109372.819 ops/s
[info]                  ·gc.alloc.rate:                                  1765.913 MB/sec
[info]                  ·gc.alloc.rate.norm:                             544.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      ≈ 10⁻³ MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.817 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       524.255 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   4: 5224176.508 ops/s
[info]                  ·gc.alloc.rate:                                  1805.573 MB/sec
[info]                  ·gc.alloc.rate.norm:                             544.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.003 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 0.001 B/op
[info]                  ·gc.churn.G1_Old_Gen:                            1701.837 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       512.746 B/op
[info]                  ·gc.count:                                       5.000 counts
[info]                  ·gc.time:                                        4.000 ms
[info] Iteration   5: 5301163.458 ops/s
[info]                  ·gc.alloc.rate:                                  1832.109 MB/sec
[info]                  ·gc.alloc.rate.norm:                             544.000 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻³ B/op
[info]                  ·gc.churn.G1_Old_Gen:                            2042.071 MB/sec
[info]                  ·gc.churn.G1_Old_Gen.norm:                       606.343 B/op
[info]                  ·gc.count:                                       6.000 counts
[info]                  ·gc.time:                                        5.000 ms
[info] Result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringConcatenation":
[info]   5203704.202 ±(99.9%) 358525.371 ops/s [Average]
[info]   (min, avg, max) = (5103637.447, 5203704.202, 5301163.458), stdev = 93107.900
[info]   CI (99.9%): [4845178.831, 5562229.573] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.alloc.rate":
[info]   1798.550 ±(99.9%) 123.280 MB/sec [Average]
[info]   (min, avg, max) = (1764.347, 1798.550, 1832.109), stdev = 32.015
[info]   CI (99.9%): [1675.269, 1921.830] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.alloc.rate.norm":
[info]   544.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (544.000, 544.000, 544.000), stdev = 0.001
[info]   CI (99.9%): [544.000, 544.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.002 ±(99.9%) 0.004 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 0.002, 0.003), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.005] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   ≈ 10⁻³ B/op
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.churn.G1_Old_Gen":
[info]   1838.057 ±(99.9%) 718.382 MB/sec [Average]
[info]   (min, avg, max) = (1701.782, 1838.057, 2042.778), stdev = 186.561
[info]   CI (99.9%): [1119.675, 2556.439] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.churn.G1_Old_Gen.norm":
[info]   556.103 ±(99.9%) 221.504 B/op [Average]
[info]   (min, avg, max) = (507.325, 556.103, 629.849), stdev = 57.524
[info]   CI (99.9%): [334.599, 777.608] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.sizmek.fsi.benchmark.SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # Run complete. Total time: 00:05:14
[info] Benchmark                                                                                               Mode  Cnt        Score        Error   Units
[info] NestedConcatenationBenchmark.fInterpolator                                                             thrpt    5    21729.113 ±   1488.456   ops/s
[info] NestedConcatenationBenchmark.fInterpolator:·gc.alloc.rate                                              thrpt    5      990.390 ±     67.668  MB/sec
[info] NestedConcatenationBenchmark.fInterpolator:·gc.alloc.rate.norm                                         thrpt    5    71738.251 ±     19.221    B/op
[info] NestedConcatenationBenchmark.fInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                  thrpt    5        0.025 ±      0.197  MB/sec
[info] NestedConcatenationBenchmark.fInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm             thrpt    5        1.802 ±     14.481    B/op
[info] NestedConcatenationBenchmark.fInterpolator:·gc.churn.G1_Old_Gen                                        thrpt    5     1019.515 ±     10.359  MB/sec
[info] NestedConcatenationBenchmark.fInterpolator:·gc.churn.G1_Old_Gen.norm                                   thrpt    5    73865.014 ±   4679.959    B/op
[info] NestedConcatenationBenchmark.fInterpolator:·gc.churn.G1_Survivor_Space                                 thrpt    5        0.400 ±      3.441  MB/sec
[info] NestedConcatenationBenchmark.fInterpolator:·gc.churn.G1_Survivor_Space.norm                            thrpt    5       29.423 ±    253.338    B/op
[info] NestedConcatenationBenchmark.fInterpolator:·gc.count                                                   thrpt    5       15.000               counts
[info] NestedConcatenationBenchmark.fInterpolator:·gc.time                                                    thrpt    5       24.000                   ms
[info] NestedConcatenationBenchmark.fastInterpolator                                                          thrpt    5   277700.602 ±  13510.135   ops/s
[info] NestedConcatenationBenchmark.fastInterpolator:·gc.alloc.rate                                           thrpt    5     1906.888 ±     93.299  MB/sec
[info] NestedConcatenationBenchmark.fastInterpolator:·gc.alloc.rate.norm                                      thrpt    5    10808.001 ±      0.001    B/op
[info] NestedConcatenationBenchmark.fastInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'               thrpt    5        0.003 ±      0.004  MB/sec
[info] NestedConcatenationBenchmark.fastInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm          thrpt    5        0.016 ±      0.019    B/op
[info] NestedConcatenationBenchmark.fastInterpolator:·gc.churn.G1_Old_Gen                                     thrpt    5     1974.173 ±    586.491  MB/sec
[info] NestedConcatenationBenchmark.fastInterpolator:·gc.churn.G1_Old_Gen.norm                                thrpt    5    11189.086 ±   3275.451    B/op
[info] NestedConcatenationBenchmark.fastInterpolator:·gc.count                                                thrpt    5       29.000               counts
[info] NestedConcatenationBenchmark.fastInterpolator:·gc.time                                                 thrpt    5       25.000                   ms
[info] NestedConcatenationBenchmark.frawInterpolator                                                          thrpt    5   147785.215 ±  13183.051   ops/s
[info] NestedConcatenationBenchmark.frawInterpolator:·gc.alloc.rate                                           thrpt    5     1237.062 ±    110.247  MB/sec
[info] NestedConcatenationBenchmark.frawInterpolator:·gc.alloc.rate.norm                                      thrpt    5    13176.003 ±      0.001    B/op
[info] NestedConcatenationBenchmark.frawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'               thrpt    5        0.005 ±      0.034  MB/sec
[info] NestedConcatenationBenchmark.frawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm          thrpt    5        0.056 ±      0.371    B/op
[info] NestedConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Old_Gen                                     thrpt    5     1293.338 ±    586.112  MB/sec
[info] NestedConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Old_Gen.norm                                thrpt    5    13768.952 ±   5937.645    B/op
[info] NestedConcatenationBenchmark.frawInterpolator:·gc.count                                                thrpt    5       19.000               counts
[info] NestedConcatenationBenchmark.frawInterpolator:·gc.time                                                 thrpt    5       17.000                   ms
[info] NestedConcatenationBenchmark.fsInterpolator                                                            thrpt    5   152947.613 ±  10289.258   ops/s
[info] NestedConcatenationBenchmark.fsInterpolator:·gc.alloc.rate                                             thrpt    5     1280.341 ±     85.986  MB/sec
[info] NestedConcatenationBenchmark.fsInterpolator:·gc.alloc.rate.norm                                        thrpt    5    13176.003 ±      0.001    B/op
[info] NestedConcatenationBenchmark.fsInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                 thrpt    5        0.004 ±      0.029  MB/sec
[info] NestedConcatenationBenchmark.fsInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm            thrpt    5        0.043 ±      0.293    B/op
[info] NestedConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Old_Gen                                       thrpt    5     1293.403 ±    586.237  MB/sec
[info] NestedConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Old_Gen.norm                                  thrpt    5    13320.970 ±   6348.632    B/op
[info] NestedConcatenationBenchmark.fsInterpolator:·gc.count                                                  thrpt    5       19.000               counts
[info] NestedConcatenationBenchmark.fsInterpolator:·gc.time                                                   thrpt    5       15.000                   ms
[info] NestedConcatenationBenchmark.javaStringBuilder                                                         thrpt    5   539007.438 ±  24225.618   ops/s
[info] NestedConcatenationBenchmark.javaStringBuilder:·gc.alloc.rate                                          thrpt    5     1457.345 ±     65.436  MB/sec
[info] NestedConcatenationBenchmark.javaStringBuilder:·gc.alloc.rate.norm                                     thrpt    5     4256.001 ±      0.001    B/op
[info] NestedConcatenationBenchmark.javaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'              thrpt    5       ≈ 10⁻³               MB/sec
[info] NestedConcatenationBenchmark.javaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm         thrpt    5        0.001 ±      0.007    B/op
[info] NestedConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Old_Gen                                    thrpt    5     1497.501 ±    717.561  MB/sec
[info] NestedConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Old_Gen.norm                               thrpt    5     4370.152 ±   1956.417    B/op
[info] NestedConcatenationBenchmark.javaStringBuilder:·gc.count                                               thrpt    5       22.000               counts
[info] NestedConcatenationBenchmark.javaStringBuilder:·gc.time                                                thrpt    5       19.000                   ms
[info] NestedConcatenationBenchmark.pInterpolator                                                             thrpt    5   212899.118 ±   6766.920   ops/s
[info] NestedConcatenationBenchmark.pInterpolator:·gc.alloc.rate                                              thrpt    5     1782.360 ±     56.951  MB/sec
[info] NestedConcatenationBenchmark.pInterpolator:·gc.alloc.rate.norm                                         thrpt    5    13176.002 ±      0.001    B/op
[info] NestedConcatenationBenchmark.pInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                  thrpt    5        0.001 ±      0.007  MB/sec
[info] NestedConcatenationBenchmark.pInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm             thrpt    5        0.008 ±      0.049    B/op
[info] NestedConcatenationBenchmark.pInterpolator:·gc.churn.G1_Old_Gen                                        thrpt    5     1770.081 ±    586.848  MB/sec
[info] NestedConcatenationBenchmark.pInterpolator:·gc.churn.G1_Old_Gen.norm                                   thrpt    5    13087.380 ±   4445.344    B/op
[info] NestedConcatenationBenchmark.pInterpolator:·gc.count                                                   thrpt    5       26.000               counts
[info] NestedConcatenationBenchmark.pInterpolator:·gc.time                                                    thrpt    5       26.000                   ms
[info] NestedConcatenationBenchmark.rawInterpolator                                                           thrpt    5   184363.944 ±   4108.412   ops/s
[info] NestedConcatenationBenchmark.rawInterpolator:·gc.alloc.rate                                            thrpt    5     2120.446 ±     47.143  MB/sec
[info] NestedConcatenationBenchmark.rawInterpolator:·gc.alloc.rate.norm                                       thrpt    5    18104.002 ±      0.001    B/op
[info] NestedConcatenationBenchmark.rawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                thrpt    5        0.002 ±      0.004  MB/sec
[info] NestedConcatenationBenchmark.rawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm           thrpt    5        0.014 ±      0.037    B/op
[info] NestedConcatenationBenchmark.rawInterpolator:·gc.churn.G1_Old_Gen                                      thrpt    5     2110.158 ±    586.023  MB/sec
[info] NestedConcatenationBenchmark.rawInterpolator:·gc.churn.G1_Old_Gen.norm                                 thrpt    5    18018.272 ±   5136.414    B/op
[info] NestedConcatenationBenchmark.rawInterpolator:·gc.count                                                 thrpt    5       31.000               counts
[info] NestedConcatenationBenchmark.rawInterpolator:·gc.time                                                  thrpt    5       27.000                   ms
[info] NestedConcatenationBenchmark.sInterpolator                                                             thrpt    5   174148.300 ±   3485.041   ops/s
[info] NestedConcatenationBenchmark.sInterpolator:·gc.alloc.rate                                              thrpt    5     1881.854 ±     36.939  MB/sec
[info] NestedConcatenationBenchmark.sInterpolator:·gc.alloc.rate.norm                                         thrpt    5    17008.002 ±      0.001    B/op
[info] NestedConcatenationBenchmark.sInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                  thrpt    5        0.001 ±      0.004  MB/sec
[info] NestedConcatenationBenchmark.sInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm             thrpt    5        0.011 ±      0.033    B/op
[info] NestedConcatenationBenchmark.sInterpolator:·gc.churn.G1_Old_Gen                                        thrpt    5     1906.123 ±    717.618  MB/sec
[info] NestedConcatenationBenchmark.sInterpolator:·gc.churn.G1_Old_Gen.norm                                   thrpt    5    17225.897 ±   6407.278    B/op
[info] NestedConcatenationBenchmark.sInterpolator:·gc.count                                                   thrpt    5       28.000               counts
[info] NestedConcatenationBenchmark.sInterpolator:·gc.time                                                    thrpt    5       24.000                   ms
[info] NestedConcatenationBenchmark.scalaStringBuilder                                                        thrpt    5   496255.373 ±   9881.875   ops/s
[info] NestedConcatenationBenchmark.scalaStringBuilder:·gc.alloc.rate                                         thrpt    5     1347.012 ±     26.745  MB/sec
[info] NestedConcatenationBenchmark.scalaStringBuilder:·gc.alloc.rate.norm                                    thrpt    5     4272.001 ±      0.001    B/op
[info] NestedConcatenationBenchmark.scalaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'             thrpt    5        0.005 ±      0.035  MB/sec
[info] NestedConcatenationBenchmark.scalaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm        thrpt    5        0.015 ±      0.112    B/op
[info] NestedConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Old_Gen                                   thrpt    5     1361.594 ±      1.100  MB/sec
[info] NestedConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Old_Gen.norm                              thrpt    5     4318.336 ±     85.959    B/op
[info] NestedConcatenationBenchmark.scalaStringBuilder:·gc.count                                              thrpt    5       20.000               counts
[info] NestedConcatenationBenchmark.scalaStringBuilder:·gc.time                                               thrpt    5       17.000                   ms
[info] NestedConcatenationBenchmark.scalaStringConcatenation                                                  thrpt    5   140031.260 ±   8411.526   ops/s
[info] NestedConcatenationBenchmark.scalaStringConcatenation:·gc.alloc.rate                                   thrpt    5     1902.520 ±    114.567  MB/sec
[info] NestedConcatenationBenchmark.scalaStringConcatenation:·gc.alloc.rate.norm                              thrpt    5    21384.003 ±      0.001    B/op
[info] NestedConcatenationBenchmark.scalaStringConcatenation:·gc.churn.CodeHeap_'non-profiled_nmethods'       thrpt    5        0.002 ±      0.006  MB/sec
[info] NestedConcatenationBenchmark.scalaStringConcatenation:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm  thrpt    5        0.019 ±      0.070    B/op
[info] NestedConcatenationBenchmark.scalaStringConcatenation:·gc.churn.G1_Old_Gen                             thrpt    5     1906.092 ±    717.580  MB/sec
[info] NestedConcatenationBenchmark.scalaStringConcatenation:·gc.churn.G1_Old_Gen.norm                        thrpt    5    21425.393 ±   8038.103    B/op
[info] NestedConcatenationBenchmark.scalaStringConcatenation:·gc.count                                        thrpt    5       28.000               counts
[info] NestedConcatenationBenchmark.scalaStringConcatenation:·gc.time                                         thrpt    5       24.000                   ms
[info] SimpleConcatenationBenchmark.fInterpolator                                                             thrpt    5   544225.362 ±  22990.649   ops/s
[info] SimpleConcatenationBenchmark.fInterpolator:·gc.alloc.rate                                              thrpt    5      829.845 ±     34.939  MB/sec
[info] SimpleConcatenationBenchmark.fInterpolator:·gc.alloc.rate.norm                                         thrpt    5     2400.001 ±      0.001    B/op
[info] SimpleConcatenationBenchmark.fInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                  thrpt    5        0.018 ±      0.154  MB/sec
[info] SimpleConcatenationBenchmark.fInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm             thrpt    5        0.051 ±      0.440    B/op
[info] SimpleConcatenationBenchmark.fInterpolator:·gc.churn.G1_Old_Gen                                        thrpt    5      814.378 ±    716.161  MB/sec
[info] SimpleConcatenationBenchmark.fInterpolator:·gc.churn.G1_Old_Gen.norm                                   thrpt    5     2351.527 ±   1981.383    B/op
[info] SimpleConcatenationBenchmark.fInterpolator:·gc.churn.G1_Survivor_Space                                 thrpt    5        0.533 ±      3.344  MB/sec
[info] SimpleConcatenationBenchmark.fInterpolator:·gc.churn.G1_Survivor_Space.norm                            thrpt    5        1.544 ±      9.664    B/op
[info] SimpleConcatenationBenchmark.fInterpolator:·gc.count                                                   thrpt    5       12.000               counts
[info] SimpleConcatenationBenchmark.fInterpolator:·gc.time                                                    thrpt    5       24.000                   ms
[info] SimpleConcatenationBenchmark.fastInterpolator                                                          thrpt    5  4491710.882 ± 162766.696   ops/s
[info] SimpleConcatenationBenchmark.fastInterpolator:·gc.alloc.rate                                           thrpt    5     1986.375 ±     72.676  MB/sec
[info] SimpleConcatenationBenchmark.fastInterpolator:·gc.alloc.rate.norm                                      thrpt    5      696.000 ±      0.001    B/op
[info] SimpleConcatenationBenchmark.fastInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'               thrpt    5        0.001 ±      0.007  MB/sec
[info] SimpleConcatenationBenchmark.fastInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm          thrpt    5       ≈ 10⁻³                 B/op
[info] SimpleConcatenationBenchmark.fastInterpolator:·gc.churn.G1_Old_Gen                                     thrpt    5     1974.345 ±    585.203  MB/sec
[info] SimpleConcatenationBenchmark.fastInterpolator:·gc.churn.G1_Old_Gen.norm                                thrpt    5      691.811 ±    205.390    B/op
[info] SimpleConcatenationBenchmark.fastInterpolator:·gc.count                                                thrpt    5       29.000               counts
[info] SimpleConcatenationBenchmark.fastInterpolator:·gc.time                                                 thrpt    5       23.000                   ms
[info] SimpleConcatenationBenchmark.frawInterpolator                                                          thrpt    5  6685737.865 ± 310973.616   ops/s
[info] SimpleConcatenationBenchmark.frawInterpolator:·gc.alloc.rate                                           thrpt    5      645.754 ±     29.713  MB/sec
[info] SimpleConcatenationBenchmark.frawInterpolator:·gc.alloc.rate.norm                                      thrpt    5      152.000 ±      0.001    B/op
[info] SimpleConcatenationBenchmark.frawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'               thrpt    5        0.020 ±      0.172  MB/sec
[info] SimpleConcatenationBenchmark.frawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm          thrpt    5        0.005 ±      0.041    B/op
[info] SimpleConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Old_Gen                                     thrpt    5      677.652 ±      7.129  MB/sec
[info] SimpleConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Old_Gen.norm                                thrpt    5      159.529 ±      8.313    B/op
[info] SimpleConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Survivor_Space                              thrpt    5        0.400 ±      3.442  MB/sec
[info] SimpleConcatenationBenchmark.frawInterpolator:·gc.churn.G1_Survivor_Space.norm                         thrpt    5        0.096 ±      0.823    B/op
[info] SimpleConcatenationBenchmark.frawInterpolator:·gc.count                                                thrpt    5       10.000               counts
[info] SimpleConcatenationBenchmark.frawInterpolator:·gc.time                                                 thrpt    5       28.000                   ms
[info] SimpleConcatenationBenchmark.fsInterpolator                                                            thrpt    5  6573967.076 ± 838179.762   ops/s
[info] SimpleConcatenationBenchmark.fsInterpolator:·gc.alloc.rate                                             thrpt    5      634.878 ±     80.950  MB/sec
[info] SimpleConcatenationBenchmark.fsInterpolator:·gc.alloc.rate.norm                                        thrpt    5      152.000 ±      0.001    B/op
[info] SimpleConcatenationBenchmark.fsInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                 thrpt    5        0.015 ±      0.126  MB/sec
[info] SimpleConcatenationBenchmark.fsInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm            thrpt    5        0.003 ±      0.029    B/op
[info] SimpleConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Old_Gen                                       thrpt    5      609.775 ±    584.334  MB/sec
[info] SimpleConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Old_Gen.norm                                  thrpt    5      146.487 ±    145.977    B/op
[info] SimpleConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Survivor_Space                                thrpt    5        0.533 ±      3.344  MB/sec
[info] SimpleConcatenationBenchmark.fsInterpolator:·gc.churn.G1_Survivor_Space.norm                           thrpt    5        0.131 ±      0.833    B/op
[info] SimpleConcatenationBenchmark.fsInterpolator:·gc.count                                                  thrpt    5        9.000               counts
[info] SimpleConcatenationBenchmark.fsInterpolator:·gc.time                                                   thrpt    5       23.000                   ms
[info] SimpleConcatenationBenchmark.javaStringBuilder                                                         thrpt    5  5226145.668 ± 451962.785   ops/s
[info] SimpleConcatenationBenchmark.javaStringBuilder:·gc.alloc.rate                                          thrpt    5     1700.099 ±    147.585  MB/sec
[info] SimpleConcatenationBenchmark.javaStringBuilder:·gc.alloc.rate.norm                                     thrpt    5      512.000 ±      0.001    B/op
[info] SimpleConcatenationBenchmark.javaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'              thrpt    5        0.002 ±      0.006  MB/sec
[info] SimpleConcatenationBenchmark.javaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm         thrpt    5        0.001 ±      0.002    B/op
[info] SimpleConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Old_Gen                                    thrpt    5     1701.919 ±      0.923  MB/sec
[info] SimpleConcatenationBenchmark.javaStringBuilder:·gc.churn.G1_Old_Gen.norm                               thrpt    5      512.757 ±     44.637    B/op
[info] SimpleConcatenationBenchmark.javaStringBuilder:·gc.count                                               thrpt    5       25.000               counts
[info] SimpleConcatenationBenchmark.javaStringBuilder:·gc.time                                                thrpt    5       21.000                   ms
[info] SimpleConcatenationBenchmark.pInterpolator                                                             thrpt    5  6521853.664 ± 324393.755   ops/s
[info] SimpleConcatenationBenchmark.pInterpolator:·gc.alloc.rate                                              thrpt    5     1359.000 ±     67.835  MB/sec
[info] SimpleConcatenationBenchmark.pInterpolator:·gc.alloc.rate.norm                                         thrpt    5      328.000 ±      0.001    B/op
[info] SimpleConcatenationBenchmark.pInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                  thrpt    5        0.001 ±      0.004  MB/sec
[info] SimpleConcatenationBenchmark.pInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm             thrpt    5       ≈ 10⁻⁴                 B/op
[info] SimpleConcatenationBenchmark.pInterpolator:·gc.churn.G1_Old_Gen                                        thrpt    5     1361.417 ±      0.304  MB/sec
[info] SimpleConcatenationBenchmark.pInterpolator:·gc.churn.G1_Old_Gen.norm                                   thrpt    5      328.628 ±     16.561    B/op
[info] SimpleConcatenationBenchmark.pInterpolator:·gc.count                                                   thrpt    5       20.000               counts
[info] SimpleConcatenationBenchmark.pInterpolator:·gc.time                                                    thrpt    5       16.000                   ms
[info] SimpleConcatenationBenchmark.rawInterpolator                                                           thrpt    5  5219749.261 ± 415073.205   ops/s
[info] SimpleConcatenationBenchmark.rawInterpolator:·gc.alloc.rate                                            thrpt    5     1804.142 ±    144.648  MB/sec
[info] SimpleConcatenationBenchmark.rawInterpolator:·gc.alloc.rate.norm                                       thrpt    5      544.000 ±      0.001    B/op
[info] SimpleConcatenationBenchmark.rawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                thrpt    5        0.001 ±      0.004  MB/sec
[info] SimpleConcatenationBenchmark.rawInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm           thrpt    5       ≈ 10⁻⁴                 B/op
[info] SimpleConcatenationBenchmark.rawInterpolator:·gc.churn.G1_Old_Gen                                      thrpt    5     1770.004 ±    585.267  MB/sec
[info] SimpleConcatenationBenchmark.rawInterpolator:·gc.churn.G1_Old_Gen.norm                                 thrpt    5      533.782 ±    174.499    B/op
[info] SimpleConcatenationBenchmark.rawInterpolator:·gc.count                                                 thrpt    5       26.000               counts
[info] SimpleConcatenationBenchmark.rawInterpolator:·gc.time                                                  thrpt    5       20.000                   ms
[info] SimpleConcatenationBenchmark.sInterpolator                                                             thrpt    5  5276238.203 ± 151161.179   ops/s
[info] SimpleConcatenationBenchmark.sInterpolator:·gc.alloc.rate                                              thrpt    5     1823.582 ±     52.259  MB/sec
[info] SimpleConcatenationBenchmark.sInterpolator:·gc.alloc.rate.norm                                         thrpt    5      544.000 ±      0.001    B/op
[info] SimpleConcatenationBenchmark.sInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'                  thrpt    5        0.001 ±      0.002  MB/sec
[info] SimpleConcatenationBenchmark.sInterpolator:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm             thrpt    5       ≈ 10⁻⁴                 B/op
[info] SimpleConcatenationBenchmark.sInterpolator:·gc.churn.G1_Old_Gen                                        thrpt    5     1838.044 ±    718.403  MB/sec
[info] SimpleConcatenationBenchmark.sInterpolator:·gc.churn.G1_Old_Gen.norm                                   thrpt    5      548.301 ±    212.971    B/op
[info] SimpleConcatenationBenchmark.sInterpolator:·gc.count                                                   thrpt    5       27.000               counts
[info] SimpleConcatenationBenchmark.sInterpolator:·gc.time                                                    thrpt    5       21.000                   ms
[info] SimpleConcatenationBenchmark.scalaStringBuilder                                                        thrpt    5  5155166.049 ± 374724.211   ops/s
[info] SimpleConcatenationBenchmark.scalaStringBuilder:·gc.alloc.rate                                         thrpt    5     1676.839 ±    122.024  MB/sec
[info] SimpleConcatenationBenchmark.scalaStringBuilder:·gc.alloc.rate.norm                                    thrpt    5      512.000 ±      0.001    B/op
[info] SimpleConcatenationBenchmark.scalaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'             thrpt    5        0.002 ±      0.004  MB/sec
[info] SimpleConcatenationBenchmark.scalaStringBuilder:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm        thrpt    5        0.001 ±      0.001    B/op
[info] SimpleConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Old_Gen                                   thrpt    5     1633.698 ±    586.163  MB/sec
[info] SimpleConcatenationBenchmark.scalaStringBuilder:·gc.churn.G1_Old_Gen.norm                              thrpt    5      498.619 ±    166.428    B/op
[info] SimpleConcatenationBenchmark.scalaStringBuilder:·gc.count                                              thrpt    5       24.000               counts
[info] SimpleConcatenationBenchmark.scalaStringBuilder:·gc.time                                               thrpt    5       21.000                   ms
[info] SimpleConcatenationBenchmark.scalaStringConcatenation                                                  thrpt    5  5203704.202 ± 358525.371   ops/s
[info] SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.alloc.rate                                   thrpt    5     1798.550 ±    123.280  MB/sec
[info] SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.alloc.rate.norm                              thrpt    5      544.000 ±      0.001    B/op
[info] SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.churn.CodeHeap_'non-profiled_nmethods'       thrpt    5        0.002 ±      0.004  MB/sec
[info] SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm  thrpt    5       ≈ 10⁻³                 B/op
[info] SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.churn.G1_Old_Gen                             thrpt    5     1838.057 ±    718.382  MB/sec
[info] SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.churn.G1_Old_Gen.norm                        thrpt    5      556.103 ±    221.504    B/op
[info] SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.count                                        thrpt    5       27.000               counts
[info] SimpleConcatenationBenchmark.scalaStringConcatenation:·gc.time                                         thrpt    5       22.000                   ms
[info] Benchmark result is saved to jdk-9_scala-2.12.5.json
[success] Total time: 330 s, completed Mar 28, 2018 6:58:56 PM
